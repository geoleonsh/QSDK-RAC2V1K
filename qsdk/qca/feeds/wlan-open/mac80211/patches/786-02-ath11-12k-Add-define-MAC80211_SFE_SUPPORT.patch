From 69bef38c76d034d6b73e6ddb0b3576f5d0298cea Mon Sep 17 00:00:00 2001
From: Bhagavathi Perumal S <quic_bperumal@quicinc.com>
Date: Mon, 19 Jun 2023 23:44:58 +0530
Subject: [PATCH] ath11\12k: Add define MAC80211_SFE_SUPPORT

This patch add define MAC80211_SFE_SUPPORT to avoid compilation
error. the nss sfe pvt changes in kernel will cause compilaiton
error when built with upstream kernel.

Signed-off-by: Bhagavathi Perumal S <quic_bperumal@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/mac.c    | 2 ++
 drivers/net/wireless/ath/ath12k/bondif.c | 2 ++
 drivers/net/wireless/ath/ath12k/dp_tx.c  | 6 +++++-
 drivers/net/wireless/ath/ath12k/mac.c    | 2 ++
 net/mac80211/tx.c                        | 8 +++++---
 5 files changed, 16 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -7584,8 +7584,10 @@
 	int ret;
 	u64 adjusted_tsf;
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	if (skb->fast_xmit)
 		info_flags |= IEEE80211_TX_CTL_HW_80211_ENCAP;
+#endif
 
 	if (arvif->vdev_type == WMI_VDEV_TYPE_MONITOR) {
 		ieee80211_free_txskb(ar->hw, skb);
--- a/drivers/net/wireless/ath/ath12k/bondif.c
+++ b/drivers/net/wireless/ath/ath12k/bondif.c
@@ -570,7 +570,9 @@
 		return 0;
 	}
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	skb->fast_xmit = 0;
+#endif
 	return link_dev->netdev_ops->ndo_start_xmit(skb, link_dev);
 }
 
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -282,7 +282,11 @@
 #endif
 	dma_addr_t paddr;
 	int ret;
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	int len = skb->fast_xmit ? 256 : skb->len;
+#else
+	int len = skb->len;
+#endif
 
 	ring_id = smp_processor_id();
 
@@ -309,11 +313,13 @@
 	tx_desc->recycler_fast_xmit = 0;
 	tx_desc->timestamp = ktime_get_real();
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	/* the edma driver uses this flags to optimize the cache invalidation */
 	skb->fast_recycled = 1;
 	if (skb->is_from_recycler)
 		tx_desc->recycler_fast_xmit = 1;
 #endif
+#endif
 	skb_cb->vif = arvif->ahvif->vif;
 	skb_cb->paddr =  paddr;
 
@@ -1373,11 +1379,15 @@
 			skb_shinfo(msdu)->frag_list = NULL;
 		}
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 		if (likely(msdu->is_from_recycler)) {
 			__skb_queue_head(&free_list_head, msdu);
 		} else {
 			dev_kfree_skb(msdu);
 		}
+#else
+		dev_kfree_skb(msdu);
+#endif
 
 		work_done++;
 	}
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -9054,6 +9054,7 @@
 
 	ar = arvif->ar;
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	if (skb->fast_xmit) {
 		ret = ath12k_mac_tx_check_max_limit(ar, skb);
 		if (ret) {
@@ -9072,6 +9073,7 @@
 		}
 		return;
 	}
+#endif
 
 	ah = ar->ah;
 
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -4630,7 +4630,7 @@
 #ifdef CPTCFG_MAC80211_NSS_SUPPORT
 	ieee80211_xmit_nss_fixup(skb, dev);
 #endif
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	skb->fast_xmit = 0;
 #endif
 
@@ -4872,6 +4872,7 @@
 netdev_tx_t ieee80211_subif_start_xmit_8023(struct sk_buff *skb,
 					    struct net_device *dev)
 {
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	struct ieee80211_sub_if_data *sdata = IEEE80211_DEV_TO_SUB_IF(dev);
 	struct ieee80211_tx_info *info = IEEE80211_SKB_CB(skb);
 	struct ieee80211_tx_control control = {};
@@ -4906,9 +4907,10 @@
 		}
 
 		return NETDEV_TX_OK;
-	} else {
-		return __ieee80211_subif_start_xmit_8023(skb, dev, 0, 0, NULL);
 	}
+#endif
+	return __ieee80211_subif_start_xmit_8023(skb, dev, 0, 0, NULL);
+
 }
 
 netdev_tx_t __ieee80211_subif_start_xmit_8023(struct sk_buff *skb,
--- a/local-symbols
+++ b/local-symbols
@@ -68,6 +68,7 @@
 MAC80211_NSS_SUPPORT=
 MAC80211_PPE_SUPPORT=
 MAC80211_BONDED_SUPPORT=
+MAC80211_SFE_SUPPORT=
 WLAN=
 PCMCIA_RAYCS=
 PCMCIA_WL3501=
--- a/net/mac80211/Kconfig
+++ b/net/mac80211/Kconfig
@@ -131,12 +131,12 @@
 
 	  If unsure, say N.
 
-config MAC80211_BONDED_SUPPORT
-	bool "QTI mac80211 bonded support"
+config MAC80211_SFE_SUPPORT
+	bool "QTI mac80211 sfe support"
 	depends on ATH12K
 	default n
 	---help---
-	  Enables Bonded support for ATH12K driver
+	  Enables sfe support for ATH12K driver
 
 	  If unsure, say N.
 

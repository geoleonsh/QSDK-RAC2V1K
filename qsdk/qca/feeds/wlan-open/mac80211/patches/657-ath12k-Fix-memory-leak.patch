From cc50855ca3ea21a6f4fb92e452914f5b05c6339c Mon Sep 17 00:00:00 2001
From: Rajat Soni <quic_rajson@quicinc.com>
Date: Wed, 15 Feb 2023 14:04:54 -0800
Subject: [PATCH] ath12k: Fix memory leak

During rmmod, insmod and in SSR case memory leak is observed.
Allocate arsta->rx_stats and ar->tx_stats if arsta->rx_stats and ar->tx_stats
is NULL respectively. rx_stats/tx_stats for each arsta is allocated when adding
a station. arsta->rx_stats and arsta->tx_stats will be freed when a station is
removed. ath12k_mac_station_add is called multiple times, so we need to stop
allocating rx_stats multiple times for same arsta.

Signed-off-by: Sidhanta Sahu <quic_sidhanta@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c    | 13 ++++++++-----
 1 files changed, 8 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -5334,10 +5334,12 @@ static int ath12k_mac_station_add(struct
 		goto exit;
 	}
 
-	arsta->rx_stats = kzalloc(sizeof(*arsta->rx_stats), GFP_KERNEL);
 	if (!arsta->rx_stats) {
-		ret = -ENOMEM;
-		goto dec_num_station;
+		arsta->rx_stats = kzalloc(sizeof(*arsta->rx_stats), GFP_KERNEL);
+		if (!arsta->rx_stats) {
+			ret = -ENOMEM;
+			goto dec_num_station;
+		}
 	}
 
 	peer_param.vdev_id = arvif->vdev_id;
@@ -5354,8 +5356,9 @@ static int ath12k_mac_station_add(struct
 	ath12k_dbg(ab, ATH12K_DBG_MAC, "Added peer: %pM for VDEV: %d\n",
 		   sta->addr, arvif->vdev_id);
 
-	if (ath12k_debugfs_is_extd_tx_stats_enabled(ar)) {
-		arsta->tx_stats = kzalloc(sizeof(*arsta->tx_stats), GFP_KERNEL);
+	if (ath12k_debugfs_is_extd_tx_stats_enabled(ar) && (!arsta->tx_stats)) {
+		arsta->tx_stats = kzalloc(sizeof(*arsta->tx_stats),
+					  GFP_KERNEL);
 		if (!arsta->tx_stats) {
 			ret = -ENOMEM;
 			goto free_peer;

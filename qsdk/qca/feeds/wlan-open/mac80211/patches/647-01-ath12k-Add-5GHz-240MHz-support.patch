From 38c5026d180d5dc0a77744aca639df63a5eea6ca Mon Sep 17 00:00:00 2001
From: Karthik M <quic_karm@quicinc.com>
Date: Fri, 24 Jun 2022 11:22:40 +0530
Subject: [PATCH] ath12k : Add 5GHz 240MHz support

240MHz is supported in 5GHz for single band from channel
100 - 144 with right hand 80MHz puncturing in
320MHz bandwidth.

Updating maximum allowed bandwidth and allow
320MHz operation for the freqencies.

Signed-off-by: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
Signed-off-by: Karthik M <quic_karm@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c |  3 ++-
 drivers/net/wireless/ath/ath12k/reg.c | 11 ++++++++---
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 0463c32..d6ea35c 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -9464,7 +9464,8 @@ static int ath12k_mac_setup_iface_combinations(struct ath12k *ar)
 						BIT(NL80211_CHAN_WIDTH_40) |
 						BIT(NL80211_CHAN_WIDTH_80) |
 						BIT(NL80211_CHAN_WIDTH_80P80) |
-						BIT(NL80211_CHAN_WIDTH_160);
+						BIT(NL80211_CHAN_WIDTH_160) |
+						BIT(NL80211_CHAN_WIDTH_320);
 
 	ar->hw->wiphy->iface_combinations = combinations;
 	ar->hw->wiphy->n_iface_combinations = 1;
diff --git a/drivers/net/wireless/ath/ath12k/reg.c b/drivers/net/wireless/ath/ath12k/reg.c
index f45a641..9e8ffbb 100644
--- a/drivers/net/wireless/ath/ath12k/reg.c
+++ b/drivers/net/wireless/ath/ath12k/reg.c
@@ -727,8 +727,10 @@ ath12k_reg_build_regd(struct ath12k_base *ab,
                                 max_bw = 80;
                         else if ((reg_rule->start_freq == 5250) && (reg_rule->end_freq == 5330))
                                 max_bw = 80;
-			else if ((reg_rule->start_freq == 5735) && (reg_rule->end_freq == 5875))
-				max_bw = 80;
+                        else if ((reg_rule->start_freq == 5735) && (reg_rule->end_freq == 5875))
+                                max_bw = 80;
+                        else if ((reg_rule->start_freq == 5490) && (reg_rule->end_freq == 5730))
+                                max_bw = 240;
                         else
                                 max_bw = 160;
 #endif
@@ -738,7 +740,10 @@ ath12k_reg_build_regd(struct ath12k_base *ab,
 			 * BW correction if required and applies flags as
 			 * per other BW rule flags we pass from here
 			 */
-			flags = NL80211_RRF_AUTO_BW | NL80211_RRF_NO_320MHZ;
+			if ((reg_rule->start_freq == 5490) && (reg_rule->end_freq == 5730))
+				flags &= ~NL80211_RRF_NO_320MHZ;
+			else
+				flags = NL80211_RRF_AUTO_BW | NL80211_RRF_NO_320MHZ;
 			pwr_mode = 0;
 			if (reg_rule->end_freq <= ATH12K_MAX_5G_FREQ)
                                 ath12k_copy_reg_rule(&ab->reg_freq_5g, reg_rule);
-- 
2.7.4


From 0763cf3a8987df6da4865afd663f06890ec5c8a3 Mon Sep 17 00:00:00 2001
From: saleemuddin shaik <quic_saleemud@quicinc.com>
Date: Sat, 4 Mar 2023 14:12:52 +0530
Subject: ath11k: add statistic support for counting wmm failed received
 packets.

if the desc bit is not set and num_msdu is greater then one,
then increment the drop packets are counted based on WMM categories.

Signed-off-by: saleemuddin shaik <quic_saleemud@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/core.h    |  1 +
 drivers/net/wireless/ath/ath11k/debugfs.c | 12 ++++++++++++
 drivers/net/wireless/ath/ath11k/dp_rx.c   |  1 +
 3 files changed, 14 insertions(+)

--- a/drivers/net/wireless/ath/ath11k/core.h
+++ b/drivers/net/wireless/ath/ath11k/core.h
@@ -857,6 +857,7 @@ struct ath11k_wmm_stats {
 	u64 total_wmm_tx_pkts[WME_NUM_AC];
 	u64 total_wmm_rx_pkts[WME_NUM_AC];
 	u64 total_wmm_tx_drop[WME_NUM_AC];
+	u64 total_wmm_rx_drop[WME_NUM_AC];
 };
 
 #define ATH11K_FLUSH_TIMEOUT (5 * HZ)
--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -876,6 +876,7 @@ static ssize_t ath11k_read_wmm_stats(str
 	u64 total_wmm_sent_pkts = 0;
 	u64 total_wmm_received_pkts = 0;
 	u64 total_wmm_fail_sent = 0;
+	u64 total_wmm_fail_received = 0;
 
 	buf = kzalloc(size, GFP_KERNEL);
 	if (!buf)
@@ -886,6 +887,7 @@ static ssize_t ath11k_read_wmm_stats(str
 		total_wmm_sent_pkts += ar->wmm_stats.total_wmm_tx_pkts[count];
 		total_wmm_received_pkts += ar->wmm_stats.total_wmm_rx_pkts[count];
 		total_wmm_fail_sent += ar->wmm_stats.total_wmm_tx_drop[count];
+		total_wmm_fail_received += ar->wmm_stats.total_wmm_rx_drop[count];
 	}
 
 	len += scnprintf(buf + len, size - len, "total number of wmm_sent: %llu\n",
@@ -894,6 +896,8 @@ static ssize_t ath11k_read_wmm_stats(str
 			 total_wmm_received_pkts);
 	len += scnprintf(buf + len, size - len, "total number of wmm_fail_sent: %llu\n",
 			 total_wmm_fail_sent);
+	len += scnprintf(buf + len, size - len, "total number of wmm_fail_received: %llu\n",
+			 total_wmm_fail_received);
 	len += scnprintf(buf + len, size - len, "num of be wmm_sent: %llu\n",
 			 ar->wmm_stats.total_wmm_tx_pkts[WME_AC_BE]);
 	len += scnprintf(buf + len, size - len, "num of bk wmm_sent: %llu\n",
@@ -918,6 +922,14 @@ static ssize_t ath11k_read_wmm_stats(str
 			 ar->wmm_stats.total_wmm_tx_drop[WME_AC_VI]);
 	len += scnprintf(buf + len, size - len, "num of vo wmm_tx_dropped: %llu\n",
 			 ar->wmm_stats.total_wmm_tx_drop[WME_AC_VO]);
+	len += scnprintf(buf + len, size - len, "num of be wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_BE]);
+	len += scnprintf(buf + len, size - len, "num of bk wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_BK]);
+	len += scnprintf(buf + len, size - len, "num of vi wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_VI]);
+	len += scnprintf(buf + len, size - len, "num of vo wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_VO]);
 
 	mutex_unlock(&ar->conf_mutex);
 
--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -4753,8 +4753,7 @@ int ath11k_dp_process_rx_err(struct ath1
 	struct ath11k *ar;
 	dma_addr_t paddr;
 	u32 *desc;
-	bool is_frag;
-	u8 drop = 0;
+	bool is_frag, drop = false;
 
 	tot_n_bufs_reaped = 0;
 	quota = budget;
@@ -4800,7 +4799,7 @@ int ath11k_dp_process_rx_err(struct ath1
 		 * msdu's indicated due to error reasons.
 		 */
 		if (!is_frag || num_msdus > 1) {
-			drop = 1;
+			drop = true;
 			/* Return the link desc back to wbm idle list */
 			ath11k_dp_rx_link_desc_return(ab, desc,
 						      HAL_WBM_REL_BM_ACT_PUT_IN_IDLE);
@@ -4815,6 +4814,9 @@ int ath11k_dp_process_rx_err(struct ath1
 
 			ar = ab->pdevs[mac_id].ar;
 
+			if (drop)
+				ar->wmm_stats.total_wmm_rx_drop[ar->wmm_stats.rx_type]++;
+
 			if (!ath11k_dp_process_rx_err_buf(ar, desc, buf_id, drop)) {
 				n_bufs_reaped[mac_id]++;
 				tot_n_bufs_reaped++;

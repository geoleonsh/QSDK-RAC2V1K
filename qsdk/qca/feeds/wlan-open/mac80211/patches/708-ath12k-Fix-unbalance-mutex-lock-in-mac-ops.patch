From 660f90db8c809a3ddc985f576effd37319612947 Mon Sep 17 00:00:00 2001
From: Manish Dharanenthiran <quic_mdharane@quicinc.com>
Date: Thu, 19 Jan 2023 15:42:36 +0530
Subject: [PATCH] ath12k: Fix unbalance mutex lock in mac ops

Mutex lock/unlock is unbalanced in multipe
driver mac ops handlers during error cases.

Fix this by adding proper mutex lock/unlock
statement.

Signed-off-by: Manish Dharanenthiran <quic_mdharane@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 78e831f..1f5a381 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -6616,7 +6616,7 @@ static int ath12k_mac_op_sta_state(struct ieee80211_hw *hw,
 			ret = ath12k_mac_assign_link_sta(ah, ahsta, &ahsta->deflink,
 							   ahvif, link_id);
 			if (ret)
-				return ret;
+				goto exit;
 		}
 	}
 
@@ -6624,8 +6624,10 @@ static int ath12k_mac_op_sta_state(struct ieee80211_hw *hw,
 		arvif = ahvif->link[link_id];
 		arsta = ahsta->link[link_id];
 
-		if (WARN_ON(arvif == NULL || arsta == NULL))
-			return -EINVAL;
+		if (WARN_ON(arvif == NULL || arsta == NULL)) {
+			ret = -EINVAL;
+			goto exit;
+		}
 
 		ret = ath12k_mac_handle_link_sta_state(hw, arvif, arsta,
 						       old_state, new_state);
@@ -6634,8 +6636,10 @@ static int ath12k_mac_op_sta_state(struct ieee80211_hw *hw,
 	}
 
 	/* Support only AP for now */
-	if (vif->type != NL80211_IFTYPE_AP)
-		return -EINVAL;
+	if (vif->type != NL80211_IFTYPE_AP) {
+		ret = -EINVAL;
+		goto exit;
+	}
 
 	if (!sta->valid_links)
 		WARN_ON(1);
@@ -12511,7 +12515,8 @@ ath12k_mac_op_set_bitrate_mask(struct ieee80211_hw *hw,
 			num_rates != 1) {
 		ath12k_warn(ar->ab,
 				"Setting HE UL MCS Fixed Rate range is not supported\n");
-		return -EINVAL;
+		ret = -EINVAL;
+		goto out;
 	}
 
 	/* mac80211 doesn't support sending a fixed HT/VHT MCS alone, rather it
@@ -12546,8 +12551,10 @@ ath12k_mac_op_set_bitrate_mask(struct ieee80211_hw *hw,
 	} else {
 		rate = WMI_FIXED_RATE_NONE;
 
-		if (!ath12k_mac_check_fixed_rate_settings_for_mumimo(arvif, vht_mcs_mask, he_mcs_mask))
-			return -EINVAL;
+		if (!ath12k_mac_check_fixed_rate_settings_for_mumimo(arvif, vht_mcs_mask, he_mcs_mask)) {
+			ret = -EINVAL;
+			goto out;
+		}
 
 		if (!ath12k_mac_validate_fixed_rate_settings(ar, band, mask))
 			ath12k_warn(ar->ab,
-- 
2.17.1


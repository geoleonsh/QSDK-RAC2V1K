From e2a1660fada3d633d3a8a43d0ac45691262bfc05 Mon Sep 17 00:00:00 2001
From: Nagarajan Maran <quic_nmaran@quicinc.com>
Date: Tue, 13 Jun 2023 17:22:10 +0530
Subject: [PATCH] wifi: ath12k: Move SAWF and Telemetry under conditional
 enabling

Move SAWF and Telemetry code under the flag "CPTCFG_ATH12K_SAWF"
since openwrt-23 project is facing build issues as NSS modules
are not present in that project.

Signed-off-by: Nagarajan Maran <quic_nmaran@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/Kconfig     |  7 +++++++
 drivers/net/wireless/ath/ath12k/Makefile    |  5 ++---
 drivers/net/wireless/ath/ath12k/core.c      | 11 ++++++++++-
 drivers/net/wireless/ath/ath12k/core.h      |  2 ++
 drivers/net/wireless/ath/ath12k/dp_rx.c     |  5 ++++-
 drivers/net/wireless/ath/ath12k/dp_tx.c     | 10 ++++++++++
 drivers/net/wireless/ath/ath12k/peer.h      |  2 ++
 drivers/net/wireless/ath/ath12k/sawf.h      |  3 +++
 drivers/net/wireless/ath/ath12k/telemetry.h |  2 ++
 drivers/net/wireless/ath/ath12k/vendor.c    |  7 +++++--
 drivers/net/wireless/ath/ath12k/vendor.h    |  6 +++++-
 drivers/net/wireless/ath/ath12k/wmi.c       |  6 ++++++
 local-symbols                               |  1 +
 13 files changed, 59 insertions(+), 8 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/Kconfig
+++ b/drivers/net/wireless/ath/ath12k/Kconfig
@@ -79,3 +79,10 @@ config ATH12K_BONDED_DS_SUPPORT
 		Enable ath12k Bonded-DS support
 
 		Say Y to enable Bonded DS Support. If unsure, say N.
+
+config ATH12K_SAWF
+	bool "ath12k Service Aware WiFi Framework and Telemetry support"
+	depends on ATH12K
+	help
+	  Enable ath12k SAWF and telemetry support
+	  Say Y to enable. If unsure, say N.
--- a/drivers/net/wireless/ath/ath12k/Makefile
+++ b/drivers/net/wireless/ath/ath12k/Makefile
@@ -21,9 +21,7 @@ ath12k-y += core.o \
 	    mhi.o \
 	    pci.o \
 	    dp_mon.o \
-	    sawf.o \
-	    vendor.o \
-	    telemetry.o
+	    vendor.o
 
 ath12k-$(CPTCFG_ATH12K_DEBUGFS) += debugfs.o debugfs_htt_stats.o debugfs_sta.o
 ath12k-$(CPTCFG_NL80211_TESTMODE) += testmode.o
@@ -35,6 +33,7 @@ ath12k-$(CPTCFG_ATH12K_PKTLOG) += pktlog
 ath12k-$(CPTCFG_ATH12K_AHB) += ahb.o
 ath12k-$(CPTCFG_ATH12K_PPE_DS_SUPPORT) += ppe.o
 ath12k-$(CPTCFG_ATH12K_BONDED_DS_SUPPORT) += bondif.o
+ath12k-$(CPTCFG_ATH12K_SAWF) += sawf.o telemetry.o
 
 # for tracing framework to find trace.h
 CFLAGS_trace.o := -I$(src)
--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -1954,9 +1954,10 @@ static void ath12k_core_restart(struct w
 			mutex_unlock(&ah->conf_mutex);
 		}
 	}
-
+#ifdef CPTCFG_ATH12K_SAWF
 	if (ath12k_sawf_reconfigure_on_crash(ab))
 		ath12k_warn(ab, "SAWF SLA reconfiguring failed\n");
+#endif /* CPTCFG_ATH12K_SAWF */
 }
 
 static void ath12k_rproc_recovery_do_coredump(struct rproc *rproc)
@@ -2486,6 +2487,8 @@ err_sc_free:
 	return NULL;
 }
 
+#ifdef CPTCFG_ATH12K_SAWF
+
 int ath12k_send_sawf_configs_soc(struct ath12k_sawf_svc_params *new_param)
 {
 	struct ath12k_hw_group *ag;
@@ -2567,6 +2570,8 @@ int ath12k_core_sawf_ul_config(struct ne
 	return ret;
 }
 
+#endif /* CPTCFG_ATH12K_SAWF */
+
 static int ath12k_init(void)
 {
 	int ret;
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -1568,9 +1568,11 @@ void ath12k_fw_stats_pdevs_free(struct l
 void ath12k_fw_stats_bcn_free(struct list_head *head);
 void ath12k_fw_stats_reset(struct ath12k *ar);
 void ath12k_fw_stats_free(struct ath12k_fw_stats *stats);
+#ifdef CPTCFG_ATH12K_SAWF
 int ath12k_send_sawf_configs_soc(struct ath12k_sawf_svc_params *new_param);
 int ath12k_sawf_send_disable_soc(u8 svc_id);
 int ath12k_core_sawf_ul_config(struct net_device *dev, struct ath12k_sawf_wmi_peer_latency_param *latency_info);
+#endif /* CPTCFG_ATH12K_SAWF */
 
 static inline const char *ath12k_scan_state_str(enum ath12k_scan_state state)
 {
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -2036,6 +2036,7 @@ next:
 	}
 }
 
+#ifdef CPTCFG_ATH12K_SAWF
 static void ath12k_htt_sawf_info_ind_handler(struct ath12k_base *ab,
 					     struct sk_buff *skb)
 {
@@ -2076,7 +2077,7 @@ static void ath12k_htt_sawf_info_ind_han
 		   ast_idx,
 		   tgt_opaque_id);
 }
-
+#endif /* CPTCFG_ATH12K_SAWF */
 void ath12k_dp_htt_htc_t2h_msg_handler(struct ath12k_base *ab,
 				       struct sk_buff *skb)
 {
@@ -2174,12 +2175,14 @@ void ath12k_dp_htt_htc_t2h_msg_handler(s
 	case HTT_T2H_MSG_TYPE_VDEV_TXRX_STATS_PERIODIC_IND:
 		ath12k_htt_vdev_txrx_stats_handler(ab, skb);
 		break;
+#ifdef CPTCFG_ATH12K_SAWF
 	case HTT_T2H_MSG_TYPE_SAWF_MSDUQ_INFO_IND:
 		ath12k_htt_sawf_info_ind_handler(ab, skb);
 		break;
 	case HTT_T2H_MSG_TYPE_SAWF_DEF_QUEUES_MAP_REPORT_CONF:
 		ath12k_htt_sawf_def_q_map_report_handler(ab, skb);
 		break;
+#endif /* CPTCFG_ATH12K_SAWF */
 	default:
 		ath12k_dbg(ab, ATH12K_DBG_DP_HTT, "dp_htt event %d not handled\n",
 			   type);
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -14,6 +14,7 @@
 #include <linux/dma-mapping.h>
 #include <asm/cacheflush.h>
 
+#ifdef CPTCFG_ATH12K_SAWF
 static inline u32 ath12k_sawf_get_tcl_metadata_update(u32 sk_buff_mark)
 {
 	u32 tcl_metadata = 0;
@@ -45,6 +46,7 @@ static inline u32 ath12k_sawf_get_tcl_cm
 	return update;
 }
 
+#endif /* CPTCFG_ATH12K_SAWF */
 static enum hal_tcl_encap_type
 ath12k_dp_tx_get_encap_type(struct ath12k_link_vif *arvif, struct sk_buff *skb)
 {
@@ -340,6 +342,7 @@ int ath12k_dp_tx_direct(struct ath12k_li
 	tcl_desc.info3 = arvif->desc.info3;
 	tcl_desc.info4 =  arvif->desc.info4;
 	tcl_desc.info5 = 0;
+#ifdef CPTCFG_ATH12K_SAWF
 	/* SAWF */
 	if (u32_get_bits(skb->mark, SAWF_TAG_ID) == SAWF_VALID_TAG) {
 		u32 msduq_id    = u32_get_bits(skb->mark, SAWF_MSDUQ_ID);
@@ -353,6 +356,7 @@ int ath12k_dp_tx_direct(struct ath12k_li
 							 HAL_TCL_DATA_CMD_INFO1_CMD_NUM);
 		}
 	}
+#endif
 	memcpy(hal_tcl_desc, &tcl_desc, sizeof(tcl_desc));
 	dsb(st);
 	ath12k_hal_srng_access_umac_src_ring_end_nolock(tcl_ring);
@@ -444,6 +448,7 @@ int ath12k_dp_tx(struct ath12k *ar, stru
 	 * SAWF and Global Seq Number are mutually exclusive.
 	 * Global Seq Number - Multicast, SAWF - Unicast
 	 */
+#ifdef CPTCFG_ATH12K_SAWF
 	if (u32_get_bits(skb->mark, SAWF_TAG_ID) == SAWF_VALID_TAG) {
 		u32 msduq_id    = u32_get_bits(skb->mark, SAWF_MSDUQ_ID);
 		if (msduq_id < (ab->max_msduq_per_tid * ATH12K_SAWF_MAX_TID_SUPPORT)) {
@@ -451,6 +456,9 @@ int ath12k_dp_tx(struct ath12k *ar, stru
 				ath12k_sawf_get_tcl_metadata_update(skb->mark);
 		}
 	} else if (gsn_valid) {
+#else
+	if (gsn_valid) {
+#endif /* CPTCFG_ATH12K_SAWF */
 		ti.meta_data_flags = u32_encode_bits(HTT_TCL_META_DATA_TYPE_GLOBAL_SEQ_NUM,
 						     HTT_TCL_META_DATA_TYPE_MISSION) |
 				     u32_encode_bits(mcbc_gsn, HTT_TCL_META_DATA_GLOBAL_SEQ_NUM);
@@ -628,6 +636,7 @@ int ath12k_dp_tx(struct ath12k *ar, stru
 	tcl_cmd->info4 = arvif->desc.info4;
 	tcl_cmd->info5 = 0;
 
+#ifdef CPTCFG_ATH12K_SAWF
 	/* SAWF */
 	if (u32_get_bits(skb->mark, SAWF_TAG_ID) == SAWF_VALID_TAG) {
 		u32 msduq_id    = u32_get_bits(skb->mark, SAWF_MSDUQ_ID);
@@ -637,6 +646,7 @@ int ath12k_dp_tx(struct ath12k *ar, stru
 				ath12k_sawf_get_tcl_cmd_info3_update(msduq_id);
 		}
 	}
+#endif /* CPTCFG_ATH12K_SAWF */
 
 	dsb(st);
 	ath12k_hal_srng_access_umac_src_ring_end_nolock(tcl_ring);
--- a/drivers/net/wireless/ath/ath12k/peer.h
+++ b/drivers/net/wireless/ath/ath12k/peer.h
@@ -25,7 +25,9 @@ struct ath12k_peer {
 	struct list_head list;
 	struct ieee80211_sta *sta;
 	struct ieee80211_vif *vif;
+#ifdef CPTCFG_ATH12K_SAWF
 	struct ath12k_sawf_peer_ctx sawf_ctx_peer;
+#endif /* CPTCFG_ATH12K_SAWF */
 	int vdev_id;
 	u8 addr[ETH_ALEN];
 	int peer_id;
--- a/drivers/net/wireless/ath/ath12k/sawf.h
+++ b/drivers/net/wireless/ath/ath12k/sawf.h
@@ -6,6 +6,8 @@
 #ifndef ATH12K_SAWF_H
 #define ATH12K_SAWF_H
 
+#ifdef CPTCFG_ATH12K_SAWF
+
 #define ATH12K_MAC_ADDR_SIZE	6
 #define DP_SAWF_INVALID_PARAM	-1
 
@@ -495,4 +497,16 @@ int ath12k_sawf_def_qmap_report_req(stru
 
 void ath12k_htt_sawf_def_q_map_report_handler(struct ath12k_base *ab,
 					      struct sk_buff *skb);
+
+#else /* CPTCFG_ATH12K_SAWF */
+
+static inline void ath12k_sawf_init(struct ath12k_base *ab) {
+	return;
+}
+
+static inline void ath12k_sawf_deinit(struct ath12k_base *ab) {
+	return;
+}
+
+#endif /* CPTCFG_ATH12K_SAWF */
 #endif /* ATH11K_SAWF_H */
--- a/drivers/net/wireless/ath/ath12k/telemetry.h
+++ b/drivers/net/wireless/ath/ath12k/telemetry.h
@@ -6,6 +6,7 @@
 #ifndef ATH12K_TELEMETRY_H
 #define ATH12K_TELEMETRY_H
 
+#ifdef CPTCFG_ATH12K_SAWF
 
 /**
  * struct ath12k_sla_samples_cfg- telemetry sawf sla samples configuration
@@ -101,4 +102,15 @@ int ath12k_telemetry_sawf_sla_samples_co
 int ath12k_telemetry_sawf_sla_thershold_config(struct ath12k_sla_thershold_cfg param);
 int ath12k_telemetry_sawf_sla_detection_config(struct ath12k_sla_detect_cfg param);
 
+#else /* CPTCFG_ATH12K_SAWF */
+
+static inline void ath12k_telemetry_init(struct ath12k_base *ab) {
+	return;
+}
+
+static inline void ath12k_telemetry_deinit(struct ath12k_base *ab) {
+	return;
+}
+
+#endif /* CPTCFG_ATH12K_SAWF */
 #endif /* ATH12K_TELEMETRY_H */
--- a/drivers/net/wireless/ath/ath12k/vendor.c
+++ b/drivers/net/wireless/ath/ath12k/vendor.c
@@ -7,9 +7,10 @@
 #include "core.h"
 #include "debug.h"
 #include "mac.h"
-#include "sawf.h"
 #include "telemetry.h"
+#include "sawf.h"
 
+#ifdef CPTCFG_ATH12K_SAWF
 static const struct nla_policy
 ath12k_vendor_sawf_config_policy[QCA_WLAN_VENDOR_SAWF_ATTR_CONFIG_MAX + 1] = {
 	[QCN_WLAN_VENDOR_ATTR_SAWF_SERVICE_CLASSES] = {.type = NLA_NESTED},
@@ -603,8 +604,9 @@ static int ath12k_vendor_telemetry_sawf_
 
 	return ret;
 }
-
+#endif /* CPTCFG_ATH12K_SAWF */
 static struct wiphy_vendor_command ath12k_vendor_commands[] = {
+#ifdef CPTCFG_ATH12K_SAWF
 	{
 		.info.vendor_id = QCA_NL80211_VENDOR_ID,
 		.info.subcmd = QCA_NL80211_VENDOR_SUBCMD_SVC_CREATE,
@@ -671,6 +673,7 @@ static struct wiphy_vendor_command ath12
 		.policy = ath12k_vendor_telemetry_sawf_sla_detect_config_policy,
 		.maxattr = QCA_WLAN_VENDOR_TELEMETRY_SLA_DETECT_ATTR_CONFIG_MAX,
 	},
+#endif
 };
 
 int ath12k_vendor_register(struct ath12k_hw *ah)
--- a/drivers/net/wireless/ath/ath12k/vendor.h
+++ b/drivers/net/wireless/ath/ath12k/vendor.h
@@ -10,7 +10,7 @@
 enum qca_nl80211_vendor_subcmds {
 	/* Wi-Fi configuration subcommand */
 	QCA_NL80211_VENDOR_SUBCMD_SET_WIFI_CONFIGURATION = 74,
-
+#ifdef CPTCFG_ATH12K_SAWF
 	QCA_NL80211_VENDOR_SUBCMD_SVC_CREATE = 204,
 	QCA_NL80211_VENDOR_SUBCMD_SVC_DISABLE = 205,
 	QCA_NL80211_VENDOR_SUBCMD_SVC_VIEW = 206,
@@ -20,8 +20,10 @@ enum qca_nl80211_vendor_subcmds {
 	QCA_NL80211_VENDOR_SUBCMD_TELEMETRY_SLA_THERSHOLD_CFG = 210,
 	QCA_NL80211_VENDOR_SUBCMD_TELEMETRY_SLA_SAMPLES_CFG = 211,
 	QCA_NL80211_VENDOR_SUBCMD_TELEMETRY_SLA_BREACH_DETECTION_CFG = 212,
+#endif /* CPTCFG_ATH12K_SAWF */
 };
 
+#ifdef CPTCFG_ATH12K_SAWF
 enum qca_wlan_vendor_sawf_attr_config {
 	QCN_WLAN_VENDOR_ATTR_SAWF_SERVICE_CLASSES = 1,
 	QCN_WLAN_VENDOR_ATTR_SAWF_SVC_ID,
@@ -103,5 +105,7 @@ enum qca_wlan_vendor_attr_telemetry_sawf
 	QCA_WLAN_VENDOR_TELEMETRY_SLA_THERSHOLD_CFG_AFTER_LAST - 1,
 };
 
+#endif /* CPTCFG_ATH12K_SAWF */
+
 int ath12k_vendor_register(struct ath12k_hw *ah);
 #endif /* QCA_VENDOR_H */
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -5066,8 +5066,10 @@ ath12k_wmi_copy_resource_config(struct w
 			  WMI_RSRC_CFG_FLAGS2_INTRABSS_MEC_WDS_LEARNING_DISABLE |
 			  u32_encode_bits(tg_cfg->dp_peer_meta_data_ver,
 					  WMI_RSRC_CFG_FLAGS2_RX_PEER_METADATA_VERSION);
+#ifdef CPTCFG_ATH12K_SAWF
 	wmi_cfg->flags2 |= (tg_cfg->sawf & ath12k_sawf_enable) ?
 			   (WMI_RSRC_CFG_FLAGS2_SAWF_CONFIG_ENABLE_SET) : (0);
+#endif /* CPTCFG_ATH12K_SAWF */
 	wmi_cfg->host_service_flags &= ~(1 << WMI_RSRC_CFG_HOST_SVC_FLAG_REG_CC_EXT_SUPPORT_BIT);
 	wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_SVC_FLAG_REG_CC_EXT_SUPPORT_BIT;
 	wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_SVC_FLAG_REO_QREF_SUPPORT_BIT;
@@ -14257,6 +14259,8 @@ int ath12k_wmi_vdev_adfs_ocac_abort_cmd_
 	return ret;
 }
 
+#ifdef CPTCFG_ATH12K_SAWF
+
 int ath12k_wmi_svc_config_send(struct ath12k *ar, struct ath12k_sawf_svc_params *param)
 {
 	struct ath12k_pdev_wmi *wmi = ar->wmi;
@@ -14342,6 +14346,8 @@ int ath12k_wmi_svc_send_disable(struct a
 	return ret;
 }
 
+#endif /* CPTCFG_ATH12K_SAWF */
+
 static void ath12k_wmi_put_peer_list(struct ath12k_base *ab,
 				     struct wmi_chan_width_peer_list *peer_list,
 				     struct wmi_chan_width_peer_arg *peer_arg,
--- a/local-symbols
+++ b/local-symbols
@@ -146,3 +146,4 @@ ATH12K_SPECTRAL=
 ATH12K_PKTLOG=
 ATH12K_PPE_DS_SUPPORT=
 ATH12K_BONDED_DS_SUPPORT=
+ATH12K_SAWF=

From 1c004194236b5fe564ca6f267bf8ea152a29f339 Mon Sep 17 00:00:00 2001
From: Karthikeyan Kathirvel <quic_kathirve@quicinc.com>
Date: Wed, 4 Jan 2023 12:17:19 +0530
Subject: [PATCH] ath12k: fix hal_rx_desc skb corruption

In dp_rx_process_msdu, the rx_desc is pulled out and moved the head
pointer to payload of a msdu but while in undecap the headroom is
modified to store the dot11 info. Eventually the dot11 info is filled
from rx_desc(skb->head) which already modified to accomodate the dot11
header this inturn corrupts the original data from rx_desc and creates
high possibility of filling invalid info to dot11 hdr. This skb
corruption makes the msdu invalid.

Fixed by storing rx_desc to a local variable and assigned it to
rxcb->rx_desc.

Signed-off-by: Karthikeyan Kathirvel <quic_kathirve@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -3029,10 +3029,11 @@ static int ath12k_dp_rx_process_msdu(str
 				     struct sk_buff *msdu,
 				     struct sk_buff_head *msdu_list,
 				     struct ieee80211_rx_status *rx_status,
+				     struct hal_rx_desc *rx_desc,
 				     bool *fast_rx)
 {
 	struct ath12k_base *ab = ar->ab;
-	struct hal_rx_desc *rx_desc, *lrx_desc;
+	struct hal_rx_desc *lrx_desc;
 	struct ath12k_skb_rxcb *rxcb;
 	struct sk_buff *last_buf;
 	u8 l3_pad_bytes;
@@ -3048,7 +3049,12 @@ static int ath12k_dp_rx_process_msdu(str
 		goto free_out;
 	}
 
-	rx_desc = (struct hal_rx_desc *)msdu->data;
+	/*
+	 * Store the hal_rx_desc into a local structure,
+	 * further skb_push's will modify the headroom(rx_desc) in
+	 * undecap
+	 */
+	*rx_desc = *(struct hal_rx_desc *)msdu->data;
 	lrx_desc = (struct hal_rx_desc *)last_buf->data;
 	if (!ath12k_dp_rx_h_msdu_done(ab, lrx_desc)) {
 		ath12k_warn(ab, "msdu_done bit in msdu_end is not set\n");
@@ -3122,6 +3128,8 @@ static void ath12k_dp_rx_process_receive
 	rcu_read_lock();
 
 	while ((msdu = __skb_dequeue(msdu_list))) {
+		struct hal_rx_desc rx_desc = {0};
+
 		rxcb = ATH12K_SKB_RXCB(msdu);
 		/* Enable fast rx by default, the value will cahnge based on peer cap
                 * and packet type */
@@ -3153,7 +3161,8 @@ static void ath12k_dp_rx_process_receive
 			continue;
 		}
 
-		ret = ath12k_dp_rx_process_msdu(ar, msdu, msdu_list, &rx_status, &fast_rx);
+		ret = ath12k_dp_rx_process_msdu(ar, msdu, msdu_list, &rx_status,
+				&rx_desc, &fast_rx);
 		if (ret) {
 			ath12k_dbg(ab, ATH12K_DBG_DATA,
 				   "Unable to process %s chip_id %d msdu %d",

From 142bb07525786d2ed1ab40c093884d3399d575f0 Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Tue, 18 Apr 2023 11:41:41 +0530
Subject: [PATCH] ath12k: add link_sta in
 ath12k_mac_validate_fixed_rate_settings

Currently, we are using legacy sta in ath12k_mac_validate_fixed_rate_setting
which is not working in multi-link operation.

So add link_sta in ath12k_mac_validate_fixed_rate_setting.

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 29 ++++++++++++++++++---------
 1 file changed, 19 insertions(+), 10 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 80e5fa3..8382d1c 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -12936,7 +12936,8 @@ static void ath12k_mac_disable_peer_fixed_rate(void *data,
 
 static bool
 ath12k_mac_validate_fixed_rate_settings(struct ath12k *ar, enum nl80211_band band,
-					const struct cfg80211_bitrate_mask *mask)
+					const struct cfg80211_bitrate_mask *mask,
+					unsigned int link_id)
 {
 	bool eht_fixed_rate = false, he_fixed_rate = false, vht_fixed_rate = false;
 	bool he_ul_fixed_rate = false;
@@ -12944,6 +12945,7 @@ ath12k_mac_validate_fixed_rate_settings(struct ath12k *ar, enum nl80211_band ban
 	const u16 *vht_mcs_mask, *he_mcs_mask, *eht_mcs_mask, *he_ul_mcs_mask;
 	u8 vht_nss, he_nss, eht_nss, he_ul_nss;
 	bool ret = true;
+	struct ieee80211_link_sta *link_sta;
 
 	vht_mcs_mask = mask->control[band].vht_mcs;
 	he_mcs_mask = mask->control[band].he_mcs;
@@ -12974,26 +12976,33 @@ ath12k_mac_validate_fixed_rate_settings(struct ath12k *ar, enum nl80211_band ban
 	spin_lock_bh(&ar->ab->base_lock);
 	list_for_each_entry_safe(peer, tmp, &ar->ab->peers, list) {
 		if (peer->sta) {
-			if (vht_fixed_rate && (!peer->sta->deflink.vht_cap.vht_supported ||
-					       peer->sta->deflink.rx_nss < vht_nss)) {
+			link_sta = rcu_dereference(peer->sta->link[link_id]);
+
+			if (!link_sta) {
+				ret = false;
+				goto exit;
+			}
+
+			if (vht_fixed_rate && (!link_sta->vht_cap.vht_supported ||
+					       link_sta->rx_nss < vht_nss)) {
 				ret = false;
 				goto exit;
 			}
-			if (he_fixed_rate && (!peer->sta->deflink.he_cap.has_he ||
-					      peer->sta->deflink.rx_nss < he_nss)) {
+			if (he_fixed_rate && (!link_sta->he_cap.has_he ||
+					      link_sta->rx_nss < he_nss)) {
 				ret = false;
 				goto exit;
 			}
-			if (eht_fixed_rate && (!peer->sta->deflink.eht_cap.has_eht ||
-					       peer->sta->deflink.rx_nss < eht_nss)) {
+			if (eht_fixed_rate && (!link_sta->eht_cap.has_eht ||
+					       link_sta->rx_nss < eht_nss)) {
 				ret = false;
 				goto exit;
 			}
 			/* TODO:
 			*	check when UL is valid
 			*/
-			if (he_ul_fixed_rate && (!peer->sta->deflink.he_cap.has_he ||
-					peer->sta->deflink.rx_nss < he_ul_nss)) {
+			if (he_ul_fixed_rate && (!link_sta->he_cap.has_he ||
+					link_sta->rx_nss < he_ul_nss)) {
 				ret = false;
 				goto exit;
 			}
@@ -13197,7 +13206,7 @@ ath12k_mac_op_set_bitrate_mask(struct ieee80211_hw *hw,
 			goto out;
 		}
 
-		if (!ath12k_mac_validate_fixed_rate_settings(ar, band, mask))
+		if (!ath12k_mac_validate_fixed_rate_settings(ar, band, mask, link_id))
 			ath12k_warn(ar->ab,
 				    "could not update fixed rate settings to all peers due to mcs/nss incompaitiblity\n");
 		nss = min_t(u32, ar->num_tx_chains,
-- 
2.17.1


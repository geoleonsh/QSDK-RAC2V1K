From 216cd6e51a525b6aa3ba672631891c9fb6de696f Mon Sep 17 00:00:00 2001
From: Aishwarya R <quic_aisr@quicinc.com>
Date: Tue, 15 Feb 2022 17:45:53 +0530
Subject: [PATCH] mac80211: copy MU-MIMO and OFDMA HE capability flags to
 driver

Pass MU-MIMO and OFDMA configurations from user space to driver.

Signed-off-by: Aishwarya R <quic_aisr@quicinc.com>
---
 include/net/mac80211.h | 10 ++++++++++
 net/mac80211/cfg.c     | 14 ++++++++++++++
 2 files changed, 24 insertions(+)

--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -647,6 +647,12 @@ struct ieee80211_fils_discovery {
  *	in order to discover all the nontransmitted BSSIDs in the set.
  * @he_oper: HE operation information of the BSS (AP/Mesh) or of the AP we are
  *	connected to (STA)
+ * @he_su_beamformer: does this BSS support operation as a HE SU beamformer
+ * @he_su_beamformee: does this BSS support operation as a HE SU beamformee
+ * @he_mu_beamformer: does this BSS support operation as a HE MU beamformer
+ * @he_full_ul_mumimo: does this BSS support the reception (AP) or transmission
+ *     (non-AP STA) of an HE TB PPDU on an RU that spans the entire PPDU
+ *     bandwidth
  * @he_obss_pd: OBSS Packet Detection parameters.
  * @he_bss_color: BSS coloring settings, if BSS supports HE
  * @fils_discovery: FILS discovery configuration
@@ -725,6 +731,10 @@ struct ieee80211_bss_conf {
 		u32 params;
 		u16 nss_set;
 	} he_oper;
+	bool he_su_beamformer;
+	bool he_su_beamformee;
+	bool he_mu_beamformer;
+	bool he_full_ul_mumimo;
 	struct ieee80211_he_obss_pd he_obss_pd;
 	struct ieee80211_he_cap_elem  he_cap_elem;
 	struct cfg80211_he_bss_color he_bss_color;
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -1303,6 +1303,18 @@ static int ieee80211_start_ap(struct wip
 	if (params->he_cap) {
 		memcpy(&sdata->vif.bss_conf.he_cap_elem, params->he_cap,
 		       sizeof(*params->he_cap));
+		sdata->vif.bss_conf.he_su_beamformer =
+			params->he_cap->phy_cap_info[3] &
+			IEEE80211_HE_PHY_CAP3_SU_BEAMFORMER;
+		sdata->vif.bss_conf.he_su_beamformee =
+			params->he_cap->phy_cap_info[4] &
+			IEEE80211_HE_PHY_CAP4_SU_BEAMFORMEE;
+		sdata->vif.bss_conf.he_mu_beamformer =
+			params->he_cap->phy_cap_info[4] &
+			IEEE80211_HE_PHY_CAP4_MU_BEAMFORMER;
+		sdata->vif.bss_conf.he_full_ul_mumimo =
+			params->he_cap->phy_cap_info[2] &
+			IEEE80211_HE_PHY_CAP2_UL_MU_FULL_MU_MIMO;
 	}
 
 	mutex_lock(&local->mtx);

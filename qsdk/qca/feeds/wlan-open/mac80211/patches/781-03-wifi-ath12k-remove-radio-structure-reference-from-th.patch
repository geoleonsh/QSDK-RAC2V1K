From 9091e497e4824145f6cd4362dbabddd9527c1997 Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Thu, 8 Jun 2023 09:56:03 +0530
Subject: [PATCH] wifi: ath12k: remove radio structure reference from the skb
 tx control buffer

Current Tx skb control buffer not has enough to accomodate new member, so
removed the unused radio structure reference. Also if we need radio reference,
we can achieve through the link id reference.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/bondif.c | 1 -
 drivers/net/wireless/ath/ath12k/core.h   | 1 -
 drivers/net/wireless/ath/ath12k/mac.c    | 1 -
 3 files changed, 3 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/bondif.c
+++ b/drivers/net/wireless/ath/ath12k/bondif.c
@@ -345,7 +345,6 @@ int ath12k_mcast_dp_tx(struct ath12k *ar
 	ti.data_len = skb->len - ti.pkt_offset;
 	skb_cb->paddr = ti.paddr;
 	skb_cb->vif = ahvif->vif;
-	skb_cb->ar = ar;
 
 	hal_ring_id = tx_ring->tcl_data_ring.ring_id;
 	tcl_ring = &ab->hal.srng_list[hal_ring_id];
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -115,7 +115,6 @@ struct ath12k_skb_cb {
 	u8 eid;
 	u8 flags;
 	u32 cipher;
-	struct ath12k *ar;
 	struct ieee80211_vif *vif;
 	dma_addr_t paddr_ext_desc;
 	u8 link_id;
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -8517,7 +8517,6 @@ static int ath12k_mac_mgmt_tx_wmi(struct
 	int ret;
 	bool link_agnostic;
 
-	ATH12K_SKB_CB(skb)->ar = ar;
 	spin_lock_bh(&ar->txmgmt_idr_lock);
 	buf_id = idr_alloc(&ar->txmgmt_idr, skb, 0,
 			   ATH12K_TX_MGMT_NUM_PENDING_MAX, GFP_ATOMIC);
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -558,7 +558,6 @@ int ath12k_dp_tx(struct ath12k *ar, stru
 	ti.data_len = skb->len - ti.pkt_offset;
 	skb_cb->paddr = ti.paddr;
 	skb_cb->vif = ahvif->vif;
-	skb_cb->ar = ar;
 
 	if (unlikely(msdu_ext_desc)) {
 		skb_ext_desc = dev_alloc_skb(sizeof(struct hal_tx_msdu_ext_desc));

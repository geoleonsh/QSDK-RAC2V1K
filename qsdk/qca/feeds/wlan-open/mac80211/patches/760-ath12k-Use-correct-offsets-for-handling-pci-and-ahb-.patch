From dc6aae5eb6b1f431a645dd792c6d7de248215f35 Mon Sep 17 00:00:00 2001
From: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Date: Mon, 3 Apr 2023 13:03:15 -0700
Subject: [PATCH] ath12k: Use correct offsets for handling pci and ahb
 interrupts during tx completion

Using static pci interrupt offset handling functions while accessing tx
completion rings,
will not work for ahb interrupts.
This change makes provision for ahb interrupt handling as
well.

Signed-off-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/hal.c | 26 +++++++++++++++++---------
 1 file changed, 17 insertions(+), 9 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/hal.c b/drivers/net/wireless/ath/ath12k/hal.c
index 98b6aa2..4ce98b4 100644
--- a/drivers/net/wireless/ath/ath12k/hal.c
+++ b/drivers/net/wireless/ath/ath12k/hal.c
@@ -2028,10 +2028,14 @@ int ath12k_hal_srng_setup(struct ath12k_base *ab, enum hal_ring_type type,
 				srng->u.src_ring.hp_addr =
 					(u32 *)((unsigned long)ab->mem + reg_base);
 				if (type  == HAL_TCL_DATA) {
-					srng->u.src_ring.hp_addr_direct =
-						(u32 *)((unsigned long)ab->mem +
-						HAL_DP_REG_WINDOW_OFFSET +
-						(reg_base & WINDOW_RANGE_MASK));
+					if (ab->hif.bus == ATH12K_BUS_PCI)
+						srng->u.src_ring.hp_addr_direct =
+							(u32 *)((unsigned long)ab->mem +
+							HAL_DP_REG_WINDOW_OFFSET +
+							(reg_base & WINDOW_RANGE_MASK));
+					else
+						srng->u.src_ring.hp_addr_direct =
+							srng->u.src_ring.hp_addr;
 				}
 			} else {
 					ath12k_dbg(ab, ATH12K_DBG_HAL,
@@ -2066,11 +2070,15 @@ int ath12k_hal_srng_setup(struct ath12k_base *ab, enum hal_ring_type type,
 					(u32 *)((unsigned long)ab->mem + reg_base +
 					(HAL_REO1_RING_TP - HAL_REO1_RING_HP));
 				if (type  == HAL_WBM2SW_RELEASE) {
-					srng->u.dst_ring.tp_addr_direct =
-						(u32 *)((unsigned long)ab->mem +
-						(reg_base & WINDOW_RANGE_MASK) +
-						HAL_DP_REG_WINDOW_OFFSET +
-						(HAL_REO1_RING_TP - HAL_REO1_RING_HP));
+					if (ab->hif.bus == ATH12K_BUS_PCI)
+						srng->u.dst_ring.tp_addr_direct =
+							(u32 *)((unsigned long)ab->mem +
+							(reg_base & WINDOW_RANGE_MASK) +
+							HAL_DP_REG_WINDOW_OFFSET +
+							(HAL_REO1_RING_TP - HAL_REO1_RING_HP));
+					else
+						srng->u.dst_ring.tp_addr_direct =
+							srng->u.dst_ring.tp_addr;
 				}
 			} else {
 					ath12k_dbg(ab, ATH12K_DBG_HAL,
-- 
2.7.4


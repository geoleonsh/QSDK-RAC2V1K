From 5216a85658a0076cfc35d59449afba548c3b042c Mon Sep 17 00:00:00 2001
From: Rajat Soni <quic_rajson@quicinc.com>
Date: Fri, 24 Feb 2023 14:10:07 +0530
Subject: [PATCH] ath12k: Update link id after op supports

arsta ptr is NULL within ath12k_mac_op_sta_rc_update()
though sta and arvif is valid.

The station is associated on link1 and link id 0 is
hardcoded in ath12k_mac_op_sta_rc_update.

Handling rc update for STA based on link id needs to be supported.

Signed-off-by: Rajat Soni <quic_rajson@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -7019,7 +7019,7 @@ static void ath12k_mac_op_sta_set_4addr(
 static void ath12k_mac_op_sta_rc_update(struct ieee80211_hw *hw,
 					struct ieee80211_vif *vif,
 					struct ieee80211_sta *sta,
-					u32 changed)
+					u32 changed, u8 link_id)
 {
 	struct ath12k *ar;
 	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
@@ -7028,12 +7028,15 @@ static void ath12k_mac_op_sta_rc_update(
 	struct ath12k_link_sta *arsta;
 	struct ath12k_peer *peer;
 	u32 bw, smps;
-	/* TODO update link id after op supports */
-	u8 link_id = 0;
 
 	arvif = ahvif->link[link_id];
 	arsta = ahsta->link[link_id];
 
+	if (!arsta) {
+		ath12k_err(NULL, "unable to determine arsta\n");
+		return;
+	}
+
 	if (!arvif) {
 		ath12k_err(NULL, "unable to determine device for sta update\n");
 		return;

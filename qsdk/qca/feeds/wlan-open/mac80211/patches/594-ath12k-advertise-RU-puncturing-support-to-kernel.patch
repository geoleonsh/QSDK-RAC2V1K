From aa55297111f6591710a4fe6a647da6e9558a7f6e Mon Sep 17 00:00:00 2001
From: Aloka Dixit <quic_alokad@quicinc.com>
Date: Wed, 8 Dec 2021 13:49:10 -0800
Subject: [PATCH 5/7] ath12k: advertise RU puncturing support to kernel

Target advertises the minimum bandwidth which supports static preamble
puncturing using WMI_TAG_SERVICE_READY_EXT2_EVENT.
Store this support in struct wiphy to be advertised to the userspace.

Signed-off-by: Aloka Dixit <quic_alokad@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h |  1 +
 drivers/net/wireless/ath/ath12k/mac.c  |  2 ++
 drivers/net/wireless/ath/ath12k/wmi.c  | 11 ++++++++---
 drivers/net/wireless/ath/ath12k/wmi.h  |  4 ++--
 4 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/core.h b/drivers/net/wireless/ath/ath12k/core.h
index 6d3ad2b48f45..5e588fb69c01 100644
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -681,6 +681,7 @@ struct ath12k_pdev_cap {
 	struct ath12k_band_cap band[NUM_NL80211_BANDS];
 	bool nss_ratio_enabled;
 	u8 nss_ratio_info;
+	u32 ru_punct_supp_bw;
 };
 
 struct mlo_timestamp {
diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 40809dc16fde..437a876000a5 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -8130,6 +8130,8 @@ static int __ath12k_mac_register(struct ath12k *ar)
 
 	ar->hw->wiphy->interface_modes = ab->hw_params->interface_modes;
 
+	ar->hw->wiphy->ru_punct_supp_bw = NL80211_RU_PUNCT_SUPP_BW_80;
+
 	ieee80211_hw_set(ar->hw, SIGNAL_DBM);
 	ieee80211_hw_set(ar->hw, SUPPORTS_PS);
 	ieee80211_hw_set(ar->hw, SUPPORTS_DYNAMIC_PS);
diff --git a/drivers/net/wireless/ath/ath12k/wmi.c b/drivers/net/wireless/ath/ath12k/wmi.c
index f4ee1ce7e885..38efa75e8720 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -4280,7 +4280,7 @@ static int ath12k_pull_svc_ready_ext2(struct ath12k_pdev_wmi *wmi_handle,
 	param->hw_min_max_tx_power_2g =	ev->hw_min_max_tx_power_2g;
 	param->hw_min_max_tx_power_5g = ev->hw_min_max_tx_power_5g;
 	param->chwidth_num_peer_caps = ev->chwidth_num_peer_caps;
-	param->preamble_puncture_bw = ev->preamble_puncture_bw;
+	param->ru_punct_supp_bw = ev->ru_punct_supp_bw;
 	param->max_user_per_ppdu_ofdma = ev->max_user_per_ppdu_ofdma;
 	param->max_user_per_ppdu_mumimo = ev->max_user_per_ppdu_mumimo;
 	param->target_cap_flags = ev->target_cap_flags;
@@ -4289,7 +4289,8 @@ static int ath12k_pull_svc_ready_ext2(struct ath12k_pdev_wmi *wmi_handle,
 
 static int ath12k_wmi_tlv_mac_phy_caps_ext_parse(struct ath12k_base *ab,
 						 struct wmi_mac_phy_caps_ext *caps,
-						 struct ath12k_pdev *pdev)
+						 struct ath12k_pdev *pdev,
+						 struct wmi_tlv_svc_rdy_ext2_parse *data)
 {
 	struct ath12k_band_cap *cap_band;
 	struct ath12k_pdev_cap *pdev_cap = &pdev->cap;
@@ -4337,6 +4338,9 @@ static int ath12k_wmi_tlv_mac_phy_caps_ext_parse(struct ath12k_base *ab,
 		cap_band->eht_cap_info_internal = caps->eht_cap_info_internal;
 	}
 
+	if (data)
+		pdev_cap->ru_punct_supp_bw = data->param.ru_punct_supp_bw;
+
 	return 0;
 }
 
@@ -4357,7 +4361,8 @@ static int ath12k_wmi_tlv_mac_phy_caps_ext(struct ath12k_base *ab, u16 tag,
 	if (i == ab->num_radios)
 		return -EINVAL;
 
-	ret = ath12k_wmi_tlv_mac_phy_caps_ext_parse(ab, caps, &ab->pdevs[i]);
+	ret = ath12k_wmi_tlv_mac_phy_caps_ext_parse(ab, caps, &ab->pdevs[i],
+						    data);
 	if (ret) {
 		ath12k_warn(ab,
 			    "failed to extract mac phy caps ext, pdev_id:%d\n",
diff --git a/drivers/net/wireless/ath/ath12k/wmi.h b/drivers/net/wireless/ath/ath12k/wmi.h
index d564069feaf9..aa62b3572895 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -2253,7 +2253,7 @@ struct ath12k_service_ext2_param {
 	u32 hw_min_max_tx_power_2g;
 	u32 hw_min_max_tx_power_5g;
 	u32 chwidth_num_peer_caps;
-	u32 preamble_puncture_bw;
+	u32 ru_punct_supp_bw;
 	u32 max_user_per_ppdu_ofdma;
 	u32 max_user_per_ppdu_mumimo;
 	u32 target_cap_flags;
@@ -2538,7 +2538,7 @@ struct wmi_service_ready_ext2_event {
 	u32 hw_min_max_tx_power_2g;
 	u32 hw_min_max_tx_power_5g;
 	u32 chwidth_num_peer_caps;
-	u32 preamble_puncture_bw;
+	u32 ru_punct_supp_bw;
 	u32 max_user_per_ppdu_ofdma;
 	u32 max_user_per_ppdu_mumimo;
 	u32 target_cap_flags;
-- 
2.31.1


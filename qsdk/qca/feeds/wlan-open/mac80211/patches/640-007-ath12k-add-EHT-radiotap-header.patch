From a6758b96521adf0927dad5774c65415f1f50ec90 Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Thu, 23 Jun 2022 10:50:31 +0530
Subject: [PATCH] ath12k: add EHT information radiotap header

U-SIG and EHT information which is present under ppdu_info are
utilised to form the radiotap header.

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_mon.c | 64 +++++++++++++++++++++++++++++++-
 drivers/net/wireless/ath/ath12k/hal_rx.h |  4 +-
 2 files changed, 66 insertions(+), 2 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -1988,6 +1988,58 @@ ath12k_dp_mon_rx_update_radiotap_he_mu(s
 	rtap_buf[rtap_len] = rx_status->he_RU[3];
 }
 
+static void
+ath12k_dp_mon_rx_update_radiotap_u_sig(struct hal_rx_mon_ppdu_info *rx_status,
+				       u8 *rtap_buf)
+{
+	u32 rtap_len = 0;
+
+	put_unaligned_le32(rx_status->usig_common, &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->usig_value, &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->usig_mask, &rtap_buf[rtap_len]);
+}
+
+static void
+ath12k_dp_mon_rx_update_radiotap_eht(struct hal_rx_mon_ppdu_info *rx_status,
+				     u8 *rtap_buf)
+{
+	u32 rtap_len = 0, user;
+
+	put_unaligned_le32(rx_status->eht_known, &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->eht_data[0], &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->eht_data[1], &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->eht_data[2], &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->eht_data[3], &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->eht_data[4], &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	put_unaligned_le32(rx_status->eht_data[5], &rtap_buf[rtap_len]);
+	rtap_len += 4;
+
+	if (rx_status->num_eht_user_info_valid > EHT_MAX_USER_INFO)
+		return;
+
+	for (user = 0; user < rx_status->num_eht_user_info_valid; user++) {
+		put_unaligned_le32(rx_status->eht_user_info[user],
+				   &rtap_buf[rtap_len]);
+		rtap_len += 4;
+	}
+}
+
 static void ath12k_dp_mon_update_radiotap(struct ath12k *ar,
 					  struct hal_rx_mon_ppdu_info *ppduinfo,
 					  struct sk_buff *mon_skb,
@@ -2006,7 +2058,19 @@ static void ath12k_dp_mon_update_radiota
 		rxs->ampdu_reference = ampdu_id;
 	}
 
-	if (ppduinfo->he_mu_flags) {
+	if (ppduinfo->usig_flags) {
+		rxs->flag |= RX_FLAG_USIG_HEADER;
+		rxs->encoding = RX_ENC_EHT;
+		ptr = skb_push(mon_skb, sizeof(struct ieee80211_radiotap_usig));
+		ath12k_dp_mon_rx_update_radiotap_u_sig(ppduinfo, ptr);
+	}
+
+	if (ppduinfo->eht_flags) {
+		rxs->flag |= RX_FLAG_EHT_HEADER;
+		rxs->encoding = RX_ENC_EHT;
+		ptr = skb_push(mon_skb, sizeof(struct ieee80211_radiotap_eht));
+		ath12k_dp_mon_rx_update_radiotap_eht(ppduinfo, ptr);
+	} else if (ppduinfo->he_mu_flags) {
 		rxs->flag |= RX_FLAG_RADIOTAP_HE_MU;
 		rxs->encoding = RX_ENC_HE;
 		ptr = skb_push(mon_skb, sizeof(struct ieee80211_radiotap_he_mu));
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -180,6 +180,8 @@ struct hal_rx_u_sig_info {
 	u8 num_eht_sig_sym;
 };
 
+#define EHT_MAX_USER_INFO	4
+
 struct hal_rx_mon_ppdu_info {
 	u32 ppdu_id;
 	u32 last_ppdu_id;
@@ -277,7 +279,7 @@ struct hal_rx_mon_ppdu_info {
 	u32 usig_mask;
 	u32 eht_known;
 	u32 eht_data[6];
-	u32 eht_user_info[4];
+	u32 eht_user_info[EHT_MAX_USER_INFO];
 	struct hal_rx_u_sig_info u_sig_info;
 };
 

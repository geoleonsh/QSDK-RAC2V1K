--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -5385,7 +5385,7 @@ mon_deliver_fail:
 	return -EINVAL;
 }
 
-static void ath11k_dp_rx_mon_dest_process(struct ath11k *ar, int mac_id,
+void ath11k_dp_rx_mon_dest_process(struct ath11k *ar, int mac_id,
 					  u32 quota, struct napi_struct *napi)
 {
 	struct ath11k_pdev_dp *dp = &ar->dp;
@@ -5530,6 +5530,7 @@ int ath11k_dp_rx_process_mon_status(stru
 	enum hal_rx_mon_status hal_status;
 	struct sk_buff *skb;
 	struct sk_buff_head skb_list;
+	struct hal_rx_mon_ppdu_info *ppdu_info;
 	struct ath11k_peer *peer;
 	struct ath11k_sta *arsta;
 	int num_buffs_reaped = 0;
@@ -5595,10 +5596,10 @@ int ath11k_dp_rx_process_mon_status(stru
 		    (ppdu_info.ast_index != HAL_AST_IDX_INVALID)) {
 			if (ppdu_info.reception_type == HAL_RX_RECEPTION_TYPE_SU) {
 				arsta = (struct ath11k_sta *)peer->sta->drv_priv;
-				ath11k_dp_rx_update_peer_su_stats(arsta, &ppdu_info);
+				ath11k_dp_rx_update_peer_su_stats(arsta, ppdu_info);
 			} else {
-				ath11k_dp_rx_mon_process_ulofdma(&ppdu_info);
-				ath11k_dp_rx_update_peer_mu_stats(ar, &ppdu_info);
+				ath11k_dp_rx_mon_process_ulofdma(ppdu_info);
+				ath11k_dp_rx_update_peer_mu_stats(ar, ppdu_info);
 			}
 		}
 
--- a/drivers/net/wireless/ath/ath11k/dp_rx.h
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.h
@@ -107,6 +107,8 @@ int ath11k_dp_rx_mon_status_bufs_repleni
 					   struct dp_rxdma_ring *rx_ring,
 					   int req_entries,
 					   enum hal_rx_buf_return_buf_manager mgr);
+void ath11k_dp_rx_mon_dest_process(struct ath11k *ar, int mac_id, u32 quota,
+				   struct napi_struct *napi);
 int ath11k_dp_rx_pdev_mon_detach(struct ath11k *ar);
 int ath11k_dp_rx_pdev_mon_attach(struct ath11k *ar);
 int ath11k_peer_rx_frag_setup(struct ath11k *ar, const u8 *peer_mac, int vdev_id);
--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -870,6 +870,12 @@ static ssize_t ath11k_write_extd_rx_stat
 		goto exit;
 	}
 
+	if (test_bit(ATH11K_FLAG_MONITOR_STARTED, &ar->monitor_flags)) {
+		ar->debug.extd_rx_stats = enable;
+		ret = count;
+		goto exit;
+	}
+
 	if (enable) {
 		rx_filter =  HTT_RX_FILTER_TLV_FLAGS_MPDU_START;
 		rx_filter |= HTT_RX_FILTER_TLV_FLAGS_PPDU_START;

// SPDX-License-Identifier: GPL-2.0-only
/*
* Copyright (c) 2023, Qualcomm Innovation Center, Inc. All rights reserved.
*/

/dts-v1/;

#include "ipq9574.dtsi"

/ {
	config_name = "config@al02-c4","config@rdp433", "config-rdp433";

	aliases {
		console = &blsp1_uart1;
		sdhci = &mmc;
	};

	soc: soc {
		tlmm: pinctrl@1000000 {

			sdhci_pinmux: mmc {
				emmc_data {
					pins = "GPIO_0", "GPIO_1", "GPIO_2",
						"GPIO_3", "GPIO_6", "GPIO_7",
						"GPIO_8", "GPIO_9";
					function = "sdc";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-up;
				};

				emmc_cmd{
					pins = "GPIO_4";
					function = "sdc";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-up;
				};

				emmc_clk{
					pins = "GPIO_5";
					function = "sdc";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};

				emmc_rclk{
					pins = "GPIO_10";
					function = "sdc";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-down;
				};
			};

			qspi_pinmux: nand {
				qspi_data {
					pins = "GPIO_0", "GPIO_1", "GPIO_2",
						"GPIO_3";
					function = "qspi";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};

				qspi_cs_n {
					pins = "GPIO_4";
					function = "qspi";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};

				qspi_clk {
					pins = "GPIO_5";
					function = "qspi";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};
			};

			serial_pinmux: uart {
				data {
					pins = "GPIO_34", "GPIO_35";
					function = "blsp0_uart0";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-up;
				};
			};

			blsp1_spi_pinmux: blsp1_spi_pins {
				blsp0_spi_clk {
					pins = "GPIO_11";
					function = "blsp0_spi";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};

				blsp0_spi_mosi {
					pins = "GPIO_14";
					function = "blsp0_spi";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};

				blsp0_spi_miso {
					pins = "GPIO_13";
					function = "blsp0_spi";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};

				blsp0_spi_cs {
					pins = "GPIO_12";
					function = "blsp0_spi";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-up;
				};

			};

			mdio_pinmux: mdio {
				mdc {
					pins = "GPIO_38";
					function = "mdc";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-disable;
				};

				mdio {
					pins = "GPIO_39";
					function = "mdio";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-up;
				};
			};

			phy_rst_pinmux: phy_rst {
				qti_8085_rst {
					pins = "GPIO_60";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-up;
				};

				qti_aquantia_rst {
					pins = "GPIO_36";
					drive-strength = <DRIVE_STRENGTH_8MA>;
					bias-pull-up;
				};
			};
		};


		blsp1_uart1: serial@78B1000 {
			pinctrl-names = "uart";
			pinctrl-0 = <&serial_pinmux>;
			status = "okay";
		};

		blsp1_spi: spi@78b5000 {
			pinctrl-names = "default";
			pinctrl-0 = <&blsp1_spi_pinmux>;
			cs-gpios = <&tlmm 12 0>;
			force-cs;
			status = "okay";

			mx25u25635f@0 {
				compatible = "jedec,spi-nor";
				reg = <0>;
			};
		};

		nand: nand-controller@79B0000 {
			pinctrl-names = "default";
			pinctrl-0 = <&qspi_pinmux>;
			status = "okay";
		};

		mmc: sdhci@7800000 {
			pinctrl-names = "mmc";
			pinctrl-0 = <&sdhci_pinmux>;
			status = "okay";
		};

		mdio: mdio@90000 {
			pinctrl-names = "mdio";
			pinctrl-0 = <&mdio_pinmux>;
			status = "okay";

			phy0: phy@16 {
				phy-reset-gpio = <&tlmm 60 0>;
				reg = <16>;
				phy_id = <0>;
				id = <1>;
				uniphy_id = <0>;
				uniphy_type = <0>;
			};

			phy1: phy@17 {
				reg = <17>;
				phy_id = <0>;
				id = <2>;
				uniphy_id = <0>;
				uniphy_type = <0>;
			};

			phy2: phy@18 {
				reg = <18>;
				phy_id = <0>;
				id = <3>;
				uniphy_id = <0>;
				uniphy_type = <0>;
			};

			phy3: phy@19 {
				reg = <19>;
				phy_id = <0>;
				id = <4>;
				uniphy_id = <0>;
				uniphy_type = <0>;
			};

			phy4: phy@8 {
				phy-reset-gpio = <&tlmm 36 0>;
				reg = <8>;
				phy_id = <2>;
				phy-mode = "usxgmii";
				id = <5>;
				uniphy_id = <1>;
				uniphy_type = <1>;
				xgmac;
			};

			phy5: phy@0 {
				reg = <0>;
				phy-mode = "usxgmii";
				phy_id = <2>;
				id = <6>;
				uniphy_id = <2>;
				uniphy_type = <0>;
				xgmac;
			};
		};

		ethernet: nss-switch {
			phy-handle0 = <&phy0>;
			phy-handle1 = <&phy1>;
			phy-handle2 = <&phy2>;
			phy-handle3 = <&phy3>;
			phy-handle4 = <&phy4>;
			phy-handle5 = <&phy5>;
			status = "okay";
		};
	};
};

From 1540c9712699220722a08b1a9ad23912b6c2a686 Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Fri, 11 Nov 2022 16:10:40 +0530
Subject: [PATCH] wifi: ath12k: Fix pci register read/write

Optimise the regsiter read/write

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/pci.c | 32 +++++----------------------
 1 file changed, 6 insertions(+), 26 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/pci.c b/drivers/net/wireless/ath/ath12k/pci.c
index 45e4bd88c085..c2f4ef264271 100644
--- a/drivers/net/wireless/ath/ath12k/pci.c
+++ b/drivers/net/wireless/ath/ath12k/pci.c
@@ -184,12 +184,6 @@ static u32 ath12k_pci_get_window_start(struct ath12k_base *ab,
 	/* If offset lies within CE register range, use 2nd window */
 	else if ((offset ^ HAL_CE_WFSS_CE_REG_BASE) < WINDOW_RANGE_MASK)
 		window_start = 2 * WINDOW_START;
-	/* If offset lies within PCI_BAR_WINDOW0_BASE and within PCI_SOC_PCI_REG_BASE
-	 * use 0th window
-	 */
-	else if (((offset ^ PCI_BAR_WINDOW0_BASE) < WINDOW_RANGE_MASK) &&
-		 !((offset ^ PCI_SOC_PCI_REG_BASE) < PCI_SOC_RANGE_MASK))
-		window_start = 0;
 	else
 		window_start = WINDOW_START;
 
@@ -1105,13 +1099,11 @@ u32 ath12k_pci_read32(struct ath12k_base *ab, u32 offset)
 
 			is_window0 = ((offset >= PCI_BAR_WINDOW0_BASE &&
 				       offset <= PCI_BAR_WINDOW0_END) &&
-				      !(offset >= PCI_SOC_PCI_REG_BASE &&
-					offset <= PCI_PARF_END));
+				      (offset >= PCI_MHIREGLEN_REG &&
+				       offset <= PCI_MHI_REGION_END));
 
 			if (is_window0) {
-				if (offset >= PCI_MHIREGLEN_REG &&
-				    offset <= PCI_MHI_REGION_END)
-					offset = offset - PCI_MHIREGLEN_REG;
+				offset = offset - PCI_MHIREGLEN_REG;
 
 				val = ioread32(ab->mem + (offset & WINDOW_RANGE_MASK));
 
@@ -1121,11 +1113,6 @@ u32 ath12k_pci_read32(struct ath12k_base *ab, u32 offset)
 			}
 			spin_unlock_bh(&ab_pci->window_lock);
 		} else {
-			if ((!window_start) &&
-			    (offset >= PCI_MHIREGLEN_REG &&
-			     offset <= PCI_MHI_REGION_END))
-				offset = offset - PCI_MHIREGLEN_REG;
-
 			val = ioread32(ab->mem + window_start +
 				       (offset & WINDOW_RANGE_MASK));
 		}
@@ -1165,13 +1152,11 @@ void ath12k_pci_write32(struct ath12k_base *ab, u32 offset, u32 value)
 
 			is_window0 = ((offset >= PCI_BAR_WINDOW0_BASE &&
 				       offset <= PCI_BAR_WINDOW0_END) &&
-				      !(offset >= PCI_SOC_PCI_REG_BASE &&
-					offset <= PCI_PARF_END));
+				      (offset >= PCI_MHIREGLEN_REG &&
+				       offset <= PCI_MHI_REGION_END));
 
 			if (is_window0) {
-				if (offset >= PCI_MHIREGLEN_REG &&
-				    offset <= PCI_MHI_REGION_END)
-					offset = offset - PCI_MHIREGLEN_REG;
+				offset = offset - PCI_MHIREGLEN_REG;
 
 				iowrite32(value, ab->mem +
 					  (offset & WINDOW_RANGE_MASK));
@@ -1181,11 +1166,6 @@ void ath12k_pci_write32(struct ath12k_base *ab, u32 offset, u32 value)
 			}
 			spin_unlock_bh(&ab_pci->window_lock);
 		} else {
-			if ((!window_start) &&
-			    (offset >= PCI_MHIREGLEN_REG &&
-			     offset <= PCI_MHI_REGION_END))
-				offset = offset - PCI_MHIREGLEN_REG;
-
 			iowrite32(value, ab->mem + window_start +
 				  (offset & WINDOW_RANGE_MASK));
 		}
-- 
2.37.0


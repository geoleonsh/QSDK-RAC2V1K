From a2c9b5f9aa65a7a6cb1016c5c644f57c8394b836 Mon Sep 17 00:00:00 2001
From: Aditya Kumar Singh <quic_adisi@quicinc.com>
Date: Fri, 23 Jun 2023 12:13:08 +0530
Subject: [PATCH] ath12k: restrict user country setting during active vdev

Currently, if user wants, country setting can be changed on the fly after
the interface(s) have started beaconing. However, hostapd ignores this regulatory
change event since according to its state, it did not ask for it. This leads
to interfaces which were already active continue beaconing with same old data
which is wrong.

Since there is no potential usecase of changing regulatory on the fly, hence
add change to restrict changing country setting if any of the vdev in it is
active.

Also since regulatory applies to whole SOC, restrict this further to not allow
if any of pdev on a SOC is having an active vdev.

Signed-off-by: Aditya Kumar Singh <quic_adisi@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/reg.c | 53 +++++++++++++++++++++++++++
 1 file changed, 53 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/reg.c b/drivers/net/wireless/ath/ath12k/reg.c
index 07b46c06fc86..720bcdb436fc 100644
--- a/drivers/net/wireless/ath/ath12k/reg.c
+++ b/drivers/net/wireless/ath/ath12k/reg.c
@@ -126,6 +126,56 @@ ath12k_reg_send_request(struct ath12k *ar, struct regulatory_request *request)
 			    "INIT Country code set to fw failed : %d\n", ret);
 }
 
+static bool ath12k_reg_validate_pdev_state(struct ath12k *ar)
+{
+	struct ath12k_base *ab = ar->ab;
+	struct ath12k_pdev *pdev;
+	struct ath12k *tmp_ar;
+	int i;
+
+	rcu_read_lock();
+	for (i = 0; i < ab->num_radios; i++) {
+		pdev = rcu_dereference(ab->pdevs_active[i]);
+		if (!pdev)
+			continue;
+
+		tmp_ar = pdev->ar;
+		if (tmp_ar) {
+			mutex_lock(&tmp_ar->conf_mutex);
+			if (tmp_ar->num_started_vdevs) {
+				if (tmp_ar == ar)
+					ath12k_warn(ab, "%s has active interface, please bring down to set country code",
+						    wiphy_name(ar->ah->hw->wiphy));
+				mutex_unlock(&tmp_ar->conf_mutex);
+				rcu_read_unlock();
+				return false;
+			}
+			mutex_unlock(&tmp_ar->conf_mutex);
+		}
+	}
+	rcu_read_unlock();
+	return true;
+}
+
+static bool ath12k_reg_validate_ah_state(struct ath12k_hw *ah)
+{
+	struct ath12k *ar = ah->radio;
+	int i;
+
+	lockdep_assert_held(&ah->conf_mutex);
+
+	for (i = 0; i < ah->num_radio; i++, ar++) {
+		/* The SET_INIT_COUNTRY command should not be sent to firmware while any vdev is active
+		 * Also it does not make sense to give the command for certain pdev's alone.
+		 * Hence check all the pdev's if any have an active vdev before sending the command.
+		 */
+		if (!ath12k_reg_validate_pdev_state(ar))
+			return false;
+	}
+
+	return true;
+}
+
 void ath12k_reg_notifier(struct wiphy *wiphy, struct regulatory_request *request)
 {
 	struct ieee80211_hw *hw = wiphy_to_ieee80211_hw(wiphy);
@@ -149,6 +199,9 @@ void ath12k_reg_notifier(struct wiphy *wiphy, struct regulatory_request *request
 	if (!ath12k_regdom_changes(ah, request->alpha2))
 		goto exit;
 
+	if (!ath12k_reg_validate_ah_state(ah))
+		goto exit;
+
 	ah->regd_updated = false;
 	ar = ah->radio;
 
-- 
2.17.1


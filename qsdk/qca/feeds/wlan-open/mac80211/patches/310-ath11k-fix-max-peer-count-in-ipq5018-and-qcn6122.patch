From ca828a24a8caf9d370f89927176fca481b27bdd5 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <haric@codeaurora.org>
Date: Thu, 27 May 2021 12:43:00 +0530
Subject: [PATCH] ath11k : fix max peer count in ipq5018 and qcn6122

When fw receives the peer_create wmi cmd for 129th peer, the peer pool in
fw gets exhausted and it leads to Q6 crash in ipq5018 and qcn6122.

Currently the maximum number of peers is set as 512 and the maximum
number of vdevs is set as (16+1) for all the platforms with 1GB profile.

But the maximum number of peers is 128 and the maximum number of
vdevs is (8+1) for ipq5018 and qcn6122 with 1GB profile.

Signed-off-by: Hari Chandrakanthan <haric@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/core.c | 26 ++++++++++++++++++++++++--
 drivers/net/wireless/ath/ath11k/core.h |  1 -
 drivers/net/wireless/ath/ath11k/hw.h   |  7 ++++---
 3 files changed, 28 insertions(+), 6 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/core.c
+++ b/drivers/net/wireless/ath/ath11k/core.c
@@ -65,6 +65,9 @@ EXPORT_SYMBOL(ath11k_skip_radio);
 
 struct ath11k_base *ath11k_soc[MAX_SOCS];
 
+static const struct ath11k_num_vdevs_peers ath11k_vdevs_peers[];
+static const struct ath11k_num_vdevs_peers ath11k_vdevs_peers_ipq5018[];
+
 static const struct ath11k_hw_params ath11k_hw_params[] = {
 	{
 		.hw_rev = ATH11K_HW_IPQ8074,
@@ -147,6 +150,7 @@ static const struct ath11k_hw_params ath
 		.support_off_channel_tx = false,
 		/* In addition to TCL ring use TCL_CMD ring also for tx */
 		.max_tx_ring = DP_TCL_NUM_RING_MAX + 1,
+		.num_vdevs_peers = ath11k_vdevs_peers,
 	},
 	{
 		.hw_rev = ATH11K_HW_IPQ6018_HW10,
@@ -227,6 +231,7 @@ static const struct ath11k_hw_params ath
 		.support_off_channel_tx = false,
 		/* In addition to TCL ring use TCL_CMD ring also for tx */
 		.max_tx_ring = DP_TCL_NUM_RING_MAX + 1,
+		.num_vdevs_peers = ath11k_vdevs_peers,
 	},
 	{
 		.name = "qca6390 hw2.0",
@@ -302,6 +307,7 @@ static const struct ath11k_hw_params ath
 		.hybrid_bus_type = false,
 		.fixed_fw_mem = false,
 		.support_off_channel_tx = true,
+		.num_vdevs_peers = ath11k_vdevs_peers,
 	},
 	{
 		.name = "qcn9074 hw1.0",
@@ -388,6 +394,7 @@ static const struct ath11k_hw_params ath
 				       CFR_DATA_MAX_LEN_QCN9074,
 		/* In addition to TCL ring use TCL_CMD ring also for tx */
 		.max_tx_ring = DP_TCL_NUM_RING_MAX + 1,
+		.num_vdevs_peers = ath11k_vdevs_peers,
 	},
 	{
 		.name = "wcn6855 hw2.0",
@@ -463,6 +470,7 @@ static const struct ath11k_hw_params ath
 		.hybrid_bus_type = false,
 		.fixed_fw_mem = false,
 		.support_off_channel_tx = true,
+		.num_vdevs_peers = ath11k_vdevs_peers,
 	},
 	{
 		.name = "wcn6855 hw2.1",
@@ -537,6 +545,7 @@ static const struct ath11k_hw_params ath
 		.hybrid_bus_type = false,
 		.fixed_fw_mem = false,
 		.support_off_channel_tx = true,
+		.num_vdevs_peers = ath11k_vdevs_peers,
 	},
 	{
 		.name = "wcn6750 hw1.0",
@@ -610,6 +619,7 @@ static const struct ath11k_hw_params ath
 		.support_off_channel_tx = false,
 		.ce_window = 2,
 		.dp_window = 1,
+		.num_vdevs_peers = ath11k_vdevs_peers,
 	},
 	{
 		.hw_rev = ATH11K_HW_IPQ5018,
@@ -684,6 +694,7 @@ static const struct ath11k_hw_params ath
 		.cfr_stream_buf_size = 8500,
 		/* In addition to TCL ring use TCL_CMD ring also for tx */
 		.max_tx_ring = DP_TCL_NUM_RING_MAX,
+		.num_vdevs_peers = ath11k_vdevs_peers_ipq5018,
 	},
 	{
 		.hw_rev = ATH11K_HW_QCN6122,
@@ -756,9 +767,25 @@ static const struct ath11k_hw_params ath
 		.qdss_offset = ATH11K_QMI_QCN6122_QDSS_OFFSET,
 		.caldb_offset = ATH11K_QMI_QCN6122_CALDB_OFFSET,
 		.max_tx_ring = DP_TCL_NUM_RING_MAX,
+		.num_vdevs_peers = ath11k_vdevs_peers_ipq5018,
  	},
 };
 
+static const struct ath11k_num_vdevs_peers ath11k_vdevs_peers_ipq5018[] = {
+	{
+		.num_vdevs = (8 + 1),
+		.num_peers = 128,
+	},
+	{
+		.num_vdevs = (8 + 1),
+		.num_peers = 128,
+	},
+	{
+		.num_vdevs = 8,
+		.num_peers = 128,
+	}
+};
+
 static const struct ath11k_num_vdevs_peers ath11k_vdevs_peers[] = {
 	{
 		.num_vdevs = (16 + 1),
@@ -1396,8 +1423,6 @@ static int ath11k_core_soc_create(struct
 		ath11k_info(ab, "Booting in ftm mode - %d\n", ab->fw_mode);
 	}
 
-	ab->num_vdevs_peers = &ath11k_vdevs_peers;
-
 	ret = ath11k_qmi_init_service(ab);
 	if (ret) {
 		ath11k_err(ab, "failed to initialize qmi :%d\n", ret);
--- a/drivers/net/wireless/ath/ath11k/core.h
+++ b/drivers/net/wireless/ath/ath11k/core.h
@@ -1228,7 +1228,6 @@ struct ath11k_base {
 	bool ce_latency_stats_enable;
 	u32 ce_remap_base_addr;
 	atomic_t num_max_allowed;
-	struct ath11k_num_vdevs_peers *num_vdevs_peers;
 	bool enable_memory_stats;
 
 	u32 rx_hash;
--- a/drivers/net/wireless/ath/ath11k/hw.h
+++ b/drivers/net/wireless/ath/ath11k/hw.h
@@ -16,10 +16,10 @@ struct ath11k_cfr_peer_tx_param;
 /* Target configuration defines */
 #ifdef CPTCFG_ATH11K_MEM_PROFILE_512M
 
-#define TARGET_NUM_VDEVS	8
-#define TARGET_NUM_PEERS_PDEV	(128 + TARGET_NUM_VDEVS)
+#define TARGET_NUM_VDEVS(ab)	8
+#define TARGET_NUM_PEERS_PDEV(ab)	(128 + TARGET_NUM_VDEVS(ab))
 /* Max num of stations (per radio) */
-#define TARGET_NUM_STATIONS	128
+#define TARGET_NUM_STATIONS(ab)	128
 #define ATH11K_QMI_TARGET_MEM_MODE	ATH11K_QMI_TARGET_MEM_MODE_512M
 #define ATH11K_DP_TX_COMP_RING_SIZE	8192
 #define ATH11K_DP_RXDMA_MON_STATUS_RING_SIZE	512
@@ -32,11 +32,10 @@ struct ath11k_cfr_peer_tx_param;
 #define ATH11K_DP_RXDMA_NSS_REFILL_RING_SIZE	1816
 #else
 /* Num VDEVS per radio */
-#define TARGET_NUM_VDEVS(ab)	(ab->hw_params.num_vdevs)
-
-#define TARGET_NUM_PEERS_PDEV(ab) (ab->hw_params.num_peers + TARGET_NUM_VDEVS(ab))
+#define TARGET_NUM_VDEVS(ab)	(ab->hw_params.num_vdevs_peers[ab->qmi.target_mem_mode].num_vdevs)
+#define TARGET_NUM_PEERS_PDEV(ab) (ab->hw_params.num_vdevs_peers[ab->qmi.target_mem_mode].num_peers + TARGET_NUM_VDEVS(ab))
 /* Max num of stations (per radio) */
-#define TARGET_NUM_STATIONS(ab) (ab->hw_params.num_peers)
+#define TARGET_NUM_STATIONS(ab) (ab->hw_params.num_vdevs_peers[ab->qmi.target_mem_mode].num_peers)
 #define ATH11K_QMI_TARGET_MEM_MODE		ATH11K_QMI_TARGET_MEM_MODE_DEFAULT
 #define ATH11K_DP_TX_COMP_RING_SIZE		32768
 #define ATH11K_DP_RXDMA_MON_STATUS_RING_SIZE	1024
@@ -230,6 +229,7 @@ struct ath11k_hw_params {
 	u32 cfr_dma_hdr_size;
 	u32 cfr_num_stream_bufs;
 	u32 cfr_stream_buf_size;
+	const struct ath11k_num_vdevs_peers *num_vdevs_peers;
 	bool supports_rssi_stats;
 	bool fw_wmi_diag_event;
 	bool current_cc_support;
--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -2810,7 +2810,7 @@ static ssize_t ath11k_dump_mgmt_stats(st
 	struct ath11k_vif *arvif = NULL;
 	struct ath11k_mgmt_frame_stats *mgmt_stats;
 	int len = 0, ret, i;
-	int size = (TARGET_NUM_VDEVS - 1) * 1500;
+	int size = (TARGET_NUM_VDEVS(ab) - 1) * 1500;
 	char *buf;
 	const char *mgmt_frm_type[ATH11K_STATS_MGMT_FRM_TYPE_MAX-1] = {"assoc_req", "assoc_resp",
 								       "reassoc_req", "reassoc_resp",

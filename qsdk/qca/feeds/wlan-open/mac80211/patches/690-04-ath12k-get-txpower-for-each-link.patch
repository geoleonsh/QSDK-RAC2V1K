From 0bb78f7a97fe8ad3a70f8fdfdd5b56a2f887a59b Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Wed, 30 Nov 2022 17:24:03 +0530
Subject: [PATCH] ath12k: get txpower for each link

Currently, we are getting tx power for each phy, but in
multi-link operation each phy has multiple links which
operate in different bands, so their tx power will
also be different.

Add support to get tx power for each link.

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -12748,7 +12748,7 @@ static int ath12k_fw_stats_request(struc
 
 static int ath12k_mac_op_get_txpower(struct ieee80211_hw *hw,
 				     struct ieee80211_vif *vif,
-				     int *dbm)
+				     unsigned int link_id, int *dbm)
 {
 	struct ath12k_hw *ah = hw->priv;
 	struct stats_request_params req_param;
@@ -12756,6 +12756,9 @@ static int ath12k_mac_op_get_txpower(str
 	struct ath12k *ar;
 	struct ath12k_base *ab;
 	int ret;
+	struct ieee80211_bss_conf *link_conf;
+	struct ath12k_vif *ahvif;
+	struct ath12k_link_vif *arvif;
 
 	/* Final Tx power is minimum of Target Power, CTL power, Regulatory
 	 * Power, PSD EIRP Power. We just know the Regulatory power from the
@@ -12765,7 +12768,7 @@ static int ath12k_mac_op_get_txpower(str
 	 */
 	mutex_lock(&ah->conf_mutex);
 
-	ar = ath12k_get_ar_by_vif(hw, vif, 0);
+	ar = ath12k_get_ar_by_vif(hw, vif, link_id);
 	if (!ar) {
 		goto err_fallback;
 	}
@@ -12805,9 +12808,30 @@ static int ath12k_mac_op_get_txpower(str
 	return 0;
 
 err_fallback:
+	ahvif = ath12k_vif_to_ahvif(vif);
+	arvif = ahvif->link[link_id];
+
+	if (!arvif) {
+		*dbm = 0;
+		mutex_unlock(&ah->conf_mutex);
+		return 0;
+	}
+
+	rcu_read_lock();
+
+	/* We didn't get txpower from FW. Hence, relying on link_conf->txpower */
+	link_conf = ath12k_get_link_bss_conf(arvif);
+
+	if (!link_conf) {
+		*dbm = 0;
+		rcu_read_unlock();
+		mutex_unlock(&ah->conf_mutex);
+		return 0;
+	}
+
+	*dbm = link_conf->txpower;
+	rcu_read_unlock();
 	mutex_unlock(&ah->conf_mutex);
-	/* We didn't get txpower from FW. Hence, relying on vif->bss_conf.txpower */
-	*dbm = vif->bss_conf.txpower;
 	ath12k_dbg(NULL, ATH12K_DBG_MAC, "txpower from firmware NaN, reported %d dBm\n",
 		   *dbm);
 	return 0;

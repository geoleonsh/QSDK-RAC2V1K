From ebc59ec753ad0e682a80f440dc5933108eaaab6c Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Fri, 9 Jun 2023 13:44:37 +0530
Subject: [PATCH] ath12k: Fix WARN ON during bit rate command

Currently, we are calling ath12k_mac_disable_peer_fixed_rate with
holding rcu read lock and this function called wmi_set_peer_param
function which may sleep, due to this following call trace are
observed:

   244.124345:   <2> Call trace:
   244.131462:   <2>  dump_backtrace+0x0/0x19c
   244.133805:   <2>  show_stack+0x14/0x1c
   244.137624:   <2>  dump_stack+0xb4/0xf8
   244.140923:   <2>  panic+0x164/0x350
   244.144222:   <2>  __warn+0xb4/0xf8
   244.147172:   <2>  report_bug+0x9c/0xec
   244.150210:   <2>  bug_handler+0x1c/0x64
   244.153508:   <2>  brk_handler+0x7c/0xb0
   244.156806:   <2>  do_debug_exception+0xfc/0x160
   244.160193:   <2>  el1_dbg+0x18/0xbc
   244.164274:   <2>  rcu_note_context_switch+0x38/0x284
   244.167311:   <2>  __schedule+0x90/0x520
   244.171737:   <2>  schedule+0x8c/0xbc
   244.175210:   <2>  schedule_timeout+0x2e4/0x34c
   244.178263:   <2>  ath12k_wmi_cmd_send+0x1bc/0x254 [ath12k]
   244.182429:   <2>  ath12k_wmi_set_peer_param+0x7c/0xf0 [ath12k]
   244.187466:   <2>  ath12k_mac_tx_mgmt_pending_free+0x2cc/0x219c [ath12k]
   244.192846:   <2>  ieee80211_iterate_active_interfaces_mtx+0x50/0x6c [mac80211]
   244.198924:   <2>  ieee80211_iterate_stations_atomic+0x30/0x44 [mac80211]
   244.205778:   <2>  ath12k_get_ar_by_vif+0xc84/0x1348 [ath12k]
   244.211855:   <2>  ieee80211_channel_switch_disconnect+0x4bc/0x66c [mac80211]
   244.217062:   <2>  __cfg80211_send_event_skb+0x42b0/0x42fc [cfg80211]
   244.223653:   <2>  genl_family_rcv_msg+0x314/0x3b0
   244.229552:   <2>  genl_rcv_msg+0x58/0x84

Fix this issue by calling wmi_set_peer_param function through worker.

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h |  3 +++
 drivers/net/wireless/ath/ath12k/mac.c  | 26 ++++++++++++++++----------
 2 files changed, 19 insertions(+), 10 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -657,6 +657,9 @@ struct ath12k_link_sta {
 
 	/* For now the assoc link will be considered primary */
 	bool is_assoc_link;
+
+	/* For check disable fixed rate check for peer */
+	bool disable_fixed_rate;
 };
 
 struct ath12k_sta {
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -6618,6 +6618,19 @@ static void ath12k_sta_rc_update_wk(stru
 					    arsta->addr, arvif->vdev_id);
 		}
 	}
+
+	if (arsta->disable_fixed_rate) {
+		err = ath12k_wmi_set_peer_param(ar, arsta->addr,
+						arvif->vdev_id,
+						WMI_PEER_PARAM_FIXED_RATE,
+						WMI_FIXED_RATE_NONE);
+		if (err)
+			ath12k_warn(ar->ab,
+				    "failed to disable peer fixed rate for STA %pM ret %d\n",
+				    arsta->addr, err);
+
+		arsta->disable_fixed_rate = false;
+	}
 err_rc_bw_changed:
 	mutex_unlock(&ar->conf_mutex);
 }
@@ -13589,7 +13602,6 @@ static void ath12k_mac_disable_peer_fixe
 	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
 	struct ath12k_link_vif *arvif = data;
 	struct ath12k *ar;
-	int ret;
 	u8 link_id = arvif->link_id;
 
 	if (ahsta->ahvif != arvif->ahvif)
@@ -13603,15 +13615,11 @@ static void ath12k_mac_disable_peer_fixe
 
 	ar = arvif->ar;
 
-	/* TODO move to sta->link addr */
-	ret = ath12k_wmi_set_peer_param(ar, arsta->addr,
-					arvif->vdev_id,
-					WMI_PEER_PARAM_FIXED_RATE,
-					WMI_FIXED_RATE_NONE);
-	if (ret)
-		ath12k_warn(ar->ab,
-			    "failed to disable peer fixed rate for STA %pM ret %d\n",
-			    arsta->addr, ret);
+	spin_lock_bh(&ar->data_lock);
+	arsta->disable_fixed_rate = true;
+	spin_unlock_bh(&ar->data_lock);
+
+	ieee80211_queue_work(ar->ah->hw, &arsta->update_wk);
 }
 
 static bool

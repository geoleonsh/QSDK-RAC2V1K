From 171c96df407c45e94d1fe8afd44ca6cc3a191157 Mon Sep 17 00:00:00 2001
From: Nishant Pandey <nishpand@codeaurora.org>
Date: Tue, 22 Sep 2020 14:15:36 +0530
Subject: [PATCH] hostap: Move ACL configuration callback to generic

Move ACL configuration support callbacks to generic
place so that it can be utilized for mesh functionality.
No functional change as such made in this patch

Signed-off-by: Nishant Pandey <nishpand@codeaurora.org>
---
 hostapd/config_file.c  | 119 +-----------------------------------
 hostapd/config_file.h  |   5 --
 hostapd/ctrl_iface.c   | 111 ----------------------------------
 src/ap/ctrl_iface_ap.c | 159 +++++++++++++++++++++++++++++++++++++++++++++++++
 src/ap/ctrl_iface_ap.h |  10 ++++
 src/ap/ieee802_11.c    |  81 +++++++++++++++++++++++++
 src/ap/ieee802_11.h    |   9 +++
 7 files changed, 260 insertions(+), 234 deletions(-)

--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -23,6 +23,7 @@
 #include "radius/radius_client.h"
 #include "ap/wpa_auth.h"
 #include "ap/ap_config.h"
+#include "ap/ieee802_11.h"
 #include "config_file.h"
 
 
@@ -118,79 +119,6 @@ static int hostapd_config_read_vlan_file
 #endif /* CONFIG_NO_VLAN */
 
 
-static int hostapd_config_read_maclist(const char *fname,
-				       struct mac_acl_entry **acl, int *num)
-{
-	FILE *f;
-	char buf[128], *pos;
-	int line = 0;
-	u8 addr[ETH_ALEN];
-	int vlan_id;
-
-	f = fopen(fname, "r");
-	if (!f) {
-		wpa_printf(MSG_ERROR, "MAC list file '%s' not found.", fname);
-		return -1;
-	}
-
-	while (fgets(buf, sizeof(buf), f)) {
-		int rem = 0;
-
-		line++;
-
-		if (buf[0] == '#')
-			continue;
-		pos = buf;
-		while (*pos != '\0') {
-			if (*pos == '\n') {
-				*pos = '\0';
-				break;
-			}
-			pos++;
-		}
-		if (buf[0] == '\0')
-			continue;
-		pos = buf;
-		if (buf[0] == '-') {
-			rem = 1;
-			pos++;
-		}
-
-		if (hwaddr_aton(pos, addr)) {
-			wpa_printf(MSG_ERROR, "Invalid MAC address '%s' at "
-				   "line %d in '%s'", pos, line, fname);
-			fclose(f);
-			return -1;
-		}
-
-		if (rem) {
-			hostapd_remove_acl_mac(acl, num, addr);
-			continue;
-		}
-		vlan_id = 0;
-		pos = buf;
-		while (*pos != '\0' && *pos != ' ' && *pos != '\t')
-			pos++;
-		while (*pos == ' ' || *pos == '\t')
-			pos++;
-		if (*pos != '\0')
-			vlan_id = atoi(pos);
-
-		if (hostapd_add_acl_maclist(acl, num, vlan_id, addr) < 0) {
-			fclose(f);
-			return -1;
-		}
-	}
-
-	fclose(f);
-
-	if (*acl)
-		qsort(*acl, *num, sizeof(**acl), hostapd_acl_comp);
-
-	return 0;
-}
-
-
 #ifdef EAP_SERVER
 
 static int hostapd_config_eap_user_salted(struct hostapd_eap_user *user,
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -7258,6 +7258,79 @@ u8 * hostapd_eid_wb_chsw_wrapper(struct
 }
 
 
+int hostapd_config_read_maclist(const char *fname,
+				struct mac_acl_entry **acl, int *num)
+{
+	FILE *f;
+	char buf[128], *pos;
+	int line = 0;
+	u8 addr[ETH_ALEN];
+	int vlan_id;
+
+	f = fopen(fname, "r");
+	if (!f) {
+		wpa_printf(MSG_ERROR, "MAC list file '%s' not found.", fname);
+		return -1;
+	}
+
+	while (fgets(buf, sizeof(buf), f)) {
+		int rem = 0;
+
+		line++;
+
+		if (buf[0] == '#')
+			continue;
+		pos = buf;
+		while (*pos != '\0') {
+			if (*pos == '\n') {
+				*pos = '\0';
+				break;
+			}
+			pos++;
+		}
+		if (buf[0] == '\0')
+			continue;
+		pos = buf;
+		if (buf[0] == '-') {
+			rem = 1;
+			pos++;
+		}
+
+		if (hwaddr_aton(pos, addr)) {
+			wpa_printf(MSG_ERROR, "Invalid MAC address '%s' at "
+				   "line %d in '%s'", pos, line, fname);
+			fclose(f);
+			return -1;
+		}
+
+		if (rem) {
+			hostapd_remove_acl_mac(acl, num, addr);
+			continue;
+		}
+		vlan_id = 0;
+		pos = buf;
+		while (*pos != '\0' && *pos != ' ' && *pos != '\t')
+			pos++;
+		while (*pos == ' ' || *pos == '\t')
+			pos++;
+		if (*pos != '\0')
+			vlan_id = atoi(pos);
+
+		if (hostapd_add_acl_maclist(acl, num, vlan_id, addr) < 0) {
+			fclose(f);
+			return -1;
+		}
+	}
+
+	fclose(f);
+
+	if (*acl)
+		qsort(*acl, *num, sizeof(**acl), hostapd_acl_comp);
+
+	return 0;
+}
+
+
 static size_t hostapd_eid_nr_db_len(struct hostapd_data *hapd,
 				    size_t *current_len)
 {
--- a/src/ap/ieee802_11.h
+++ b/src/ap/ieee802_11.h
@@ -18,6 +18,7 @@ struct ieee80211_vht_capabilities;
 struct ieee80211_mgmt;
 struct radius_sta;
 enum ieee80211_op_mode;
+struct mac_acl_entry;
 
 int ieee802_11_mgmt(struct hostapd_data *hapd, const u8 *buf, size_t len,
 		    struct hostapd_frame_info *fi);
@@ -25,6 +26,9 @@ void ieee802_11_mgmt_cb(struct hostapd_d
 			u16 stype, int ok);
 void hostapd_2040_coex_action(struct hostapd_data *hapd,
 			      const struct ieee80211_mgmt *mgmt, size_t len);
+
+int hostapd_config_read_maclist(const char *fname,
+			       struct mac_acl_entry **acl, int *num);
 #ifdef NEED_AP_MLME
 int ieee802_11_get_mib(struct hostapd_data *hapd, char *buf, size_t buflen);
 int ieee802_11_get_mib_sta(struct hostapd_data *hapd, struct sta_info *sta,

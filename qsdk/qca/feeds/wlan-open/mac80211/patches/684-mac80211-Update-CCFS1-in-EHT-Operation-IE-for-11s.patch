From cdb9bac8b25fb7dddf4d08ba01e5520f6dcbbc77 Mon Sep 17 00:00:00 2001
From: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
Date: Mon, 14 Nov 2022 16:21:57 +0530
Subject: [PATCH] mac80211: Update CCFS1 in EHT Operation IE for 11s
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

IEEE P802.11be™/D2.0, May 2022 mandates CCFS1 filed in EHT
Operation IE.
Also, as per, IEEE P802.11be™/D2.0, May 2022 EHT operational IE
should contain Basic MCS and NSS set field for every spatial
stream. Added code changes to copy the mcs nss set from EHT
capabilities

Signed-off-by: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
Signed-off-by: Aditya Kumar Singh <quic_adisi@quicinc.com>
---
 net/mac80211/ieee80211_i.h |  3 ++-
 net/mac80211/mesh.c        |  3 ++-
 net/mac80211/util.c        | 28 ++++++++++++++++++++++++----
 3 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index 80ecf85..1faad33 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -2439,7 +2439,8 @@ u8 *ieee80211_ie_build_eht_cap(u8 *pos,
 			       const struct ieee80211_sta_he_cap *he_cap,
 			       const struct ieee80211_sta_eht_cap *eht_cap,
 			       u8 *end);
-u8 *ieee80211_ie_build_eht_oper(u8 *pos, struct cfg80211_chan_def *chandef);
+u8 *ieee80211_ie_build_eht_oper(u8 *pos, struct cfg80211_chan_def *chandef,
+				const struct ieee80211_sta_eht_cap *eht_cap);
 int ieee80211_parse_bitrates(enum nl80211_chan_width width,
 			     const struct ieee80211_supported_band *sband,
 			     const u8 *srates, int srates_len, u32 *rates);
diff --git a/net/mac80211/mesh.c b/net/mac80211/mesh.c
index b616687..e19dacd 100644
--- a/net/mac80211/mesh.c
+++ b/net/mac80211/mesh.c
@@ -705,7 +705,8 @@ int mesh_add_eht_oper_ie(struct ieee80211_sub_if_data *sdata,
 		return -ENOMEM;
 
 	pos = skb_put(skb, len);
-	ieee80211_ie_build_eht_oper(pos, &sdata->vif.bss_conf.chandef);
+	ieee80211_ie_build_eht_oper(pos, &sdata->vif.bss_conf.chandef,
+				    eht_cap);
 
 	return 0;
 }
diff --git a/net/mac80211/util.c b/net/mac80211/util.c
index 383d6b4..b87a2db 100644
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -3371,7 +3371,8 @@ out:
 	return pos;
 }
 
-u8 *ieee80211_ie_build_eht_oper(u8 *pos, struct cfg80211_chan_def *chandef)
+u8 *ieee80211_ie_build_eht_oper(u8 *pos, struct cfg80211_chan_def *chandef,
+				const struct ieee80211_sta_eht_cap *eht_cap)
 {
 	struct ieee80211_eht_operation *eht_oper;
 	struct ieee80211_eht_operation_info *eht_oper_info;
@@ -3393,12 +3394,30 @@ u8 *ieee80211_ie_build_eht_oper(u8 *pos, struct cfg80211_chan_def *chandef)
 	pos += sizeof(struct ieee80211_eht_operation_info) +
 	       chandef->ru_punct_bitmap ? 2 : 0;
 
+	eht_oper_info->ccfs0 =
+		ieee80211_frequency_to_channel(chandef->center_freq1);
+	if (chandef->center_freq2)
+		eht_oper_info->ccfs1 =
+			ieee80211_frequency_to_channel(chandef->center_freq2);
+	else
+		eht_oper_info->ccfs1 = 0;
+
 	switch (chandef->width) {
 	case NL80211_CHAN_WIDTH_320:
 		chwidth = IEEE80211_EHT_OPER_CTRL_CHANWIDTH_320MHZ;
+		eht_oper_info->ccfs1 = eht_oper_info->ccfs0;
+		if (chandef->chan->center_freq < chandef->center_freq1)
+			eht_oper_info->ccfs0 -= 16;
+		else
+			eht_oper_info->ccfs0 += 16;
 		break;
 	case NL80211_CHAN_WIDTH_160:
 		chwidth = IEEE80211_EHT_OPER_CTRL_CHANWIDTH_160MHZ;
+		eht_oper_info->ccfs1 = eht_oper_info->ccfs0;
+		if (chandef->chan->center_freq < chandef->center_freq1)
+			eht_oper_info->ccfs0 -= 8;
+		else
+			eht_oper_info->ccfs0 -= 8;
 		break;
 	case NL80211_CHAN_WIDTH_80P80:
 		chwidth = IEEE80211_EHT_OPER_CTRL_CHANWIDTH_160MHZ;
@@ -3414,12 +3433,13 @@ u8 *ieee80211_ie_build_eht_oper(u8 *pos, struct cfg80211_chan_def *chandef)
 		break;
 	}
 
+	memcpy(&eht_oper->basic_mcs_nss,
+	       &eht_cap->eht_mcs_nss_supp.only_20mhz,
+	       sizeof(struct ieee80211_eht_mcs_nss_supp_20mhz_only));
+
 	eht_oper->params |= IEEE80211_EHT_OPER_INFO_PRESENT;
 
 	eht_oper_info->control = chwidth;
-	eht_oper_info->ccfs0 =
-		ieee80211_frequency_to_channel(chandef->center_freq1);
-	eht_oper_info->ccfs1 = 0; /* How to get this? */
 
 	eht_oper->optional[0] = eht_oper_info->control;
 	eht_oper->optional[1] = eht_oper_info->ccfs0;
-- 
2.17.1


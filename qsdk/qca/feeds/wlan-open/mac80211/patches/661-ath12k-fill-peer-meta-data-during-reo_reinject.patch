From b192b63d96cb9b08da93aa0d2080754ff6a3a61d Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Thu, 25 Aug 2022 14:40:02 +0530
Subject: [PATCH] ath12k: fill peer meta data during reo_reinject

Firmware expects physical address in the reo entrance ring when MLO is
enabled and peer meta data in the queue_addr_lo for the non MLO cases.
Current implementation fills the physical address for the non MLO cases
and firmware decodes it differently which leads to SOC CSR region access
which is not related to firmware/MAC operation.

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -3459,11 +3459,13 @@ static int ath12k_dp_rx_h_defrag_reo_rei
 	reo_ent_ring->rx_mpdu_info.peer_meta_data =
 		reo_dest_ring->rx_mpdu_info.peer_meta_data;
 
-	reo_ent_ring->queue_addr_lo = lower_32_bits(rx_tid->paddr);
-	reo_ent_ring->info0 = u32_encode_bits(upper_32_bits(rx_tid->paddr),
-					      HAL_REO_ENTR_RING_INFO0_QUEUE_ADDR_HI) |
-			      u32_encode_bits(dst_ind, HAL_REO_ENTR_RING_INFO0_DEST_IND);
-
+	/* Firmware expects physical address to be filled in queue_addr_lo in
+	 * the MLO scenario and in case of non MLO peer meta data needs to be
+	 * filled.
+	 */
+	reo_ent_ring->queue_addr_lo = reo_dest_ring->rx_mpdu_info.peer_meta_data;
+	reo_ent_ring->info0 = u32_encode_bits(dst_ind,
+					      HAL_REO_ENTR_RING_INFO0_DEST_IND);
 	reo_ent_ring->info1 = u32_encode_bits(rx_tid->cur_sn,
 					      HAL_REO_ENTR_RING_INFO1_MPDU_SEQ_NUM);
 	dest_ring_info0 = u32_get_bits(reo_dest_ring->info0,

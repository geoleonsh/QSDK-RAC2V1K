From 366d0b9ce31b13190a3abde567e2299faeca5b81 Mon Sep 17 00:00:00 2001
From: Rajat Soni <quic_rajson@quicinc.com>
Date: Thu, 20 Apr 2023 16:35:05 +0530
Subject: [PATCH] ath12k: Fix get peer from peer id instead of ast index

Currently in function ath12k_dp_mon_rx_update_user_stats, we are fetching peer
by ast index look up. But in monitor mode the ast index is maped to 0 to 15 bits
and in latest HTT_T2H_MSG_TYPE_PEER_MAP3 ast hash is mapped to 16 to 19 bits.
Due to this when multiple clients are connected we are not able to fetch peer
from ast index look up.

Peer ID is better way to access peer istead of ast index.

To fix this issue get peer from peer id.

Fixes: cd2d4e2d270a ("ath12k: Fix search flag and update peer map event for sta")

Signed-off-by: Rajat Soni <quic_rajson@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_mon.c |  8 ++++----
 drivers/net/wireless/ath/ath12k/peer.c   | 14 --------------
 drivers/net/wireless/ath/ath12k/peer.h   |  1 -
 3 files changed, 4 insertions(+), 19 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_mon.c b/drivers/net/wireless/ath/ath12k/dp_mon.c
index 2e83a23..845a258 100644
--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -3498,14 +3498,14 @@ ath12k_dp_mon_rx_update_user_stats(struct ath12k *ar,
 	struct ath12k_peer *peer;
 	u32 num_msdu;
 
-	if (user_stats->ast_index == 0 || user_stats->ast_index == 0xFFFF)
+	if (ppdu_info->peer_id == HAL_INVALID_PEERID)
 		return;
 
-	peer = ath12k_peer_find_by_ast(ar->ab, user_stats->ast_index);
+	peer = ath12k_peer_find_by_id(ar->ab, ppdu_info->peer_id);
 
 	if (!peer) {
-		ath12k_warn(ar->ab, "peer ast idx %d can't be found\n",
-			    user_stats->ast_index);
+		ath12k_warn(ar->ab, "peer with peer id %d can't be found\n",
+			    ppdu_info->peer_id);
 		return;
 	}
 
diff --git a/drivers/net/wireless/ath/ath12k/peer.c b/drivers/net/wireless/ath/ath12k/peer.c
index 4e34edb..9cb807d 100644
--- a/drivers/net/wireless/ath/ath12k/peer.c
+++ b/drivers/net/wireless/ath/ath12k/peer.c
@@ -115,20 +115,6 @@ struct ath12k_peer *ath12k_peer_find_by_vdev_id(struct ath12k_base *ab,
 	return NULL;
 }
 
-struct ath12k_peer *ath12k_peer_find_by_ast(struct ath12k_base *ab,
-					    int ast_hash)
-{
-	struct ath12k_peer *peer;
-
-	lockdep_assert_held(&ab->base_lock);
-
-	list_for_each_entry(peer, &ab->peers, list)
-		if (ast_hash == peer->ast_hash)
-			return peer;
-
-	return NULL;
-}
-
 void ath12k_peer_unmap_event(struct ath12k_base *ab, u16 peer_id)
 {
 	struct ath12k_peer *peer;
diff --git a/drivers/net/wireless/ath/ath12k/peer.h b/drivers/net/wireless/ath/ath12k/peer.h
index 0048feb..0ff84ef 100644
--- a/drivers/net/wireless/ath/ath12k/peer.h
+++ b/drivers/net/wireless/ath/ath12k/peer.h
@@ -96,7 +96,6 @@ int ath12k_wait_for_peer_delete_done(struct ath12k *ar, u32 vdev_id,
 				     const u8 *addr);
 struct ath12k_peer *ath12k_peer_find_by_vdev_id(struct ath12k_base *ab,
 						int vdev_id);
-struct ath12k_peer *ath12k_peer_find_by_ast(struct ath12k_base *ab, int ast_hash);
 void ath12k_peer_mlo_map_event(struct ath12k_base *ab, struct sk_buff *skb);
 void ath12k_peer_mlo_unmap_event(struct ath12k_base *ab, struct sk_buff *skb);
 
-- 
2.17.1


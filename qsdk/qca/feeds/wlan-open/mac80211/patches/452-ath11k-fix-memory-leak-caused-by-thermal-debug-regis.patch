From d9bdef4a0be61ef7ea0be9ad02dfb815555c4c52 Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Mon, 29 May 2023 13:06:22 +0530
Subject: [PATCH] ath11k: fix memory leak caused by thermal debug register

wiphy_free deallocates rdev via put_device which internally uses
kref_count of kobj. This kref_count gets incremented during device_add and
decremented during device_del. During rmmod, wiphy_free expectes this
kref_count to be zero for deallocating rdev.

Ath11k driver uses devm_hwmon_device_register_with_groups for thermal
register by passing hw->wiphy->dev which is the child of pci->dev. So the
kref_count incremented for the hw->wiphy->dev is not getting decremented
properly during device_del which causes stale value present in the
kref_count. Because of the positive value in kref_count, put_device failed
to call kfree of rdev which causes memory leaks.

Fix it by using hwmon_device_register_with_groups instead of
devm_hwmon_device_register_with_groups and free it using
hwmon_device_unregiste during unregister.

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/thermal.c | 17 +++++++++++------
 drivers/net/wireless/ath/ath11k/thermal.h |  1 +
 2 files changed, 12 insertions(+), 6 deletions(-)

diff --git a/drivers/net/wireless/ath/ath11k/thermal.c b/drivers/net/wireless/ath/ath11k/thermal.c
index 4faf123..d30c1f1 100644
--- a/drivers/net/wireless/ath/ath11k/thermal.c
+++ b/drivers/net/wireless/ath/ath11k/thermal.c
@@ -158,7 +158,6 @@ int ath11k_thermal_set_throttling(struct ath11k *ar, u32 throttle_state)
 int ath11k_thermal_register(struct ath11k_base *sc)
 {
 	struct thermal_cooling_device *cdev;
-	struct device *hwmon_dev;
 	struct ath11k *ar;
 	struct ath11k_pdev *pdev;
 	int i, ret;
@@ -191,12 +190,13 @@ int ath11k_thermal_register(struct ath11k_base *sc)
 		if (!IS_REACHABLE(CONFIG_HWMON))
 			return 0;
 
-		hwmon_dev = devm_hwmon_device_register_with_groups(&ar->hw->wiphy->dev,
-								   "ath11k_hwmon", ar,
-								   ath11k_hwmon_groups);
-		if (IS_ERR(hwmon_dev)) {
+		ar->thermal.hwmon_dev = hwmon_device_register_with_groups(&ar->hw->wiphy->dev,
+									  "ath11k_hwmon", ar,
+									  ath11k_hwmon_groups);
+		if (IS_ERR(ar->thermal.hwmon_dev)) {
 			ath11k_err(ar->ab, "failed to register hwmon device: %ld\n",
-				   PTR_ERR(hwmon_dev));
+				   PTR_ERR(ar->thermal.hwmon_dev));
+			ar->thermal.hwmon_dev = NULL;
 			ret = -EINVAL;
 			goto err_thermal_destroy;
 		}
@@ -221,6 +221,11 @@ void ath11k_thermal_unregister(struct ath11k_base *sc)
 		if (!ar)
 			continue;
 
+		if (ar->thermal.hwmon_dev) {
+			hwmon_device_unregister(ar->thermal.hwmon_dev);
+			ar->thermal.hwmon_dev = NULL;
+		}
+
 		sysfs_remove_link(&ar->hw->wiphy->dev.kobj, "cooling_device");
 		thermal_cooling_device_unregister(ar->thermal.cdev);
 	}
diff --git a/drivers/net/wireless/ath/ath11k/thermal.h b/drivers/net/wireless/ath/ath11k/thermal.h
index f9af55f..705a0cd 100644
--- a/drivers/net/wireless/ath/ath11k/thermal.h
+++ b/drivers/net/wireless/ath/ath11k/thermal.h
@@ -16,6 +16,7 @@
 struct ath11k_thermal {
 	struct thermal_cooling_device *cdev;
 	struct completion wmi_sync;
+	struct device *hwmon_dev;
 
 	/* protected by conf_mutex */
 	u32 throttle_state;
-- 
2.17.1


From a077230ffae9471ab9b1be8325be77f1a29ab982 Mon Sep 17 00:00:00 2001
From: Karthik M <quic_karm@quicinc.com>
Date: Wed, 8 Feb 2023 00:41:04 +0530
Subject: [PATCH] wifi: cfg80211: MLO support for fwtest

Add support to parse link id from the fwtest tool
and trigger the command on the corresponding
firmware

Signed-off-by: Karthik M <quic_karm@quicinc.com>
---
 include/net/cfg80211.h  |  2 +-
 include/net/mac80211.h  |  2 +-
 net/mac80211/cfg.c      |  3 ++-
 net/wireless/nl80211.c  | 17 +++++++++++++++--
 net/wireless/rdev-ops.h |  5 +++--
 net/wireless/trace.h    | 10 +++++++---
 6 files changed, 29 insertions(+), 10 deletions(-)

--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -4571,7 +4571,7 @@ struct cfg80211_ops {
 
 #ifdef CPTCFG_NL80211_TESTMODE
 	int	(*testmode_cmd)(struct wiphy *wiphy, struct wireless_dev *wdev,
-				void *data, int len);
+				u8 link_id, void *data, int len);
 	int	(*testmode_dump)(struct wiphy *wiphy, struct sk_buff *skb,
 				 struct netlink_callback *cb,
 				 void *data, int len);
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -4455,7 +4455,7 @@ struct ieee80211_ops {
 	void (*set_coverage_class)(struct ieee80211_hw *hw, s16 coverage_class);
 #ifdef CPTCFG_NL80211_TESTMODE
 	int (*testmode_cmd)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
-			    void *data, int len);
+			    u8 link_id, void *data, int len);
 	int (*testmode_dump)(struct ieee80211_hw *hw, struct sk_buff *skb,
 			     struct netlink_callback *cb,
 			     void *data, int len);
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -3222,6 +3222,7 @@ static void ieee80211_rfkill_poll(struct
 #ifdef CPTCFG_NL80211_TESTMODE
 static int ieee80211_testmode_cmd(struct wiphy *wiphy,
 				  struct wireless_dev *wdev,
+				  u8 link_id,
 				  void *data, int len)
 {
 	struct ieee80211_local *local = wiphy_priv(wiphy);
@@ -3238,7 +3239,7 @@ static int ieee80211_testmode_cmd(struct
 			vif = &sdata->vif;
 	}
 
-	return local->ops->testmode_cmd(&local->hw, vif, data, len);
+	return local->ops->testmode_cmd(&local->hw, vif, link_id, data, len);
 }
 
 static int ieee80211_testmode_dump(struct wiphy *wiphy,
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -12136,6 +12136,7 @@ static int nl80211_testmode_do(struct sk
 	struct cfg80211_registered_device *rdev = info->user_ptr[0];
 	struct wireless_dev *wdev;
 	int err;
+	u8 link_id;
 
 	lockdep_assert_held(&rdev->wiphy.mtx);
 
@@ -12157,8 +12158,18 @@ static int nl80211_testmode_do(struct sk
 	if (!info->attrs[NL80211_ATTR_TESTDATA])
 		return -EINVAL;
 
+	link_id = nl80211_link_id(info->attrs);
+
+	if(wdev) {
+		if (wdev->valid_links && !(wdev->valid_links & BIT(link_id)))
+			return -EINVAL;
+
+		if (!wdev->valid_links && link_id)
+			return -EINVAL;
+	}
+
 	rdev->cur_cmd_info = info;
-	err = rdev_testmode_cmd(rdev, wdev,
+	err = rdev_testmode_cmd(rdev, wdev, link_id,
 				nla_data(info->attrs[NL80211_ATTR_TESTDATA]),
 				nla_len(info->attrs[NL80211_ATTR_TESTDATA]));
 	rdev->cur_cmd_info = NULL;
--- a/net/wireless/rdev-ops.h
+++ b/net/wireless/rdev-ops.h
@@ -632,11 +632,12 @@ static inline void rdev_rfkill_poll(stru
 #ifdef CPTCFG_NL80211_TESTMODE
 static inline int rdev_testmode_cmd(struct cfg80211_registered_device *rdev,
 				    struct wireless_dev *wdev,
+				    u8 link_id,
 				    void *data, int len)
 {
 	int ret;
-	trace_rdev_testmode_cmd(&rdev->wiphy, wdev);
-	ret = rdev->ops->testmode_cmd(&rdev->wiphy, wdev, data, len);
+	trace_rdev_testmode_cmd(&rdev->wiphy, wdev, link_id);
+	ret = rdev->ops->testmode_cmd(&rdev->wiphy, wdev, link_id, data, len);
 	trace_rdev_return_int(&rdev->wiphy, ret);
 	return ret;
 }
--- a/net/wireless/trace.h
+++ b/net/wireless/trace.h
@@ -1628,17 +1628,21 @@ TRACE_EVENT(rdev_return_int_int,
 
 #ifdef CPTCFG_NL80211_TESTMODE
 TRACE_EVENT(rdev_testmode_cmd,
-	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev),
-	TP_ARGS(wiphy, wdev),
+	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev,
+		 u8 link_id),
+	TP_ARGS(wiphy, wdev, link_id),
 	TP_STRUCT__entry(
 		WIPHY_ENTRY
 		WDEV_ENTRY
+		__field(u8, link_id)
 	),
 	TP_fast_assign(
 		WIPHY_ASSIGN;
 		WDEV_ASSIGN;
+		__entry->link_id = link_id;
 	),
-	TP_printk(WIPHY_PR_FMT WDEV_PR_FMT, WIPHY_PR_ARG, WDEV_PR_ARG)
+	TP_printk(WIPHY_PR_FMT "," WDEV_PR_FMT ", link_id: %u",
+		  WIPHY_PR_ARG, WDEV_PR_ARG, __entry->link_id)
 );
 
 TRACE_EVENT(rdev_testmode_dump,

From 49079af9c6d5dc9c4bdcc4933658f4ee2c7e295f Mon Sep 17 00:00:00 2001
From: Aloka Dixit <quic_alokad@quicinc.com>
Date: Mon, 11 Apr 2022 15:19:45 -0700
Subject: [PATCH 1/2] ath12k: add statistics for tx RU puncturing

Add new type of stats 'tx_su_punctured_mode' which indicates
the number of PPDUs sent in punctured mode.
The punctured bandwidth mode is given by enum
HTT_TX_PDEV_STATS_NUM_PUNCTURED_MODE_TYPE.

Signed-off-by: Aloka Dixit <quic_alokad@quicinc.com>
---
 .../wireless/ath/ath12k/debugfs_htt_stats.c   | 10 +++++++++-
 .../wireless/ath/ath12k/debugfs_htt_stats.h   | 20 +++++++++++++++++++
 2 files changed, 29 insertions(+), 1 deletion(-)

--- a/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.c
@@ -2845,6 +2845,7 @@ static inline void htt_print_tx_pdev_rat
 	u8 j;
 	char str_buf[HTT_MAX_STRING_LEN] = {0};
 	char *tx_gi[HTT_TX_PEER_STATS_NUM_GI_COUNTERS] = {NULL};
+	u32 tx_bw[HTT_TX_PDEV_STATS_NUM_BW_COUNTERS + 1] = { 0 };
 
 	for (j = 0; j < HTT_TX_PEER_STATS_NUM_GI_COUNTERS; j++) {
 		tx_gi[j] = kmalloc(HTT_MAX_STRING_LEN, GFP_ATOMIC);
@@ -2929,9 +2930,13 @@ static inline void htt_print_tx_pdev_rat
 			HTT_TX_PDEV_STATS_NUM_SPATIAL_STREAMS);
 	len += HTT_DBG_OUT(buf + len, buf_len - len, "ofdma_tx_nss = %s ", str_buf);
 
+	for (j = 0; j < HTT_TX_PDEV_STATS_NUM_BW_COUNTERS; j++) {
+		tx_bw[j] = htt_stats_buf->tx_bw[j];
+	}
+	tx_bw[j] = htt_stats_buf->tx_bw_320mhz;
 	memset(str_buf, 0x0, HTT_MAX_STRING_LEN);
-	ARRAY_TO_STRING(str_buf, htt_stats_buf->tx_bw,
-			HTT_TX_PDEV_STATS_NUM_BW_COUNTERS);
+	ARRAY_TO_STRING(str_buf, tx_bw,
+			HTT_TX_PDEV_STATS_NUM_BW_COUNTERS + 1);
 	len += HTT_DBG_OUT(buf + len, buf_len - len, "tx_bw = %s ", str_buf);
 
 	memset(str_buf, 0x0, HTT_MAX_STRING_LEN);
@@ -3001,7 +3006,15 @@ static inline void htt_print_tx_pdev_rat
 	memset(str_buf, 0x0, HTT_MAX_STRING_LEN);
 	ARRAY_TO_STRING(str_buf, htt_stats_buf->tx_dcm,
 			HTT_TX_PDEV_STATS_NUM_DCM_COUNTERS);
-	len += HTT_DBG_OUT(buf + len, buf_len - len, "tx_dcm = %s\n", str_buf);
+	len += HTT_DBG_OUT(buf + len, buf_len - len, "tx_dcm = %s", str_buf);
+
+	memset(str_buf, 0x0, HTT_MAX_STRING_LEN);
+	ARRAY_TO_STRING(str_buf, htt_stats_buf->tx_su_punctured_mode,
+			HTT_TX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS);
+	len += HTT_DBG_OUT(buf + len, buf_len - len,
+			   "tx_su_punctured_mode = %s ", str_buf);
+
+	len += HTT_DBG_OUT(buf + len, buf_len - len, "\n");
 
 	if (len >= buf_len)
 		buf[buf_len - 1] = 0;
--- a/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.h
+++ b/drivers/net/wireless/ath/ath12k/debugfs_htt_stats.h
@@ -1156,6 +1156,8 @@ struct htt_sring_cmn_tlv {
 
 /* == PDEV TX RATE CTRL STATS == */
 #define HTT_TX_PDEV_STATS_NUM_MCS_COUNTERS        12
+#define HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS   2
+#define HTT_TX_PDEV_STATS_NUM_EXTRA2_MCS_COUNTERS  2
 #define HTT_TX_PDEV_STATS_NUM_GI_COUNTERS          4
 #define HTT_TX_PDEV_STATS_NUM_DCM_COUNTERS         5
 #define HTT_TX_PDEV_STATS_NUM_BW_COUNTERS          4
@@ -1164,6 +1166,7 @@ struct htt_sring_cmn_tlv {
 #define HTT_TX_PDEV_STATS_NUM_LEGACY_CCK_STATS     4
 #define HTT_TX_PDEV_STATS_NUM_LEGACY_OFDM_STATS    8
 #define HTT_TX_PDEV_STATS_NUM_LTF                  4
+#define HTT_TX_PDEV_STATS_NUM_11AX_TRIGGER_TYPES   6
 
 #define HTT_TX_NUM_OF_SOUNDING_STATS_WORDS \
 	(HTT_TX_PDEV_STATS_NUM_BW_COUNTERS * \
@@ -1300,6 +1303,23 @@ struct htt_tx_pdev_rate_stats_tlv {
 			    [HTT_TX_PDEV_STATS_NUM_MCS_COUNTERS];
 	u32 ofdma_tx_gi[HTT_TX_PDEV_STATS_NUM_GI_COUNTERS]
 		       [HTT_TX_PDEV_STATS_NUM_MCS_COUNTERS];
+	u32 trigger_type_11ax[HTT_TX_PDEV_STATS_NUM_11AX_TRIGGER_TYPES];
+	u32 tx_11ax_su_ext;
+	u32 tx_mcs_ext[HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS];
+	u32 tx_stbc_ext[HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS];
+	u32 tx_gi_ext[HTT_TX_PDEV_STATS_NUM_GI_COUNTERS]
+		     [HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS];
+	u32 ax_mu_mimo_tx_mcs_ext[HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS];
+	u32 ofdma_tx_mcs_ext[HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS];
+	u32 ax_mu_mimo_tx_gi_ext[HTT_TX_PDEV_STATS_NUM_GI_COUNTERS]
+				[HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS];
+	u32 ofdma_tx_gi_ext[HTT_TX_PDEV_STATS_NUM_GI_COUNTERS]
+			   [HTT_TX_PDEV_STATS_NUM_EXTRA_MCS_COUNTERS];
+	u32 tx_mcs_ext_2[HTT_TX_PDEV_STATS_NUM_EXTRA2_MCS_COUNTERS];
+	u32 tx_bw_320mhz;
+	u32 tx_gi_ext_2[HTT_TX_PDEV_STATS_NUM_GI_COUNTERS]
+		       [HTT_TX_PDEV_STATS_NUM_EXTRA2_MCS_COUNTERS];
+	u32 tx_su_punctured_mode[HTT_TX_PDEV_STATS_NUM_PUNCTURED_MODE_COUNTERS];
 };
 
 /* == PDEV RX RATE CTRL STATS == */

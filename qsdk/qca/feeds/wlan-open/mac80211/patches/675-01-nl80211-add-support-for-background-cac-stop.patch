From a2db5f6f212436dff2c5420cde8e23adabb6bce0 Mon Sep 17 00:00:00 2001
From: Harshitha Prem <quic_hprem@quicinc.com>
Date: Wed, 19 Oct 2022 23:29:38 +0530
Subject: [PATCH 1/4] nl80211: add support for background cac stop

Added changes to support aborting ongoing background
cac via new netlink command
NL80211_CMD_STOP_BGRADAR_DETECT.


Signed-off-by: Harshitha Prem <quic_hprem@quicinc.com>
---
 include/uapi/linux/nl80211.h |  2 ++
 net/wireless/mlme.c	      |  2 +-
 net/wireless/nl80211.c       | 20 +++++++++++++++++++-
 3 files changed, 22 insertions(+), 2 deletions(-)

--- a/include/uapi/linux/nl80211.h
+++ b/include/uapi/linux/nl80211.h
@@ -1544,6 +1544,8 @@ enum nl80211_commands {
 	NL80211_CMD_UPDATE_HE_MUEDCA_PARAMS,
 
 	NL80211_CMD_AWGN_DETECT,
+
+	NL80211_CMD_STOP_BGRADAR_DETECT,
 	/* add new commands above here */
 
 	/* used to define NL80211_CMD_MAX below */
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -10200,6 +10200,16 @@ unlock:
 	return err;
 }
 
+static int nl80211_stop_radar_detection(struct sk_buff *skb,
+						struct genl_info *info)
+{
+	struct net_device *dev = info->user_ptr[1];
+	struct wireless_dev *wdev = dev->ieee80211_ptr;
+
+	cfg80211_stop_background_radar_detection(wdev);
+
+	return 0;
+}
 static int nl80211_notify_radar_detection(struct sk_buff *skb,
 					  struct genl_info *info)
 {
@@ -17636,6 +17646,15 @@ static const struct genl_small_ops nl802
 		.internal_flags = IFLAGS(NL80211_FLAG_NEED_NETDEV_UP |
 					 NL80211_FLAG_MLO_VALID_LINK_ID),
 	},
+	{
+		.cmd = NL80211_CMD_STOP_BGRADAR_DETECT,
+		.validate = GENL_DONT_VALIDATE_STRICT | GENL_DONT_VALIDATE_DUMP,
+		.doit = nl80211_stop_radar_detection,
+		.flags = GENL_UNS_ADMIN_PERM,
+		.internal_flags = IFLAGS(NL80211_FLAG_NEED_NETDEV_UP |
+					 NL80211_FLAG_NO_WIPHY_MTX |
+					 NL80211_FLAG_MLO_UNSUPPORTED),
+	},
 };
 
 static struct genl_family nl80211_fam __genl_ro_after_init = {
@@ -19585,6 +19604,12 @@ nl80211_radar_notify(struct cfg80211_reg
 			goto nla_put_failure;
 	}
 
+	if (rdev->background_radar_wdev &&
+	    cfg80211_chandef_identical(&rdev->background_radar_chandef, chandef)) {
+		if(nla_put_flag(msg, NL80211_ATTR_RADAR_BACKGROUND))
+			goto nla_put_failure;
+	}
+
 	if (nla_put_u32(msg, NL80211_ATTR_RADAR_EVENT, event))
 		goto nla_put_failure;
 

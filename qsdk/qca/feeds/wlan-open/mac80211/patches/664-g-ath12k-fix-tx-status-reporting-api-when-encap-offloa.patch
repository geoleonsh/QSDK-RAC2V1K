From 126f96f7ea2cf3d5b560ddb10f3651bf3917fffc Mon Sep 17 00:00:00 2001
From: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Date: Wed, 27 Jul 2022 12:42:59 -0700
Subject: [PATCH 07/12] ath12k: fix tx status reporting api when encap offload
 enabled

Use appropriate api for reporting tx status to mac80211 when encap
offload is enabled to avoid any issues.

Signed-off-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_tx.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_tx.c b/drivers/net/wireless/ath/ath12k/dp_tx.c
index 9be5ef95536f..cbe14ec7cb1a 100644
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -385,6 +385,7 @@ ath12k_dp_tx_htt_tx_complete_buf(struct ath12k_base *ab,
 	struct ieee80211_tx_info *info;
 	struct ath12k_skb_cb *skb_cb;
 	struct ath12k *ar;
+	struct ieee80211_vif *vif;
 	u8 flags = 0;
 
 	skb_cb = ATH12K_SKB_CB(msdu);
@@ -421,6 +422,8 @@ ath12k_dp_tx_htt_tx_complete_buf(struct ath12k_base *ab,
 		return;
 	}
 
+	vif = skb_cb->vif;
+
 	memset(&info->status, 0, sizeof(info->status));
 
 	if (ts->acked) {
@@ -434,7 +437,10 @@ ath12k_dp_tx_htt_tx_complete_buf(struct ath12k_base *ab,
 		}
 	}
 
-	ieee80211_tx_status(ar->ah->hw, msdu);
+	if (flags & ATH12K_SKB_HW_80211_ENCAP)
+		ieee80211_tx_status_8023(ar->ah->hw, vif, msdu);
+	else
+		ieee80211_tx_status(ar->ah->hw, msdu);
 }
 
 static void
@@ -642,6 +648,7 @@ static void ath12k_dp_tx_complete_msdu(struct ath12k *ar,
 	struct rate_info rate;
 	struct hal_tx_status ts = { 0 };
 	enum hal_wbm_tqm_rel_reason rel_status;
+	struct ieee80211_vif *vif;
 	u8 flags = 0;
 
 
@@ -691,6 +698,8 @@ static void ath12k_dp_tx_complete_msdu(struct ath12k *ar,
 		goto exit;
 	}
 
+	vif = skb_cb->vif;
+
 	info = IEEE80211_SKB_CB(msdu);
 	memset(&info->status, 0, sizeof(info->status));
 
@@ -751,8 +760,10 @@ static void ath12k_dp_tx_complete_msdu(struct ath12k *ar,
 	status.rate = &rate;
 	spin_unlock_bh(&ab->base_lock);
 
-	ieee80211_tx_status_ext(ar->ah->hw, &status);
-
+	if (flags & ATH12K_SKB_HW_80211_ENCAP)
+		ieee80211_tx_status_8023(ar->ah->hw, vif, msdu);
+	else
+		ieee80211_tx_status_ext(ar->ah->hw, &status);
 
 exit:
 	rcu_read_unlock();
-- 
2.17.1


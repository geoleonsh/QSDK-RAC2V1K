From 7ace85ca706b96cc58b95e29b4ecb875212bc075 Mon Sep 17 00:00:00 2001
From: Harshitha Prem <quic_hprem@quicinc.com>
Date: Tue, 25 Apr 2023 09:54:11 +0530
Subject: [PATCH] mac80211: fix null pointer access for AP/VLAN

During wds bring up on EHT mode, following null pointer
crash is seen randomly.

ieee80211_sta_cap_rx_bw+0x48/0xf4 [mac80211]
ieee80211_set_qos_hdr+0x124/0x1ac [mac80211]
ieee80211_iter_chan_contexts_atomic+0x48c/0x95c [mac80211]
ieee80211_recalc_chanctx_min_def+0x50/0x418 [mac80211]
ieee80211_recalc_min_chandef+0x94/0xa4 [mac80211]
sta_info_move_state+0x17c/0x250 [mac80211]
ieee80211_channel_switch+0xdc8/0x1fe4 [mac80211]
ieee80211_channel_switch+0x12fc/0x1fe4 [mac80211]
ieee80211_channel_switch+0x15b4/0x1fe4 [mac80211]
__cfg80211_send_event_skb+0x23ac/0x43c8 [cfg80211]
genl_family_rcv_msg+0x314/0x3b0
genl_rcv_msg+0x58/0x84
netlink_rcv_skb+0x94/0x10c
genl_rcv+0x34/0x48
netlink_unicast+0x15c/0x248
netlink_sendmsg+0x320/0x3bc
sock_sendmsg+0x18/0x2c
____sys_sendmsg+0x2c4/0x350
___sys_sendmsg+0x7c/0xc4
__sys_sendmsg+0x64/0xac
__arm64_sys_sendmsg+0x1c/0x24
el0_svc_common.constprop.0+0x98/0x114
el0_svc_handler+0x18/0x20

When analyzed further, we could see that the channel info was null
for AP/VLAN interface as it was accessed from link id. Currently,
in SLO WDS, we are not creating the AP/VLAN interface as per link
and the link_conf did not have valid data.

Hence, add changes to get the link_conf based on the valid links
check.

Signed-off-by: Harshitha Prem <quic_hprem@quicinc.com>
---
 net/mac80211/vht.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/net/mac80211/vht.c b/net/mac80211/vht.c
index 001b533..d5f0d5b 100644
--- a/net/mac80211/vht.c
+++ b/net/mac80211/vht.c
@@ -338,13 +338,16 @@ ieee80211_sta_cap_rx_bw(struct link_sta_info *link_sta)
 		u8 info;
 
 		rcu_read_lock();
-		link_conf = rcu_dereference(sdata->vif.link_conf[link_id]);
+		if (sdata->vif.valid_links)
+			link_conf = rcu_dereference(sdata->vif.link_conf[link_id]);
+		else
+			link_conf = &sdata->vif.bss_conf;
 
 		/* TODO: 5GHz is reusing the same PHY capability
 		 * to advertise the 320MHz support. Removind band
 		 * specific check for now.
 		 */
-		if (eht_cap->has_eht &&
+		if (eht_cap->has_eht && link_conf->chandef.chan &&
 		    link_conf->chandef.chan->band != NL80211_BAND_2GHZ) {
 			info = eht_cap->eht_cap_elem.phy_cap_info[0];
 
@@ -356,7 +359,8 @@ ieee80211_sta_cap_rx_bw(struct link_sta_info *link_sta)
 
 		info = he_cap->he_cap_elem.phy_cap_info[0];
 
-		if (link_conf->chandef.chan->band == NL80211_BAND_2GHZ) {
+		if (link_conf->chandef.chan &&
+		    link_conf->chandef.chan->band == NL80211_BAND_2GHZ) {
 			if (info & IEEE80211_HE_PHY_CAP0_CHANNEL_WIDTH_SET_40MHZ_IN_2G)
 				ret = IEEE80211_STA_RX_BW_40;
 			else
-- 
2.17.1


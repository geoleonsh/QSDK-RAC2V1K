From bdc43856d6fc81d3c9140eab8c6fcd19f1314d5a Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Tue, 7 Mar 2023 14:55:26 +0530
Subject: [PATCH] wifi: ath12k: Refactor peer delete

In mac vdev create, the error handler call the wmi peer delete procedure
which already take care in separate peer delete call. So refactor the
error path to call the peer delete instead of WMI peer delete call.

Also refactor the peer delete to handle the error path in peer create.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 20 +++++---------------
 1 file changed, 5 insertions(+), 15 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -9304,7 +9304,7 @@ static int ath12k_mac_vdev_create(struct
 	u32 param_id, param_value;
 	u16 nss;
 	int i;
-	int ret, vdev_id;
+	int ret, fbret, vdev_id;
 	u8 link_addr[ETH_ALEN];
 	int txpower;
 	u8 link_id;
@@ -9514,22 +9514,12 @@ static int ath12k_mac_vdev_create(struct
 
 err_peer_del:
 	if (ahvif->vdev_type == WMI_VDEV_TYPE_AP) {
-		reinit_completion(&ar->peer_delete_done);
-
-		ret = ath12k_wmi_send_peer_delete_cmd(ar, link_addr,
-						      arvif->vdev_id);
-		if (ret) {
-			ath12k_warn(ar->ab, "failed to delete peer vdev_id %d addr %pM\n",
-				    arvif->vdev_id, link_addr);
+		fbret = ath12k_peer_delete(ar, arvif->vdev_id, link_addr);
+		if (fbret) {
+			ath12k_warn(ar->ab, "failed to delete peer %pM vdev_id %d ret %d\n",
+				    link_addr, arvif->vdev_id, fbret);
 			goto err;
 		}
-
-		ret = ath12k_wait_for_peer_delete_done(ar, arvif->vdev_id,
-						       link_addr);
-		if (ret)
-			goto err;
-
-		ar->num_peers--;
 	}
 
 err_vdev_del:
--- a/drivers/net/wireless/ath/ath12k/peer.c
+++ b/drivers/net/wireless/ath/ath12k/peer.c
@@ -327,7 +327,7 @@ static int ath12k_peer_delete_send(struc
 	return 0;
 }
 
-int ath12k_peer_delete(struct ath12k *ar, u32 vdev_id, u8 *addr)
+static int __ath12k_peer_delete(struct ath12k *ar, u32 vdev_id, u8 *addr)
 {
 	int ret;
 
@@ -341,6 +341,19 @@ int ath12k_peer_delete(struct ath12k *ar
 	if (ret)
 		return ret;
 
+	return 0;
+}
+
+int ath12k_peer_delete(struct ath12k *ar, u32 vdev_id, u8 *addr)
+{
+	int ret;
+
+	lockdep_assert_held(&ar->conf_mutex);
+
+	ret = __ath12k_peer_delete(ar, vdev_id, addr);
+	if (ret)
+		return ret;
+
 	ar->num_peers--;
 
 	return 0;
@@ -469,20 +482,10 @@ int ath12k_peer_create(struct ath12k *ar
 		ath12k_warn(ar->ab, "failed to find peer %pM on vdev %i after creation\n",
 			    param->peer_addr, param->vdev_id);
 
-		reinit_completion(&ar->peer_delete_done);
-
-		ret = ath12k_wmi_send_peer_delete_cmd(ar, param->peer_addr,
-						      param->vdev_id);
-		if (ret) {
+		ret = __ath12k_peer_delete(ar, param->vdev_id, param->peer_addr);
+		if (ret)
 			ath12k_warn(ar->ab, "failed to delete peer vdev_id %d addr %pM\n",
 				    param->vdev_id, param->peer_addr);
-			return ret;
-		}
-
-		ret = ath12k_wait_for_peer_delete_done(ar, param->vdev_id,
-						       param->peer_addr);
-		if (ret)
-			return ret;
 
 		return -ENOENT;
 	}

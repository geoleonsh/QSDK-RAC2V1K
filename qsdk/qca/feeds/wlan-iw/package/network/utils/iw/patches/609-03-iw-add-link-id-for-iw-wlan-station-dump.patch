From 21b83739d21aa8d995f004b35a8b14a26598ac47 Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Thu, 24 Nov 2022 10:35:40 +0530
Subject: [PATCH] iw: display link id for iw wlan# station dump

print associated link id for each interface.

for MLO iw wlan# station dump will display
Station 00:7a:f6:22:12:3e (on wlan0 - link0, link1)
	inactive time:  16160 ms
        rx bytes:       2984
        rx packets:     5
        tx bytes:       858
        tx packets:     0
        tx retries:     0
        tx failed:      0
        rx drop misc:   0
        signal:         -43 dBm
        tx bitrate:     6.0 MBit/s
        tx duration:    1366 us
        rx duration:    0 us
        authorized:     no
        authenticated:  no
        associated:     no
        WMM/WME:        no
        DTIM period:    0
        beacon interval:0
        short preamble: yes
        short slot time:yes
        connected time: 294 seconds
        associated at [boottime]:       18411.885s
        associated at:  1668599688499 ms
        current time:   1668599982613 ms

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 station.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

--- a/station.c
+++ b/station.c
@@ -307,6 +307,7 @@ static int print_sta_handler(struct nl_m
 	struct nlattr *tb[NL80211_ATTR_MAX + 1];
 	struct genlmsghdr *gnlh = nlmsg_data(nlmsg_hdr(msg));
 	struct nlattr *sinfo[NL80211_STA_INFO_MAX + 1];
+	struct nlattr *attrs, *link[NL80211_ATTR_MAX + 1];
 	char mac_addr[20], state_name[10], dev[20];
 	struct nl80211_sta_flag_update *sta_flags;
 	static struct nla_policy stats_policy[NL80211_STA_INFO_MAX + 1] = {
@@ -376,7 +377,24 @@ static int print_sta_handler(struct nl_m
 
 	mac_addr_n2a(mac_addr, nla_data(tb[NL80211_ATTR_MAC]));
 	if_indextoname(nla_get_u32(tb[NL80211_ATTR_IFINDEX]), dev);
-	printf("Station %s (on %s)", mac_addr, dev);
+	if (tb[NL80211_ATTR_MLO_LINKS]) {
+		int ret = 0, offset = 0;
+		const char *indent = "";
+		char link_buf[MLD_MAX_LINK_BUF_SIZE];
+		nla_for_each_nested(attrs, tb[NL80211_ATTR_MLO_LINKS], ret) {
+			nla_parse_nested(link, NL80211_ATTR_MAX, attrs, NULL);
+			if (link[NL80211_ATTR_MLO_LINK_ID]) {
+				offset += snprintf(link_buf + offset,
+						  MLD_MAX_LINK_BUF_SIZE - offset,
+						  "%slink%d", indent,
+						  nla_get_u8(link[NL80211_ATTR_MLO_LINK_ID]));
+				indent = ", ";
+			}
+		}
+		printf("Station %s (on %s - %s)", mac_addr, dev, link_buf);
+	} else {
+		printf("Station %s (on %s)", mac_addr, dev);
+	}
 
 	if (sinfo[NL80211_STA_INFO_INACTIVE_TIME])
 		printf("\n\tinactive time:\t%u ms",
--- a/iw.h
+++ b/iw.h
@@ -41,6 +41,7 @@ enum nlmsgerr_attrs {
 
 #define ETH_ALEN 6
 #define VHT_MUMIMO_GROUP_LEN 24
+#define MLD_MAX_LINK_BUF_SIZE 100
 #define MAX_MLD_LINK 15

 /* libnl 1.x compatibility code */

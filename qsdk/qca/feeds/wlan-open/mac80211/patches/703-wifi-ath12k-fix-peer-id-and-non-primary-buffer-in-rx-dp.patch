From 641a5058caacadde6e559d37fe2c149aa6669db1 Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Fri, 16 Dec 2022 12:31:00 +0530
Subject: [PATCH] wifi: ath12k: fix non primary buffer in rx dp

peer id decode from the peer meta data present in the REO ring decriptor
is wrong due to wrong field mask. So update the correct peer field mask.
Store the hw link id in the skb_cb to retrieve the correct radio for the
given pkt. Also mac_id is not needed since hw link id is enough to pick
mac_id. Due to wrong pdev selection for the given peer, peer lookup fails.
So now with the updated hw link id, the rx status chosen with correct
link id.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -123,7 +123,7 @@ struct ath12k_skb_rxcb {
 	struct hal_rx_desc *rx_desc;
 	u8 err_rel_src;
 	u8 err_code;
-	u8 mac_id;
+	u8 hw_link_id;
 	u8 unmapped;
 	u8 is_frag;
 	u8 tid;
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -3054,7 +3054,7 @@ static void ath12k_dp_rx_process_receive
 	struct ath12k_skb_rxcb *rxcb;
 	struct sk_buff *msdu;
 	struct ath12k *ar;
-	u8 mac_id;
+	u8 mac_id, hw_link_id;
 	int ret;
 	bool fast_rx;
 
@@ -3070,9 +3070,22 @@ static void ath12k_dp_rx_process_receive
 		fast_rx = true;
 		rxcb->napi = napi;
 
-		mac_id = rxcb->mac_id;
-		ar = ab->pdevs[mac_id].ar;
-		if (!rcu_dereference(ab->pdevs_active[mac_id])) {
+		hw_link_id = rxcb->hw_link_id;
+		if (hw_link_id >= ATH12K_GROUP_MAX_RADIO) {
+			dev_kfree_skb_any(msdu);
+			ath12k_warn(ab, "invalid hw link id %d\n", hw_link_id);
+			continue;
+		}
+
+		ar = rcu_dereference(ab->ag->hw_links[hw_link_id]);
+		if (!ar) {
+			dev_kfree_skb_any(msdu);
+			ath12k_warn(ab, "invalid pdev for hw link id %d\n", hw_link_id);
+			continue;
+		}
+
+		mac_id = ar->pdev_idx;
+		if (!rcu_dereference(ar->ab->pdevs_active[mac_id])) {
 			dev_kfree_skb_any(msdu);
 			continue;
 		}
@@ -3085,7 +3098,9 @@ static void ath12k_dp_rx_process_receive
 		ret = ath12k_dp_rx_process_msdu(ar, msdu, msdu_list, &rx_status, &fast_rx);
 		if (ret) {
 			ath12k_dbg(ab, ATH12K_DBG_DATA,
-				   "Unable to process msdu %d", ret);
+				   "Unable to process %s chip_id %d msdu %d",
+				    (ab != ar->ab) ? "partner" : "own",
+				    ar->ab->chip_id, ret);
 			dev_kfree_skb_any(msdu);
 			continue;
 		}
@@ -3111,7 +3126,6 @@ int ath12k_dp_rx_process(struct ath12k_b
 	struct hal_srng *srng;
 	struct sk_buff *msdu;
 	bool done = false;
-	int mac_id;
 	u32 *rx_desc;
 	u64 desc_va;
 	struct ath12k_sta *ahsta = NULL;
@@ -3163,7 +3177,6 @@ try_again:
 			continue;
 		}
 
-		mac_id = ar->pdev_idx;
 		src_ab = ar->ab;
 		rcu_read_unlock();
 
@@ -3208,7 +3221,7 @@ try_again:
 					RX_MSDU_DESC_INFO0_LAST_MSDU_IN_MPDU);
 		rxcb->is_continuation = !!(desc.rx_msdu_info.info0 &
 					   RX_MSDU_DESC_INFO0_MSDU_CONTINUATION);
-		rxcb->mac_id = mac_id;
+		rxcb->hw_link_id = hw_link_id;
 		rxcb->peer_id = u32_get_bits(desc.rx_mpdu_info.peer_meta_data,
 					     RX_MPDU_DESC_META_DATA_PEER_ID);
 		rxcb->tid = u32_get_bits(desc.rx_mpdu_info.info0,
@@ -4024,6 +4037,11 @@ int ath12k_dp_rx_process_err(struct ath1
 		for (i = 0; i < num_msdus; i++) {
 			mac_id = u32_get_bits(reo_desc->info0,
 					      HAL_REO_DEST_RING_INFO0_SRC_LINK_ID);
+			if (mac_id >= ab->num_radios) {
+				tot_n_bufs_reaped++;
+				ath12k_warn(ab, "invalid mac id %d on err process\n", mac_id);
+				continue;
+			}
 
 			ar = ab->pdevs[mac_id].ar;
 
--- a/drivers/net/wireless/ath/ath12k/hal_desc.h
+++ b/drivers/net/wireless/ath/ath12k/hal_desc.h
@@ -606,8 +606,7 @@ struct hal_tlv_parsed_hdr {
 #define RX_MPDU_DESC_INFO0_MPDU_QOS_CTRL_VALID	BIT(27)
 #define RX_MPDU_DESC_INFO0_TID			GENMASK(31, 28)
 
-/* TODO revisit after meta data is concluded */
-#define RX_MPDU_DESC_META_DATA_PEER_ID		GENMASK(15, 0)
+#define RX_MPDU_DESC_META_DATA_PEER_ID		GENMASK(13, 0)
 
 struct rx_mpdu_desc {
 	u32 info0; /* %RX_MPDU_DESC_INFO */
--- a/drivers/net/wireless/ath/ath12k/hal.c
+++ b/drivers/net/wireless/ath/ath12k/hal.c
@@ -351,7 +351,8 @@ static u8 ath12k_hw_qcn9274_rx_desc_get_
 
 static u16 ath12k_hw_qcn9274_rx_desc_get_mpdu_peer_id(struct hal_rx_desc *desc)
 {
-	return __le16_to_cpu(desc->u.qcn9274.mpdu_start.sw_peer_id);
+	return le16_get_bits(desc->u.qcn9274.mpdu_start.sw_peer_id,
+			     RX_MPDU_START_SW_PEER_ID_PEER);
 }
 
 static void ath12k_hw_qcn9274_rx_desc_copy_end_tlv(struct hal_rx_desc *fdesc,
--- a/drivers/net/wireless/ath/ath12k/rx_desc.h
+++ b/drivers/net/wireless/ath/ath12k/rx_desc.h
@@ -59,6 +59,8 @@ enum rx_desc_decrypt_status_code {
 #define RX_MPDU_START_INFO3_AST_LOOKUP_VALID		BIT(13)
 #define RX_MPDU_START_INFO3_RANGING			BIT(14)
 
+#define RX_MPDU_START_SW_PEER_ID_PEER                  GENMASK(13, 0)
+
 #define RX_MPDU_START_INFO4_MPDU_FCTRL_VALID		BIT(0)
 #define RX_MPDU_START_INFO4_MPDU_DUR_VALID		BIT(1)
 #define RX_MPDU_START_INFO4_MAC_ADDR1_VALID		BIT(2)

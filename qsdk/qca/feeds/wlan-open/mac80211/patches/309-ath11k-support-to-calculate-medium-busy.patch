From c31de27bddeadbb576555ad9c96a0dab618295f8 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <haric@codeaurora.org>
Date: Thu, 15 Jul 2021 19:09:36 +0530
Subject: [PATCH] ath11k : support to calculate medium busy

Signed-off-by: Hari Chandrakanthan <haric@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/debugfs.c | 26 ++++++++++++++++++++++++++
 drivers/net/wireless/ath/ath11k/wmi.c     | 25 +++++++++++++++++++++++++
 include/net/mac80211.h                    |  1 +
 net/mac80211/mesh_hwmp.c                  | 11 +++++++----
 net/mac80211/mesh_pathtbl.c               |  5 +++--
 5 files changed, 62 insertions(+), 6 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -4057,6 +4057,30 @@ static const struct file_operations fops
 	.llseek = default_llseek,
 };
 
+static ssize_t ath11k_medium_busy_read(struct file *file,
+				       char __user *user_buf,
+				       size_t count, loff_t *ppos)
+{
+	struct ath11k *ar = file->private_data;
+	u8 buf[50];
+	size_t len = 0;
+
+	mutex_lock(&ar->conf_mutex);
+	len += scnprintf(buf + len, sizeof(buf) - len,
+			 "Medium Busy in percentage %u\n",
+			 ar->hw->medium_busy);
+	mutex_unlock(&ar->conf_mutex);
+
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static const struct file_operations fops_medium_busy = {
+	.read = ath11k_medium_busy_read,
+	.open = simple_open,
+	.owner = THIS_MODULE,
+	.llseek = default_llseek,
+};
+
 int ath11k_debugfs_register(struct ath11k *ar)
 {
 	struct ath11k_base *ab = ar->ab;
@@ -4169,6 +4193,8 @@ int ath11k_debugfs_register(struct ath11
 			    ar->debug.debugfs_pdev, ar, &fops_ani_poll_period);
 	debugfs_create_file("ani_listen_period", S_IRUSR | S_IWUSR,
 			    ar->debug.debugfs_pdev, ar, &fops_ani_listen_period);
+	debugfs_create_file("medium_busy", S_IRUSR, ar->debug.debugfs_pdev, ar,
+			    &fops_medium_busy);
 	return 0;
 }
 
--- a/drivers/net/wireless/ath/ath11k/wmi.c
+++ b/drivers/net/wireless/ath/ath11k/wmi.c
@@ -6892,6 +6892,7 @@ static int ath11k_wmi_tlv_fw_stats_data_
 	struct ath11k_sta *arsta;
 	int i, ret = 0;
 	const void *data = ptr;
+	u64 time, time_busy;
 
 	if (!ev) {
 		ath11k_warn(ab, "failed to fetch update stats ev");
@@ -6927,7 +6928,16 @@ static int ath11k_wmi_tlv_fw_stats_data_
 		ath11k_wmi_pull_pdev_stats_tx(&src->tx, dst);
 		ath11k_wmi_pull_pdev_stats_rx(&src->rx, dst);
 		list_add_tail(&dst->list, &stats->pdevs);
+
+		spin_lock_bh(&ar->data_lock);
+		time = div_u64(dst->cycle_count, ab->cc_freq_hz);
+		if(ar && time) {
+			time_busy = div_u64(dst->rx_clear_count, ab->cc_freq_hz);
+			ar->hw->medium_busy = div_u64((time_busy * 100), time);
+		}
+		spin_unlock_bh(&ar->data_lock);
 	}
+	rcu_read_unlock();
 
 	for (i = 0; i < ev->num_vdev_stats; i++) {
 		const struct wmi_vdev_stats *src;
@@ -8511,6 +8521,9 @@ static void ath11k_chan_info_event(struc
 				 SURVEY_INFO_TIME_BUSY;
 		survey->time = div_u64(ch_info_ev.cycle_count, cc_freq_hz);
 		survey->time_busy = div_u64(ch_info_ev.rx_clear_count, cc_freq_hz);
+		if (survey->time)
+			ar->hw->medium_busy = div_u64((survey->time_busy * 100),
+						      survey->time);
 	}
 exit:
 	spin_unlock_bh(&ar->data_lock);
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -2849,6 +2849,7 @@ struct ieee80211_hw {
 	const s8 *tx_power_levels;
 	u8 max_txpwr_levels_idx;
 	u32 dbg_mask;
+	u8 medium_busy;
 };
 
 static inline bool _ieee80211_hw_check(struct ieee80211_hw *hw,
--- a/net/mac80211/mesh_hwmp.c
+++ b/net/mac80211/mesh_hwmp.c
@@ -560,11 +560,12 @@ static u32 hwmp_route_info_get(struct ie
 				signal_avg = -ewma_signal_read(&sta->deflink.rx_stats_avg.signal);
 				mpath_dbg(sdata, "MESH MPLMU DIRECT dst %pM next hop"
 					  " %pM metric from %d to %d ft 0x%x signal %d"
-					  "dbm signal_avg %d dbm\n",
+					  "dbm signal_avg %d dbm medium_busy %u\n",
 					  mpath->dst, sta->deflink.addr, mpath->metric,
 					  new_metric, action,
 					  sta->deflink.rx_stats.last_signal,
-					  signal_avg);
+					  signal_avg,
+					  sta->local->hw.medium_busy);
 				mpath_metric_change = 1;
 			}
 			mesh_path_assign_nexthop(mpath, sta);
@@ -632,11 +633,12 @@ static u32 hwmp_route_info_get(struct ie
 				signal_avg = -ewma_signal_read(&sta->deflink.rx_stats_avg.signal);
 				mpath_dbg(sdata, "MESH MPLMU DIRECT dst %pM next hop"
 					  " %pM metric from %d to %d ft 0x%x signal"
-					  " %d dbm signal_avg %d dbm\n",
+					  " %d dbm signal_avg %d dbm medium_busy %u\n",
 					  mpath->dst, sta->deflink.addr, mpath->metric,
 					  last_hop_metric, action,
 					  sta->deflink.rx_stats.last_signal,
-					  signal_avg);
+					  signal_avg,
+					  sta->local->hw.medium_busy);
 				mpath_metric_change = 1;
 			}
 
--- a/net/mac80211/mesh_pathtbl.c
+++ b/net/mac80211/mesh_pathtbl.c
@@ -618,10 +618,11 @@ void mesh_plink_broken(struct sta_info *
 	if (paths_deactivated) {
 		signal_avg = -ewma_signal_read(&sta->deflink.rx_stats_avg.signal);
 		sdata_info(sta->sdata, " MESH MPL link to %pM is broken and"
-			   " %d path deactivated signal %d dbm signal_avg %d dbm\n",
+			   " %d path deactivated signal %d dbm signal_avg %d dbm"
+			   " medium_busy : %d\n",
 			   sta->deflink.addr, paths_deactivated,
 			   sta->deflink.rx_stats.last_signal,
-			   signal_avg);
+			   signal_avg, sta->local->hw.medium_busy);
 		mesh_continuous_tx_fail_cnt(sta, NL80211_MPATH_BROKEN_NOTIFY);
 	}
 }

From abd27d063c2e85e45ffc4390247abf47e5b55997 Mon Sep 17 00:00:00 2001
From: Johannes Berg <johannes.berg@intel.com>
Date: Thu, 25 Aug 2022 20:57:32 +0200
Subject: [PATCH] wifi: mac80211: correct SMPS mode in HE 6 GHz capability

If we add 6 GHz capability in MLO, we cannot use the SMPS
mode from the deflink. Pass it separately instead since on
a second link we don't even have a link data struct yet.

Cherry picked from the patch: https://git.kernel.org/pub/scm/linux/kernel/git/wireless/wireless-next.git/commit/?id=abd27d0

Signed-off-by: Johannes Berg <johannes.berg@intel.com>
Signed-off-by: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
---
 net/mac80211/ieee80211_i.h | 1 +
 net/mac80211/mesh.c        | 2 +-
 net/mac80211/mlme.c        | 5 +++--
 net/mac80211/util.c        | 3 ++-
 4 files changed, 7 insertions(+), 4 deletions(-)

--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -2488,6 +2488,7 @@ u8 *ieee80211_ie_build_he_cap(ieee80211_
 			      const struct ieee80211_sta_he_cap *he_cap,
 			      u8 *end);
 void ieee80211_ie_build_he_6ghz_cap(struct ieee80211_sub_if_data *sdata,
+				    enum ieee80211_smps_mode smps_mode,
 				    struct sk_buff *skb);
 u8 *ieee80211_ie_build_he_oper(u8 *pos, struct cfg80211_chan_def *chandef);
 u8 ieee80211_ie_len_eht_cap(struct ieee80211_sub_if_data *sdata, u8 iftype);
--- a/net/mac80211/mesh.c
+++ b/net/mac80211/mesh.c
@@ -646,7 +646,8 @@ int mesh_add_he_6ghz_cap_ie(struct ieee8
 		return 0;
 
 	if (sband->band == NL80211_BAND_6GHZ)
-		ieee80211_ie_build_he_6ghz_cap(sdata, skb);
+		ieee80211_ie_build_he_6ghz_cap(sdata,
+					       sdata->deflink.smps_mode, skb);
 	return 0;
 }
 
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -719,6 +719,7 @@ static bool ieee80211_add_vht_ie(struct
 static void ieee80211_add_he_ie(struct ieee80211_sub_if_data *sdata,
 				struct sk_buff *skb,
 				struct ieee80211_supported_band *sband,
+				enum ieee80211_smps_mode smps_mode,
 				ieee80211_conn_flags_t conn_flags)
 {
 	u8 *pos, *pre_he_pos;
@@ -744,7 +745,7 @@ static void ieee80211_add_he_ie(struct i
 	skb_trim(skb, skb->len - (pre_he_pos + he_cap_size - pos));
 
 	if (sband->band == NL80211_BAND_6GHZ)
-		ieee80211_ie_build_he_6ghz_cap(sdata, skb);
+		ieee80211_ie_build_he_6ghz_cap(sdata, smps_mode, skb);
 }
 
 static void ieee80211_add_eht_ie(struct ieee80211_sub_if_data *sdata,
@@ -1125,7 +1126,7 @@ static size_t ieee80211_assoc_link_elems
 					       offset);
 
 	if (!(assoc_data->link[link_id].conn_flags & IEEE80211_CONN_DISABLE_HE)) {
-		ieee80211_add_he_ie(sdata, skb, sband,
+		ieee80211_add_he_ie(sdata, skb, sband, smps_mode,
 				    assoc_data->link[link_id].conn_flags);
 		ADD_PRESENT_EXT_ELEM(WLAN_EID_EXT_HE_CAPABILITY);
 	}
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -3275,6 +3275,7 @@ end:
 }
 
 void ieee80211_ie_build_he_6ghz_cap(struct ieee80211_sub_if_data *sdata,
+				    enum ieee80211_smps_mode smps_mode,
 				    struct sk_buff *skb)
 {
 	struct ieee80211_supported_band *sband;
@@ -3301,7 +3302,7 @@ void ieee80211_ie_build_he_6ghz_cap(stru
 	cap = le16_to_cpu(iftd->he_6ghz_capa.capa);
 	cap &= ~IEEE80211_HE_6GHZ_CAP_SM_PS;
 
-	switch (sdata->deflink.smps_mode) {
+	switch (smps_mode) {
 	case IEEE80211_SMPS_AUTOMATIC:
 	case IEEE80211_SMPS_NUM_MODES:
 		WARN_ON(1);

From 3f9b2aecfba008204d51e8550e89493ccd532c9f Mon Sep 17 00:00:00 2001
From: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
Date: Wed, 21 Jun 2023 10:29:43 +0530
Subject: [PATCH] wifi: ath12k: changes for sta mlo support in single wiphy

Add the changes for sta mlo single wiphy arch from single netdev arch

Signed-off-by: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 74 ++++++++++++++++-----------
 1 file changed, 43 insertions(+), 31 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -3950,18 +3950,28 @@ static void ath12k_bss_assoc(struct ath1
 	bool is_auth = false;
 	int ret;
 	struct vdev_up_params params = { 0 };
+	u8 link_id;
+	u16 he_6ghz_capa;
 
 	lockdep_assert_held(&ar->conf_mutex);
 
 	if (!arvif)
 		return;
 
-	ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "mac vdev %i assoc bssid %pM aid %d\n",
-		   arvif->vdev_id, arvif->bssid, ahvif->aid);
+	link_id = bss_conf->link_id;
+
+	ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "mac vdev %i link_id:%d assoc bssid %pM aid %d\n",
+		   arvif->vdev_id, link_id,  arvif->bssid, ahvif->aid);
 
 	rcu_read_lock();
 
-	ap_sta = ieee80211_find_sta(vif, bss_conf->bssid);
+//     ap_sta = ieee80211_find_sta(vif, bss_conf->bssid);
+	/* TODO, need check correct or not while debug later.
+	 * ieee80211_sta should find by MLO address for MLO
+	 * or bssid for non-MLO.
+	 */
+	ap_sta = ieee80211_find_sta(vif,vif->cfg.ap_addr);
+
 	if (!ap_sta) {
 		ath12k_warn(ar->ab, "failed to find station entry for bss %pM vdev %i\n",
 			    bss_conf->bssid, arvif->vdev_id);
@@ -3970,10 +3980,10 @@ static void ath12k_bss_assoc(struct ath1
 	}
 
 	ahsta = (struct ath12k_sta *)ap_sta->drv_priv;
-	arsta = &ahsta->deflink;
+	arsta = ahsta->link[link_id];
 
 	/* he_cap here is updated at assoc success for sta mode only */
-	he_cap = ap_sta->deflink.he_cap;
+	he_cap = ap_sta->link[link_id]->he_cap;
 
 	ath12k_peer_assoc_prepare(ar, arvif, arsta, &peer_arg, false);
 
@@ -3993,9 +4003,11 @@ static void ath12k_bss_assoc(struct ath1
 		return;
 	}
 
+	he_6ghz_capa = ap_sta->link[link_id]->he_6ghz_capa.capa;
+
 	ret = ath12k_setup_peer_smps(ar, arvif, bss_conf->bssid,
-				     &ap_sta->deflink.ht_cap,
-				     le16_to_cpu(ap_sta->deflink.he_6ghz_capa.capa));
+				     &ap_sta->link[link_id]->ht_cap,
+				     le16_to_cpu(he_6ghz_capa));
 	if (ret) {
 		ath12k_warn(ar->ab, "failed to setup peer SMPS for vdev %d: %d\n",
 			    arvif->vdev_id, ret);
@@ -4810,6 +4822,9 @@ static void ath12k_mac_op_vif_cfg_change
 	struct ath12k_vif *ahvif = ath12k_vif_to_ahvif(vif);
 	struct ath12k_link_vif *arvif;
 	struct ath12k *ar;
+	unsigned long links_map;
+	unsigned long link_id;
+	struct ieee80211_bss_conf *info;
 
 	if (changed & BSS_CHANGED_SSID &&
 	    vif->type == NL80211_IFTYPE_AP) {
@@ -4818,19 +4833,21 @@ static void ath12k_mac_op_vif_cfg_change
 			memcpy(ahvif->u.ap.ssid, vif->cfg.ssid, vif->cfg.ssid_len);
 	}
 
+	link_id = ahvif->deflink.link_id;
+	links_map = ahvif->links_map;
+
 	if (changed & BSS_CHANGED_ASSOC) {
-		/* TODO Handle STA ML assoc */
-		arvif = &ahvif->deflink;
-		if (!(arvif && arvif->ar)) {
-			ath12k_err(NULL, "unable to change vif config\n");
-			return;
+		for_each_set_bit(link_id, &links_map, IEEE80211_MLD_MAX_NUM_LINKS) {
+			arvif = ahvif->link[link_id];
+			info = vif->link_conf[link_id];
+			ar = arvif->ar;
+			if (vif->cfg.assoc) {
+				if (info)
+					ath12k_bss_assoc(ar, arvif, info);
+			} else {
+				ath12k_bss_disassoc(ar, arvif, false);
+			}
 		}
-		ar = arvif->ar;
-
-		if (vif->cfg.assoc)
-			ath12k_bss_assoc(ar, arvif, &vif->bss_conf);
-		else
-			ath12k_bss_disassoc(ar, arvif, false);
 	}
 }
 
@@ -6835,10 +6852,6 @@ static int ath12k_mac_station_remove(str
 
 	lockdep_assert_held(&ar->conf_mutex);
 
-	/* This would be done separately */
-	if (sta->mlo)
-		return 0;
-
 	ath12k_dp_peer_cleanup(ar, arvif->vdev_id, arsta->addr);
 
 	skip_peer_delete = ar->ab->hw_params->vdev_start_delay &&
@@ -7364,12 +7377,6 @@ int ath12k_mac_update_sta_state(struct i
 		return ret;
 	}
 
-	/* Support only AP for now */
-	if (vif->type != NL80211_IFTYPE_AP) {
-		ret = -EINVAL;
-		goto exit;
-	}
-
 	if (!sta->valid_links)
 		WARN_ON(1);
 

From 4859e151de0e853881ae9959c687b6e29ace66d2 Mon Sep 17 00:00:00 2001
From: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
Date: Wed, 21 Jun 2023 10:54:59 +0530
Subject: [PATCH] cfg80211/mac80211: Fixes for sta mlo support

Add fixes in cfg80211/80211 to support sta mlo

Signed-off-by: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
---
 net/mac80211/mlme.c | 3 ++-
 net/mac80211/rx.c   | 4 +++-
 2 files changed, 5 insertions(+), 2 deletions(-)

--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -6875,24 +6875,7 @@ int ieee80211_mgd_assoc(struct ieee80211
 
 	for (i = 0; i < IEEE80211_MLD_MAX_NUM_LINKS; i++)
 		size += req->links[i].elems_len;
-
-	if (req->ap_mld_addr) {
-		for (i = 0; i < IEEE80211_MLD_MAX_NUM_LINKS; i++) {
-			if (!req->links[i].bss)
-				continue;
-			if (i == assoc_link_id)
-				continue;
-			/*
-			 * For now, support only a single link in MLO, we
-			 * don't have the necessary parsing of the multi-
-			 * link element in the association response, etc.
-			 */
-			sdata_info(sdata,
-				   "refusing MLO association with >1 links\n");
-			return -EINVAL;
-		}
-	}
-
+	
 	assoc_data = kzalloc(size, GFP_KERNEL);
 	if (!assoc_data)
 		return -ENOMEM;
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -5228,7 +5228,9 @@ static bool ieee80211_prepare_and_rx_han
 		hdr = (struct ieee80211_hdr *)rx->skb->data;
 	}
 
-	if (unlikely(rx->sta && rx->sta->sta.mlo)) {
+	if (unlikely(rx->sta && rx->sta->sta.mlo) &&
+	    is_unicast_ether_addr(hdr->addr1) &&
+	    !(ieee80211_is_probe_resp(hdr->frame_control))) {
 		/* translate to MLD addresses */
 		if (ether_addr_equal(link->conf->addr, hdr->addr1))
 			ether_addr_copy(hdr->addr1, rx->sdata->vif.addr);

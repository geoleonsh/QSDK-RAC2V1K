From bea6cd3fa371327f97149c2f95326fe4f5cbeaa6 Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Wed, 21 Sep 2022 12:32:47 +0530
Subject: [PATCH] ath12k: enable ampdu flag in radiotap header for data frame alone

AMPDU id is fetched from the MPDU_START TLV and it is appended for all kind of
802.11 frames. So AMPDU flag gets added for the management frames which is not
expected.

Fix it by enabling AMPDU id in radiotap header, when driver receives number of
mpdu fcs ok or number of mpdu fcs error greater than 1 (which implies data frame).

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_mon.c | 11 ++++++++---
 drivers/net/wireless/ath/ath12k/hal_rx.h |  2 ++
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_mon.c b/drivers/net/wireless/ath/ath12k/dp_mon.c
index 7d35973..edf25d8 100644
--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -1513,6 +1513,9 @@ ath12k_dp_mon_rx_parse_status_tlv(struct ath12k_base *ab,
 		ppdu_info->peer_id =
 			u32_get_bits(info[0], HAL_RX_PPDU_END_USER_STATS_INFO0_PEER_ID);
 
+		if ((ppdu_info->num_mpdu_fcs_ok | ppdu_info->num_mpdu_fcs_err) > 1)
+			ppdu_info->userstats[userid].ampdu_present = true;
+
 		switch (ppdu_info->preamble_type) {
 		case HAL_RX_PREAMBLE_11N:
 			ppdu_info->ht_flags = 1;
@@ -1625,6 +1628,7 @@ ath12k_dp_mon_rx_parse_status_tlv(struct ath12k_base *ab,
 			(struct hal_rx_mpdu_start *)tlv_data;
 		u16 peer_id;
 
+		info[0] = __le32_to_cpu(mpdu_start->info0);
 		info[1] = __le32_to_cpu(mpdu_start->info1);
 		peer_id = u32_get_bits(info[1], HAL_RX_MPDU_START_INFO1_PEERID);
 		if (peer_id)
@@ -1635,8 +1639,8 @@ ath12k_dp_mon_rx_parse_status_tlv(struct ath12k_base *ab,
 		if (userid < HAL_MAX_UL_MU_USERS) {
 			info[1] = __le32_to_cpu(mpdu_start->info1);
 			ppdu_info->userid = userid;
-			ppdu_info->ampdu_id[userid] =
-				u32_get_bits(info[1], HAL_RX_MPDU_START_INFO1_PEERID);
+			ppdu_info->userstats[userid].ampdu_id =
+				u32_get_bits(info[0], HAL_RX_MPDU_START_INFO0_PPDU_ID);
 		}
 
 		break;
@@ -2067,12 +2071,13 @@ static void ath12k_dp_mon_update_radiotap(struct ath12k *ar,
 	u8 *ptr = NULL;
 	u16 ampdu_id = ppduinfo->ampdu_id[ppduinfo->userid];
 	u32 ru_size;
+	bool ampdu_present = ppduinfo->userstats[ppduinfo->userid].ampdu_present;
 
 	rxs->flag |= RX_FLAG_MACTIME_START;
 	rxs->signal = ppduinfo->rssi_comb + ATH12K_DEFAULT_NOISE_FLOOR;
 	rxs->nss = ppduinfo->nss + 1;
 
-	if (ampdu_id) {
+	if (ampdu_present) {
 		rxs->flag |= RX_FLAG_AMPDU_DETAILS;
 		rxs->ampdu_reference = ampdu_id;
 	}
diff --git a/drivers/net/wireless/ath/ath12k/hal_rx.h b/drivers/net/wireless/ath/ath12k/hal_rx.h
index 62025d8..ce73ef6 100644
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -147,6 +147,8 @@ struct hal_rx_user_status {
 	u32 mpdu_fcs_ok_bitmap[HAL_RX_NUM_WORDS_PER_PPDU_BITMAP];
 	u32 mpdu_ok_byte_count;
 	u32 mpdu_err_byte_count;
+	u32 ampdu_id;
+	bool ampdu_present;
 };
 
 struct msdu_info {
-- 
2.17.1


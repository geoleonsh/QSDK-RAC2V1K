From 51bc17c4164720e632a2cf2ad78d91fd55a591a9 Mon Sep 17 00:00:00 2001
From: Dinesh Karthikeyan <quic_dinek@quicinc.com>
Date: Thu, 27 Apr 2023 14:32:42 +0530
Subject: [PATCH] ath12k: Fill vdev_id for fwtest command

Fill vdev id in the fwtest command so that respective valid vdev id
for the interface is sent properly.

Signed-off-by: Dinesh Karthikeyan <quic_dinek@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/testmode.c | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/testmode.c
+++ b/drivers/net/wireless/ath/ath12k/testmode.c
@@ -303,10 +303,14 @@ err:
 	mutex_unlock(&ar->conf_mutex);
 	return ret;
 }
-static int ath12k_tm_cmd_wmi(struct ath12k *ar, struct nlattr *tb[])
+static int ath12k_tm_cmd_wmi(struct ath12k *ar, struct nlattr *tb[],
+			     struct ieee80211_vif *vif, u8 link_id)
 {
 	struct ath12k_pdev_wmi *wmi = ar->wmi;
 	struct sk_buff *skb;
+	struct ath12k_vif *ahvif;
+	struct ath12k_link_vif *arvif;
+	struct ath12k_hw *ah = ar->ah;
 	u32 cmd_id, buf_len;
 	int ret, tag;
 	void *buf;
@@ -340,6 +344,29 @@ static int ath12k_tm_cmd_wmi(struct ath1
 	if (tag == WMI_TAG_PDEV_SET_PARAM_CMD)
 		*ptr = ar->pdev->pdev_id;
 
+	if (ar->ab->fw_mode != ATH12K_FIRMWARE_MODE_FTM &&
+	    (tag == WMI_TAG_VDEV_SET_PARAM_CMD || tag == WMI_TAG_UNIT_TEST_CMD)) {
+		if (vif) {
+			mutex_lock(&ah->conf_mutex);
+			ahvif = (struct ath12k_vif *)vif->drv_priv;
+			arvif = ahvif->link[link_id];
+			if (!arvif) {
+				ath12k_warn(ar->ab, "failed to find link interface\n");
+				mutex_unlock(&ah->conf_mutex);
+				ret = -EINVAL;
+				goto out;
+			}
+			*ptr = arvif->vdev_id;
+			mutex_unlock(&ah->conf_mutex);
+		}
+		else {
+			ret = -EINVAL;
+			ath12k_warn(ar->ab, "vdev is not up for given vdev id, so failed to send wmi command (testmode): %d\n",
+				    ret);
+			goto out;
+		}
+	}
+
 	ath12k_dbg(ar->ab, ATH12K_DBG_TESTMODE,
 		   "testmode cmd wmi cmd_id %d  buf length %d\n",
 		   cmd_id, buf_len);
@@ -458,6 +485,7 @@ int ath12k_tm_cmd(struct ieee80211_hw *h
 	enum ath12k_tm_cmd cmd_type;
 	int ret = 0;
 
+
 	ret = nla_parse(tb, ATH12K_TM_ATTR_MAX, data, len, ath12k_tm_policy,
 			NULL);
 	if (ret)
@@ -484,12 +512,18 @@ int ath12k_tm_cmd(struct ieee80211_hw *h
 		return -EINVAL;
 	}
 
+	if (link_id >= IEEE80211_MLD_MAX_NUM_LINKS) {
+		ath12k_warn(ar->ab, "invalid link id specified\n");
+		mutex_unlock(&ah->conf_mutex);
+		return -EINVAL;
+	}
+
 	ab = ar->ab;
 	mutex_unlock(&ah->conf_mutex);
 
 	switch (cmd_type) {
 	case ATH12K_TM_CMD_WMI:
-		return ath12k_tm_cmd_wmi(ar, tb);
+		return ath12k_tm_cmd_wmi(ar, tb, vif, link_id);
 	case ATH12K_TM_CMD_TESTMODE_START:
 		return ath12k_tm_cmd_testmode_start(ar, tb);
 	case ATH12K_TM_CMD_GET_VERSION:

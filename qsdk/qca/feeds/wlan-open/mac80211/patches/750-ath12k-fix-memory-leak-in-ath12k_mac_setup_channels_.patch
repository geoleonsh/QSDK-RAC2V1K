From 15e56dc534430e6b9e4b57300f410439e5616a71 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <quic_haric@quicinc.com>
Date: Wed, 29 Mar 2023 13:37:24 +0530
Subject: [PATCH] ath12k: fix memory leak in ath12k_mac_setup_channels_rates

memory allocated in ath12k_mac_setup_channels_rates and
referenced by ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[]
is not freed during rmmod of ath12k.

Fix it by freeing it in __ath12k_mac_post_unregister.

Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 29 ++++++++++++++++++++++-------
 1 file changed, 22 insertions(+), 7 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 5d5d36c..df0c19d 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -13970,9 +13970,11 @@ static int ath12k_mac_setup_channels_rates(struct ath12k *ar,
                                            GFP_KERNEL);
                         if (!channels) {
                                 kfree(ar->mac.sbands[NL80211_BAND_2GHZ].channels);
-                                for (i = 0; i < NL80211_REG_NUM_POWER_MODES; i++)
-                                         kfree(ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[i]);
-
+				ar->mac.sbands[NL80211_BAND_2GHZ].channels = NULL;
+                                for (i = 0; i < NL80211_REG_NUM_POWER_MODES; i++) {
+					kfree(ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[i]);
+					ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[i] = NULL;
+				}
                                 return -ENOMEM;
                         }
 
@@ -14033,6 +14035,7 @@ static int ath12k_mac_setup_channels_rates(struct ath12k *ar,
 
                                 if (!channels || !chan_6g) {
                                         kfree(ar->mac.sbands[NL80211_BAND_2GHZ].channels);
+					ar->mac.sbands[NL80211_BAND_2GHZ].channels = NULL;
                                         break;
                                 }
 
@@ -14045,9 +14048,9 @@ static int ath12k_mac_setup_channels_rates(struct ath12k *ar,
 
                         if (i < NL80211_REG_NUM_POWER_MODES) {
                                 for (i = i - 1; i >= 0; i--) {
-                                        chan_6g = band->chan_6g[i];
-                                        kfree(chan_6g->channels);
-                                        kfree(chan_6g);
+					kfree(band->chan_6g[i]->channels);
+					kfree(band->chan_6g[i]);
+					band->chan_6g[i] = NULL;
                                 }
                                 return -ENOMEM;
                         }
@@ -14254,12 +14257,24 @@ static void __ath12k_mac_pre_unregister(struct ath12k *ar)
 
 static void __ath12k_mac_post_unregister(struct ath12k *ar)
 {
+	int i;
+
 	idr_for_each(&ar->txmgmt_idr, ath12k_mac_tx_mgmt_pending_free, ar);
 	idr_destroy(&ar->txmgmt_idr);
 
 	kfree(ar->mac.sbands[NL80211_BAND_2GHZ].channels);
 	kfree(ar->mac.sbands[NL80211_BAND_5GHZ].channels);
-	kfree(ar->mac.sbands[NL80211_BAND_6GHZ].channels);
+
+	ar->mac.sbands[NL80211_BAND_2GHZ].channels = NULL;
+	ar->mac.sbands[NL80211_BAND_5GHZ].channels = NULL;
+
+	for (i = 0; i < NL80211_REG_NUM_POWER_MODES; i++) {
+		if (!ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[i])
+			continue;
+		kfree(ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[i]->channels);
+		kfree(ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[i]);
+		ar->mac.sbands[NL80211_BAND_6GHZ].chan_6g[i] = NULL;
+	}
 }
 
 static void __ath12k_mac_unregister(struct ath12k *ar)
-- 
2.7.4


From 5cb67ef86fb5c587ab1959a2bf2922fc2eee54e1 Mon Sep 17 00:00:00 2001
From: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Date: Tue, 17 Jan 2023 17:08:07 -0800
Subject: [PATCH 3/3] ath12k: fix incorrect rates sent to firmware

Sometimes when basic rates are zeros, ath12k is sening invalid
rate codes to firmware which cause firmware assert. Fix this by
sending rate code appropriately for basic rates being 0.

Co-Developed-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Signed-off-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Signed-off-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index c2681c0f15de..d99cd06dc0ad 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -3786,7 +3786,9 @@ static void ath12k_recalculate_mgmt_rate(struct ath12k *ar,
 	lockdep_assert_held(&ar->conf_mutex);
 
 	sband = ar->ah->hw->wiphy->bands[def->chan->band];
-	basic_rate_idx = ffs(link_conf->basic_rates) - 1;
+	basic_rate_idx = ffs(link_conf->basic_rates);
+	if (basic_rate_idx)
+		basic_rate_idx -= 1;
 	bitrate = sband->bitrates[basic_rate_idx].bitrate;
 
 	hw_rate_code = ath12k_mac_get_rate_hw_value(bitrate);
@@ -4283,10 +4285,13 @@ static void ath12k_mac_bss_info_changed(struct ath12k *ar,
 		band = def.chan->band;
 		mcast_rate = info->mcast_rate[band];
 
-		if (mcast_rate > 0)
+		if (mcast_rate > 0) {
 			rateidx = mcast_rate - 1;
-		else
-			rateidx = ffs(info->basic_rates) - 1;
+		} else {
+			rateidx = ffs(info->basic_rates);
+			if (rateidx)
+				rateidx -= 1;
+		}
 
 		if (ar->pdev->cap.supported_bands & WMI_HOST_WLAN_5G_CAP)
 			rateidx += ATH12K_MAC_FIRST_OFDM_RATE_IDX;
@@ -6097,7 +6102,9 @@ static void ath12k_mac_dec_num_stations(struct ath12k_link_vif *arvif,
 	if (ahvif->vdev_type == WMI_VDEV_TYPE_STA && !sta->tdls)
 		return;
 
-	ar->num_stations--;
+	WARN_ON(ar->num_stations == 0);
+	if (ar->num_stations)
+		ar->num_stations--;
 }
 
 static void ath12k_mac_station_post_remove(struct ath12k *ar,
@@ -8364,7 +8371,7 @@ static int ath12k_mac_radio_start(struct ath12k *ar)
 					1, pdev->pdev_id);
 
 	if (ret) {
-		ath12k_err(ab, "failed to enable PMF QOS: (%d\n", ret);
+		ath12k_err(ab, "failed to enable PMF QOS: (%d)\n", ret);
 		goto err;
 	}
 
-- 
2.17.1


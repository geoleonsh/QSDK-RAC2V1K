From f660ffed8b15ab3ca7ae822dc1d5159c25836102 Mon Sep 17 00:00:00 2001
From: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
Date: Mon, 20 Feb 2023 20:30:46 +0530
Subject: [PATCH] ath12k: Add ATH12K_DBG_PEER for serviceability

Peer create, removal is scrattered across ATH12K_DBG_MAC
and ATH12K_DBG_WMI. Both has to be enable to debug client
connectivity related issues which in turn logs additional
MAC/WMI debug log.

Converging client connectivity debug logs under ATH12K_DBG_PEER
debug mask for better serviceability.

Signed-off-by: Ramya Gnanasekar <quic_rgnanase@quicinc.com>

Index: b/drivers/net/wireless/ath/ath12k/debug.h
===================================================================
--- a/drivers/net/wireless/ath/ath12k/debug.h	2023-04-18 20:04:38.796340287 +0530
+++ b/drivers/net/wireless/ath/ath12k/debug.h	2023-04-18 20:12:37.300899604 +0530
@@ -28,6 +28,7 @@ enum ath12k_debug_mask {
 	ATH12K_DBG_DP_RX	= 0x00004000,
 	ATH12K_DBG_OFFSET	= 0x00008000,
 	ATH12K_DBG_RX_REO	= 0x00010000,
+	ATH12K_DBG_PEER		= 0x00020000,
 
 	/* keep last*/
 	ATH12K_DBG_PPE		= 0x80000000,
Index: b/drivers/net/wireless/ath/ath12k/mac.c
===================================================================
--- a/drivers/net/wireless/ath/ath12k/mac.c	2023-04-18 20:04:38.796340287 +0530
+++ b/drivers/net/wireless/ath/ath12k/mac.c	2023-04-18 20:04:38.792340316 +0530
@@ -6242,7 +6242,7 @@ static void ath12k_sta_rc_update_wk(stru
 			/* BW is upgraded. In this case we send WMI_PEER_PHYMODE
 			 * followed by WMI_PEER_CHWIDTH
 			 */
-			ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "mac BW upgrade for sta %pM new BW %d, old BW %d\n",
+			ath12k_dbg(ar->ab, ATH12K_DBG_PEER, "mac BW upgrade for sta %pM new BW %d, old BW %d\n",
 					arsta->addr, bw, bw_prev);
 			err = ath12k_wmi_set_peer_param(ar, arsta->addr,
 					arvif->vdev_id, WMI_PEER_PHYMODE,
@@ -6262,7 +6262,7 @@ static void ath12k_sta_rc_update_wk(stru
 			/* BW is downgraded. In this case we send
 			 * WMI_PEER_CHWIDTH followed by WMI_PEER_PHYMODE
 			 */
-			ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "mac BW downgrade for sta %pM new BW %d,old BW %d\n",
+			ath12k_dbg(ar->ab, ATH12K_DBG_PEER, "mac BW downgrade for sta %pM new BW %d,old BW %d\n",
 					arsta->addr, bw, bw_prev);
 			err = ath12k_wmi_set_peer_param(ar, arsta->addr,
 					arvif->vdev_id, WMI_PEER_CHWIDTH,
@@ -6282,7 +6282,7 @@ static void ath12k_sta_rc_update_wk(stru
 	}
 
 	if (changed & IEEE80211_RC_NSS_CHANGED) {
-		ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "mac update sta %pM nss %d\n",
+		ath12k_dbg(ar->ab, ATH12K_DBG_PEER, "mac update sta %pM nss %d\n",
 			   arsta->addr, nss);
 
 		err = ath12k_wmi_set_peer_param(ar, arsta->addr, arvif->vdev_id,
@@ -6293,7 +6293,7 @@ static void ath12k_sta_rc_update_wk(stru
 	}
 
 	if (changed & IEEE80211_RC_SMPS_CHANGED) {
-		ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "mac update sta %pM smps %d\n",
+		ath12k_dbg(ar->ab, ATH12K_DBG_PEER, "mac update sta %pM smps %d\n",
 			   arsta->addr, smps);
 
 		err = ath12k_wmi_set_peer_param(ar, arsta->addr, arvif->vdev_id,
@@ -6407,7 +6407,7 @@ static void ath12k_sta_set_4addr_wk(stru
 		arvif = arsta->arvif;
 		ar = arvif->ar;
 
-		ath12k_dbg(ar->ab, ATH12K_DBG_MAC,
+		ath12k_dbg(ar->ab, ATH12K_DBG_PEER,
 			   "setting USE_4ADDR for peer %pM\n", arsta->addr);
 
 		ret = ath12k_wmi_set_peer_param(ar, arsta->addr,
@@ -6518,7 +6518,7 @@ static int ath12k_mac_station_remove(str
 		ath12k_warn(ar->ab, "Failed to delete peer: %pM for VDEV: %d\n",
 			    arsta->addr, arvif->vdev_id);
 	else
-		ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "Removed peer: %pM for VDEV: %d\n",
+		ath12k_dbg(ar->ab, ATH12K_DBG_PEER, "Removed peer: %pM for VDEV: %d\n",
 			   arsta->addr, arvif->vdev_id);
 
 	ath12k_mac_station_post_remove(ar, arvif, arsta);
@@ -6601,7 +6601,7 @@ static int ath12k_mac_station_add(struct
 		goto free_rx_stats;
 	}
 
-	ath12k_dbg(ab, ATH12K_DBG_MAC, "Added peer: %pM for VDEV: %d num_stations : %d\n",
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "Added peer: %pM for VDEV: %d num_stations : %d\n",
 		   arsta->addr, arvif->vdev_id, ar->num_stations);
 
 	if (ath12k_debugfs_is_extd_tx_stats_enabled(ar) && (!arsta->tx_stats)) {
@@ -6692,6 +6692,8 @@ static u16 ath12k_mac_alloc_ml_peer_id(s
 	if (ml_peer_id == ATH12K_MAX_MLO_PEERS)
 		ml_peer_id = ATH12K_MLO_PEER_ID_INVALID;
 
+	ath12k_dbg(NULL, ATH12K_DBG_PEER, "Allocated ml_peer_id:%d", ml_peer_id);
+
 	return ml_peer_id;
 }
 
@@ -6916,6 +6918,10 @@ static int ath12k_mac_handle_link_sta_st
 	}
 
 	mutex_unlock(&ar->conf_mutex);
+
+	ath12k_dbg(ar->ab, ATH12K_DBG_PEER, "mac sta %pM old state %d new state :%d\n",
+		   arsta->addr, old_state, new_state);
+
 	return ret;
 }
 
Index: b/drivers/net/wireless/ath/ath12k/peer.c
===================================================================
--- a/drivers/net/wireless/ath/ath12k/peer.c	2023-04-18 20:04:38.796340287 +0530
+++ b/drivers/net/wireless/ath/ath12k/peer.c	2023-04-18 20:04:38.792340316 +0530
@@ -142,7 +142,7 @@ void ath12k_peer_unmap_event(struct ath1
 		goto exit;
 	}
 
-	ath12k_dbg(ab, ATH12K_DBG_DP_HTT, "htt peer unmap vdev %d peer %pM id %d\n",
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "htt peer unmap vdev %d peer %pM id %d\n",
 		   peer->vdev_id, peer->addr, peer_id);
 
 	list_del(&peer->list);
@@ -174,7 +174,7 @@ void ath12k_peer_map_event(struct ath12k
 		wake_up(&ab->peer_mapping_wq);
 	}
 
-	ath12k_dbg(ab, ATH12K_DBG_DP_HTT, "htt peer map vdev %d peer %pM id %d\n",
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "htt peer map vdev %d peer %pM id %d\n",
 		   vdev_id, mac_addr, peer_id);
 
 exit:
@@ -215,7 +215,7 @@ void ath12k_peer_mlo_map_event(struct at
 
 	spin_unlock_bh(&ab->base_lock);
 
-	ath12k_dbg(ab, ATH12K_DBG_DP_HTT, "htt MLO peer map peer %pM id %d\n",
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "htt MLO peer map peer %pM id %d\n",
 		   mld_addr, ml_peer_id);
 
 	/* TODO rx queue setup for the ML peer */
@@ -232,7 +232,7 @@ void ath12k_peer_mlo_unmap_event(struct
 
 	ml_peer_id |= ATH12K_ML_PEER_ID_VALID;
 
-	ath12k_dbg(ab, ATH12K_DBG_DP_HTT, "htt MLO peer unmap peer ml id %d\n", ml_peer_id);
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "htt MLO peer unmap peer ml id %d\n", ml_peer_id);
 }
 
 static int ath12k_wait_for_peer_common(struct ath12k_base *ab, int vdev_id,
@@ -532,6 +532,8 @@ int ath12k_peer_create(struct ath12k *ar
 
 	ar->num_peers++;
 
+	ath12k_dbg(ar->ab, ATH12K_DBG_PEER, "peer created %pM\n", param->peer_addr);
+
 	spin_unlock_bh(&ar->ab->base_lock);
 
 	return 0;
Index: b/drivers/net/wireless/ath/ath12k/wmi.c
===================================================================
--- a/drivers/net/wireless/ath/ath12k/wmi.c	2023-04-18 20:04:38.796340287 +0530
+++ b/drivers/net/wireless/ath/ath12k/wmi.c	2023-04-18 20:04:38.792340316 +0530
@@ -1368,7 +1368,7 @@ int ath12k_wmi_send_peer_create_cmd(stru
 		dev_kfree_skb(skb);
 	}
 
-	ath12k_dbg(ar->ab, ATH12K_DBG_WMI,
+	ath12k_dbg(ar->ab, ATH12K_DBG_PEER,
 		   "WMI peer create vdev_id %d peer_addr %pM ml_enabled %d\n",
 		   param->vdev_id, param->peer_addr, param->ml_enabled);
 
@@ -1394,7 +1394,7 @@ int ath12k_wmi_send_peer_delete_cmd(stru
 	ether_addr_copy(cmd->peer_macaddr.addr, peer_addr);
 	cmd->vdev_id = cpu_to_le32(vdev_id);
 
-	ath12k_dbg(ar->ab, ATH12K_DBG_WMI,
+	ath12k_dbg(ar->ab, ATH12K_DBG_PEER,
 		   "WMI peer delete vdev_id %d peer_addr %pM num_peer : %d\n",
 		   vdev_id,  peer_addr, ar->num_peers);
 
@@ -2805,8 +2805,8 @@ int ath12k_wmi_send_peer_assoc_cmd(struc
 		dev_kfree_skb(skb);
 	}
 
-	ath12k_dbg(ar->ab, ATH12K_DBG_WMI,
-		   "wmi peer assoc vdev id %d assoc id %d peer mac %pM peer_flags %x rate_caps %x peer_caps %x listen_intval %d ht_caps %x max_mpdu %d nss %d phymode %d peer_mpdu_density %d vht_caps %x he cap_info %x he ops %x he cap_info_ext %x he phy %x %x %x peer_bw_rxnss_override %x peer_flags_ext %x eht mac_cap %x %x eht phy_cap %x %x %x eht ops %x ml flags %x ml peer id %d num_partner_links %d\n",
+	ath12k_dbg(ar->ab, ATH12K_DBG_PEER,
+		   "wmi peer assoc vdev id %d assoc id %d peer mac %pM peer_flags %x rate_caps %x peer_caps %x listen_intval %d ht_caps %x max_mpdu %d nss %d phymode %d peer_mpdu_density %d vht_caps %x he cap_info %x he ops %x he cap_info_ext %x he phy %x %x %x peer_bw_rxnss_override %x peer_flags_ext %x eht mac_cap %x %x eht phy_cap %x %x %x eht ops %x ml flags %x mld_addr %pM logical_link_idx %u ml peer id %d ieee_link_id %u num_partner_links %d\n",
 		   cmd->vdev_id, cmd->peer_associd, param->peer_mac,
 		   cmd->peer_flags, cmd->peer_rate_caps, cmd->peer_caps,
 		   cmd->peer_listen_intval, cmd->peer_ht_caps,
@@ -2820,9 +2820,10 @@ int ath12k_wmi_send_peer_assoc_cmd(struc
 		   cmd->peer_eht_cap_mac[0], cmd->peer_eht_cap_mac[1],
 		   cmd->peer_eht_cap_phy[0], cmd->peer_eht_cap_phy[1],
 		   cmd->peer_eht_cap_phy[2], cmd->peer_eht_ops,
-		   ml_params->flags, ml_params->ml_peer_id,
-		   param->ml.num_partner_links
-		   );
+		   ml_params->flags, ml_params->mld_addr.addr,
+		   ml_params->logical_link_idx, ml_params->ml_peer_id,
+		   ml_params->ieee_link_id,
+		   param->ml.num_partner_links);
 
 	return ret;
 }
@@ -8254,7 +8255,7 @@ static void ath12k_peer_delete_resp_even
 
 	complete(&ar->peer_delete_done);
 	rcu_read_unlock();
-	ath12k_dbg(ab, ATH12K_DBG_WMI, "peer delete resp for vdev id %d addr %pM\n",
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "peer delete resp for vdev id %d addr %pM\n",
 		   peer_del_resp.vdev_id, peer_del_resp.peer_macaddr.addr);
 }
 
@@ -11076,7 +11077,7 @@ static void ath12k_peer_sta_kickout_even
 		goto exit;
 	}
 
-	ath12k_dbg(ab, ATH12K_DBG_WMI, "peer sta kickout event %pM",
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "peer sta kickout event %pM",
 		   arg.mac_addr);
 
 	ieee80211_report_low_ack(sta, 10);

From 192ea2395fa9d36eb05564570867a97181159407 Mon Sep 17 00:00:00 2001
From: Aditya Kumar Singh <quic_adisi@quicinc.com>
Date: Wed, 8 Mar 2023 15:46:49 +0530
Subject: [PATCH 2/2] hostapd: select channel based on hw_idx during single
 wiphy operation

Currently, channel is selected from the current hw_mode. However, not
all channels under current hw_mode might be available for the current
operating underlying hardware.

Commit "hostapd: add support to use underlying hw_idx for multi-hardware under
single phy mode" added support to store the possible underlying hardware info
and set the current operating hardware index.

Add logic to check if the selected channel falls under the current operating
hardware index and only if it falls then continues with the channel.

Signed-off-by: Aditya Kumar Singh <quic_adisi@quicinc.com>
---
 hostapd/ctrl_iface.c            | 10 ++++++++--
 src/ap/dfs.c                    |  7 +++++++
 src/ap/interference.c           |  7 +++++++
 src/common/hw_features_common.c | 20 ++++++++++++++++++++
 src/common/hw_features_common.h |  2 ++
 5 files changed, 44 insertions(+), 2 deletions(-)

--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -2427,7 +2427,9 @@ static int hostapd_ctrl_register_frame(s
 
 #ifdef NEED_AP_MLME
 
-static bool hostapd_ctrl_is_freq_in_cmode(struct hostapd_hw_modes *mode, int freq)
+static bool hostapd_ctrl_is_freq_in_cmode(struct hostapd_hw_modes *mode,
+					  struct hostapd_multi_hw_info *current_hw_info,
+					  int freq)
 {
         struct hostapd_channel_data *chan;
         int i;
@@ -2438,6 +2440,9 @@ static bool hostapd_ctrl_is_freq_in_cmod
                 if (chan->flag & HOSTAPD_CHAN_DISABLED)
                         continue;
 
+		if (!chan_in_current_hw_info(current_hw_info, chan))
+			continue;
+
                 if (chan->freq == freq)
                         return true;
         }
@@ -2702,7 +2707,8 @@ static int hostapd_ctrl_iface_chan_switc
 		return ret;
 
         if (iface->num_hw_features > 1 &&
-	    !hostapd_ctrl_is_freq_in_cmode(iface->current_mode, settings.freq_params.freq)) {
+	    !hostapd_ctrl_is_freq_in_cmode(iface->current_mode, iface->current_hw_info,
+					   settings.freq_params.freq)) {
 		wpa_printf(MSG_INFO, "chanswitch: invalid frequency settings provided"
 			   " for multi band phy");
                 return -1;
--- a/src/ap/dfs.c
+++ b/src/ap/dfs.c
@@ -325,6 +325,13 @@ static int dfs_find_channel(struct hosta
 	for (i = 0; i < mode->num_channels; i++) {
 		chan = &mode->channels[i];
 
+		if (!chan_in_current_hw_info(iface->current_hw_info, chan)) {
+			wpa_printf(MSG_DEBUG,
+				   "DFS: channel %d (%d) is not under same current hw id",
+				   chan->freq, chan->chan);
+			continue;
+		}
+
 		/* Skip HT40/VHT incompatible channels */
 		if (iface->conf->ieee80211n &&
 		    iface->conf->secondary_channel &&
--- a/src/ap/interference.c
+++ b/src/ap/interference.c
@@ -238,6 +238,13 @@ static int intf_awgn_find_channel_list(s
 	for (i = 0; i < mode->num_channels; i++) {
 		chan = &mode->channels[i];
 
+		if (!chan_in_current_hw_info(iface->current_hw_info, chan)) {
+			wpa_printf(MSG_DEBUG,
+				   "AWGN: channel %d (%d) is not under same current hw id",
+				   chan->freq, chan->chan);
+			continue;
+		}
+
 		/* Skip incompatible chandefs */
 		if (!intf_awgn_chan_range_available(mode, i, n_chans)) {
 			wpa_printf(MSG_DEBUG,
--- a/src/common/hw_features_common.c
+++ b/src/common/hw_features_common.c
@@ -980,3 +980,23 @@ bool is_ru_punct_bitmap_valid(u16 bw, u1
 
 	return true;
 }
+
+bool chan_in_current_hw_info(struct hostapd_multi_hw_info *current_hw_info,
+			     struct hostapd_channel_data *chan)
+{
+	int i;
+
+	/* we assume if current_hw_info is not set then full
+	 * iface->current_mode->channels[] can be used to scan for channels
+	 * hence we return true
+	 */
+	if (!current_hw_info)
+		return true;
+
+	for (i = 0; i < current_hw_info->num_freqs; i++) {
+		if (current_hw_info->freqs[i] == chan->freq)
+			return true;
+	}
+
+	return false;
+}
--- a/src/common/hw_features_common.h
+++ b/src/common/hw_features_common.h
@@ -58,5 +58,7 @@ int chan_bw_allowed(const struct hostapd
 int chan_pri_allowed(const struct hostapd_channel_data *chan);
 bool is_ru_punct_bitmap_valid(u16 bw, u16 pri_ch_bit_pos, u16 ru_punct_bitmap,
 			      u8 ru_punct_ofdma);
+bool chan_in_current_hw_info(struct hostapd_multi_hw_info *current_hw_info,
+			     struct hostapd_channel_data *chan);
 
 #endif /* HW_FEATURES_COMMON_H */

From 106db5f9b54d4e96917bc253bc432b6ab2ef0746 Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Thu, 22 Dec 2022 12:01:22 +0530
Subject: [PATCH] ath12k: fix Factory Test Mode crash issue

Currently we are getting ar by vif but for FTM vif is null
so we are getting null value for ar also and passing null
ar pointer in ath12k_tm_cmd.

fix this issue by assigning ar value to ath12k_hw radio.

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.c     | 2 +-
 drivers/net/wireless/ath/ath12k/testmode.c | 5 +++--
 drivers/net/wireless/ath/ath12k/wmi.c      | 2 +-
 3 files changed, 5 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -152,7 +152,7 @@ static struct ath12k_hw_group *ath12k_co
 	 * within the soc, all links are combined into a single wiphy.
 	 */
 	mlo = of_parse_phandle(dev->of_node, "qcom,wsi", 0);
-	if (mlo && ath12k_mlo_capable) {
+	if (mlo && ath12k_mlo_capable && !ath12k_ftm_mode) {
 		ret = of_property_read_u32(mlo, "id", &group_id);
 		if (ret)
 			group_id = ATH12K_INVALID_GRP_ID;
@@ -1210,7 +1210,7 @@ int ath12k_core_qmi_firmware_ready(struc
 	struct ath12k_hw_group *ag;
 	int ret;
 
-	ret = ath12k_core_start_firmware(ab, ATH12K_FIRMWARE_MODE_NORMAL);
+	ret = ath12k_core_start_firmware(ab, ab->fw_mode);
 	if (ret) {
 		ath12k_err(ab, "failed to start firmware: %d\n", ret);
 		return ret;
--- a/drivers/net/wireless/ath/ath12k/testmode.c
+++ b/drivers/net/wireless/ath/ath12k/testmode.c
@@ -439,13 +439,13 @@ int ath12k_tm_cmd(struct ieee80211_hw *h
 
 	mutex_lock(&ah->conf_mutex);
 
-	/* TODO cmd for all ML vifs */
-	ar = ath12k_get_ar_by_vif(hw, vif, 0);
-	ab = ar->ab;
+	if (ah->num_radio)
+		ar = ah->radio;
 	if (!ar) {
 		mutex_unlock(&ah->conf_mutex);
 		return -EINVAL;
 	}
+	ab = ar->ab;
 
 	mutex_unlock(&ah->conf_mutex);
 
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -8432,7 +8432,7 @@ static void ath12k_wmi_tm_event_segmente
 
 	length = skb->len - TLV_HDR_SIZE;
 	ret = ath12k_tm_process_event(ab, cmd_id, ev, length);
-	if (!ret)
+	if (ret)
 		ath12k_warn(ab, "Failed to process ftm event\n");
 	kfree(tb);
 }

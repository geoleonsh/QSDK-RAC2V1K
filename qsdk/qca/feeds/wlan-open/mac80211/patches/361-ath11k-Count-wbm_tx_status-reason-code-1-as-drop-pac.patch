From 7ecea313f69620c6040610f48ff8b1406295ca8a Mon Sep 17 00:00:00 2001
From: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
Date: Thu, 6 Oct 2022 21:42:59 +0530
Subject: [PATCH 3/4] ath11k: Count wbm_tx_status reason code 1 as drop packets

Consider wbm_tx_status reason code 1 as drop packets
instead of fail_pkts and not report the tx status to mac80211.
Since the wbm status of reason code 1 for msdu is packet
which is not tried to transmit in the air and its been
dropped due to hw queue full scnearo.

Signed-off-by: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/core.h        |  2 ++
 drivers/net/wireless/ath/ath11k/debugfs_sta.c |  4 ++++
 drivers/net/wireless/ath/ath11k/dp_tx.c       | 19 +++++++++++++++----
 3 files changed, 21 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/core.h
+++ b/drivers/net/wireless/ath/ath11k/core.h
@@ -712,12 +712,14 @@ struct ath11k_sta {
 	struct ewma_sta_per per;
 	u64 fail_pkts;
 	u64 succ_pkts;
+	u64 drop_pkts;
 	/* pkt count for packet error rate computation*/
 	u32 per_fail_pkts;
 	u32 per_succ_pkts;
 	struct ewma_sta_ber ber;
 	u64 succ_bytes;
 	u64 fail_bytes;
+	u64 drop_bytes;
 	/*bytes count for bit error rate computation*/
 	u32 ber_succ_bytes;
 	u32 ber_fail_bytes;
--- a/drivers/net/wireless/ath/ath11k/debugfs_sta.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs_sta.c
@@ -1589,12 +1589,16 @@ static ssize_t ath11k_dbg_sta_read_htt_c
 			 arsta->fail_pkts);
 	len += scnprintf(buf + len, sizeof(buf) - len, "succ_pkts    : %llu\n",
 			 arsta->succ_pkts);
+	len += scnprintf(buf + len, sizeof(buf) - len, "drop_pkts    : %llu\n",
+			 arsta->drop_pkts);
 	len += scnprintf(buf + len, sizeof(buf) - len, "PER          : %lu\n",
 			 ewma_sta_per_read(&arsta->per));
 	len += scnprintf(buf + len, sizeof(buf) - len, "fail_bytes   : %llu\n",
 			 arsta->fail_bytes);
 	len += scnprintf(buf + len, sizeof(buf) - len, "succ_bytes   : %llu\n",
 			 arsta->succ_bytes);
+	len += scnprintf(buf + len, sizeof(buf) - len, "drop_bytes   : %llu\n",
+			 arsta->drop_bytes);
 	len += scnprintf(buf + len, sizeof(buf) - len,
 			 "BER          : %lu\n", ewma_sta_ber_read(&arsta->ber));
 	spin_unlock_bh(&ar->ab->base_lock);
--- a/drivers/net/wireless/ath/ath11k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_tx.c
@@ -366,6 +366,8 @@ tcl_ring_sel:
 		/* TODO: Take care of other encap modes as well */
 		ret = -EINVAL;
 		atomic_inc(&ab->soc_stats.tx_err.misc_fail);
+		arsta->drop_pkts++;
+		arsta->drop_bytes += skb->len;
 		goto fail_remove_idr;
 	}
 
@@ -915,10 +917,24 @@ static void ath11k_dp_tx_complete_msdu(s
 	}
 
 	if (ts.status != HAL_WBM_TQM_REL_REASON_FRAME_ACKED) {
-		arsta->fail_pkts += 1;
-		arsta->per_fail_pkts += 1;
-		arsta->fail_bytes += msdu->len;
-		arsta->ber_fail_bytes += msdu->len;
+		switch (ts.status) {
+		case HAL_WBM_TQM_REL_REASON_CMD_REMOVE_MPDU:
+		case HAL_WBM_TQM_REL_REASON_CMD_REMOVE_AGED_FRAMES:
+		case HAL_WBM_TQM_REL_REASON_CMD_REMOVE_TX:
+			arsta->drop_pkts += 1;
+			arsta->drop_bytes += msdu->len;
+			spin_unlock_bh(&ab->base_lock);
+			dev_kfree_skb_any(msdu);
+			return;
+		default:
+			//TODO: Remove this print and add as a stats
+			ath11k_dbg(ab, ATH11K_DBG_DP_TX, "tx frame is not acked status %d\n", ts.status);
+			arsta->fail_pkts += 1;
+			arsta->per_fail_pkts += 1;
+			arsta->fail_bytes += msdu->len;
+			arsta->ber_fail_bytes += msdu->len;
+		}
+
 		if(arsta->per_fail_pkts + arsta->per_succ_pkts >=
 		   ATH11K_NUM_PKTS_THRSHLD_FOR_PER)
 			ath11k_sta_stats_update_per(arsta);

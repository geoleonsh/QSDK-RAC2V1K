From 7b0df439f96415c1cd72f3dad5a32492df254d96 Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Fri, 17 Feb 2023 16:18:45 +0530
Subject: [PATCH] wifi: ath12k: Modified the peer id bit mask in monitor path

In Rx monitor path, the sw peer id treats as peer id. Which is causing
peer id lookup fail in PPDU user stats processing. So not able to
show the ext_rx_stats to user. sw peer id has both chip id and peer id
values. In non-ML case, the chip id report as zero always. so no issue.
But in ML case, it has valid chip id information which casuing the peer
lookup fail. So fix this issue by extracting only peer id information
from the sw peer id.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_mon.c | 30 ++++++++++++++++++------
 drivers/net/wireless/ath/ath12k/hal_rx.h |  8 ++++---
 drivers/net/wireless/ath/ath12k/peer.c   |  9 +++++++
 3 files changed, 37 insertions(+), 10 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -3751,8 +3751,8 @@ move_next:
 		peer = ath12k_peer_find_by_id(ab, ppdu_info->peer_id);
 		if (!peer || !peer->sta) {
 			ath12k_dbg(ab, ATH12K_DBG_DATA,
-				   "failed to find the peer with peer_id %d\n",
-				   ppdu_info->peer_id);
+				   "failed to find the peer with link id %d peer_id %d\n",
+				   peer ? peer->link_id : -1, ppdu_info->peer_id);
 			goto next_skb;
 		}
 
@@ -3914,8 +3914,8 @@ move_next:
 		peer = ath12k_peer_find_by_id(ab, ppdu_info->peer_id);
 		if (!peer || !peer->sta) {
 			ath12k_dbg(ab, ATH12K_DBG_DATA,
-				   "failed to find the peer with monitor peer_id %d\n",
-				   ppdu_info->peer_id);
+				   "failed to find the peer with monitor link id %d peer_id %d\n",
+				   peer ? peer->link_id : -1, ppdu_info->peer_id);
 			goto next_skb;
 		}
 
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -19,7 +19,7 @@ struct hal_rx_wbm_rel_info {
 	bool hw_cc_done;
 };
 
-#define HAL_INVALID_PEERID 0xffff
+#define HAL_INVALID_PEERID 0x3fff
 #define VHT_SIG_SU_NSS_MASK 0x7
 
 #define HAL_RX_MAX_MCS 12
@@ -303,7 +303,8 @@ struct hal_rx_ppdu_start {
 	__le32 reserverd[2];
 } __packed;
 
-#define HAL_RX_PPDU_END_USER_STATS_INFO0_PEER_ID		GENMASK(15, 0)
+#define HAL_RX_PPDU_END_USER_STATS_INFO0_PEER_ID		GENMASK(13, 0)
+#define HAL_RX_PPDU_END_USER_STATS_INFO0_CHIP_ID		GENMASK(15, 14)
 #define HAL_RX_PPDU_END_USER_STATS_INFO0_MPDU_CNT_FCS_ERR	GENMASK(26, 16)
 
 #define HAL_RX_PPDU_END_USER_STATS_INFO1_MPDU_CNT_FCS_OK	GENMASK(10, 0)
@@ -510,7 +511,8 @@ struct hal_rx_phyrx_rssi_legacy_info {
 } __packed;
 
 #define HAL_RX_MPDU_START_INFO0_PPDU_ID		GENMASK(31, 16)
-#define HAL_RX_MPDU_START_INFO1_PEERID		GENMASK(31, 16)
+#define HAL_RX_MPDU_START_INFO1_PEERID		GENMASK(29, 16)
+#define HAL_RX_MPDU_START_INFO1_CHIPID		GENMASK(31, 30)
 #define HAL_RX_MPDU_START_INFO2_MPDU_LEN	GENMASK(13, 0)
 struct hal_rx_mpdu_start {
 	__le32 rsvd0[9];

From 03102d956de466582ca144d5e419423381b9150f Mon Sep 17 00:00:00 2001
From: Harshitha Prem <quic_hprem@quicinc.com>
Date: Wed, 12 Oct 2022 17:32:27 +0530
Subject: [PATCH 4/4] ath11k: add support for ADFS radar

added support for simulating dfs with agile detector id
and offset values via debugfs command

old command:
echo 1 > /sys/kernel/debug/<ath driver>/<device>/dfs_simulate_radar

Extension:

echo A B C D > /sys/kernel/debug/<ath driver>/<device>/dfs_simulate_radar

where A - is segment id
      B - chrip radar indication
      C - offset value
      D - agile detector id

Signed-off-by: Harshitha Prem <quic_hprem@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/debugfs.c | 56 ++++++++++++++++++++++-
 drivers/net/wireless/ath/ath11k/wmi.c     |  4 +-
 drivers/net/wireless/ath/ath11k/wmi.h     |  2 +-
 3 files changed, 58 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -2393,12 +2393,21 @@ static const struct file_operations fops
 	.open = simple_open
 };
 
+#define	SEGMENT_ID	GENMASK(1,0)
+#define CHRIP_ID	BIT(2)
+#define OFFSET		GENMASK(10,3)
+#define DETECTOR_ID	GENMASK(12,11)
 static ssize_t ath11k_write_simulate_radar(struct file *file,
 					   const char __user *user_buf,
 					   size_t count, loff_t *ppos)
 {
 	struct ath11k *ar = file->private_data;
 	int ret;
+	u32 radar_params;
+	u8 agile = 0, segment = 0, chrip = 0;
+	int offset = 0, len;
+	char buf[64], *token, *sptr;
+
 
 	if (ar->state != ATH11K_STATE_ON) {
 		ath11k_warn(ar->ab, "pdev %d not in ON state\n", ar->pdev->pdev_id);
@@ -2406,7 +2415,54 @@ static ssize_t ath11k_write_simulate_rad
 		return -ENETDOWN;
 	}
 
-	ret = ath11k_wmi_simulate_radar(ar);
+	len = min(count, sizeof(buf) - 1);
+	if (copy_from_user(buf, user_buf, len))
+		return -EFAULT;
+
+	/* For backward compatibility */
+	if (len <= 2)
+		goto send_cmd;
+
+	buf[len] = '\0';
+	sptr = buf;
+	token = strsep(&sptr, " ");
+	if (!token)
+		return -EINVAL;
+
+	if (kstrtou8(token, 16, &segment))
+		return -EINVAL;
+
+	token = strsep(&sptr, " ");
+	if (!token)
+		return -EINVAL;
+
+	if (kstrtou8(token, 16, &chrip))
+		return -EINVAL;
+
+	token = strsep(&sptr, " ");
+	if (!token)
+		return -EINVAL;
+
+	if (kstrtoint(token, 16, &offset))
+		return -EINVAL;
+
+	token = strsep(&sptr, " ");
+	if (!token)
+		return -EINVAL;
+
+	if (kstrtou8(token, 16, &agile))
+		return -EINVAL;
+
+	if ((segment > 1) || (chrip > 1) || (agile > 2))
+		return -EINVAL;
+
+send_cmd:
+	radar_params = FIELD_PREP(SEGMENT_ID, segment) |
+		       FIELD_PREP(CHRIP_ID, chrip) |
+		       FIELD_PREP(OFFSET, offset) |
+		       FIELD_PREP(DETECTOR_ID, agile);
+
+	ret = ath11k_wmi_simulate_radar(ar, radar_params);
 	if (ret)
 		return ret;
 
--- a/drivers/net/wireless/ath/ath11k/wmi.c
+++ b/drivers/net/wireless/ath/ath11k/wmi.c
@@ -11410,7 +11410,7 @@ ath11k_wmi_send_unit_test_cmd(struct ath
 	return ret;
 }
 
-int ath11k_wmi_simulate_radar(struct ath11k *ar)
+int ath11k_wmi_simulate_radar(struct ath11k *ar, u32 radar_params)
 {
 	struct ath11k_vif *arvif;
 	u32 dfs_args[DFS_MAX_TEST_ARGS];
@@ -11433,14 +11433,15 @@ int ath11k_wmi_simulate_radar(struct ath
 	 * freq offset (b3 - b10) to unit test. For simulation
 	 * purpose this can be set to 0 which is valid.
 	 */
-	dfs_args[DFS_TEST_RADAR_PARAM] = 0;
+	dfs_args[DFS_TEST_RADAR_PARAM] = radar_params;
 
 	wmi_ut.vdev_id = arvif->vdev_id;
 	wmi_ut.module_id = DFS_UNIT_TEST_MODULE;
 	wmi_ut.num_args = DFS_MAX_TEST_ARGS;
 	wmi_ut.diag_token = DFS_UNIT_TEST_TOKEN;
 
-	ath11k_dbg(ar->ab, ATH11K_DBG_REG, "Triggering Radar Simulation\n");
+	ath11k_dbg(ar->ab, ATH11K_DBG_REG,
+		   "Triggering Radar Simulation with param %d\n", radar_params);
 
 	return ath11k_wmi_send_unit_test_cmd(ar, wmi_ut, dfs_args);
 }
--- a/drivers/net/wireless/ath/ath11k/wmi.h
+++ b/drivers/net/wireless/ath/ath11k/wmi.h
@@ -7612,7 +7612,7 @@ size_t ath11k_wmi_fw_stats_num_vdevs(str
 void ath11k_wmi_fw_stats_fill(struct ath11k *ar,
 			      struct ath11k_fw_stats *fw_stats, u32 stats_id,
 			      char *buf);
-int ath11k_wmi_simulate_radar(struct ath11k *ar);
+int ath11k_wmi_simulate_radar(struct ath11k *ar, u32 radar_params);
 int ath11k_wmi_simulate_awgn(struct ath11k *ar, u32 chan_bw_interference_bitmap);
 int ath11k_wmi_send_twt_enable_cmd(struct ath11k *ar, u32 pdev_id);
 int ath11k_wmi_send_twt_disable_cmd(struct ath11k *ar, u32 pdev_id);

From 2238894a12b2cbb4693eced8fd046415967c2a82 Mon Sep 17 00:00:00 2001
From: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Date: Fri, 17 Feb 2023 04:44:56 -0800
Subject: [PATCH 3/4] ath12k: Program the RBM ID values in TCL RBM map
 register

Program the RBM ID values during TCL init and avoid providing
the rbm id values on a per packet basis

Signed-off-by: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>
Signed-off-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp.c     |  3 +++
 drivers/net/wireless/ath/ath12k/dp_tx.c  | 28 +---------------------------
 drivers/net/wireless/ath/ath12k/hal.h    |  6 ++++++
 drivers/net/wireless/ath/ath12k/hal_tx.c | 23 +++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/hal_tx.h |  2 ++
 5 files changed, 35 insertions(+), 27 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp.c b/drivers/net/wireless/ath/ath12k/dp.c
index e9121fa..af7da38 100644
--- a/drivers/net/wireless/ath/ath12k/dp.c
+++ b/drivers/net/wireless/ath/ath12k/dp.c
@@ -519,6 +519,7 @@ static int ath12k_dp_srng_common_setup(struct ath12k_base *ab)
 	struct hal_srng *srng;
 	int i, ret, tx_comp_ring_num;
 	u32 ring_hash_map;
+	u8 rbm_id;
 
 	ret = ath12k_dp_srng_setup(ab, &dp->wbm_desc_rel_ring,
 				   HAL_SW2WBM_RELEASE, 0, 0,
@@ -546,6 +547,7 @@ static int ath12k_dp_srng_common_setup(struct ath12k_base *ab)
 	for (i = 0; i < ab->hw_params->max_tx_ring; i++) {
 		map = ab->hw_params->hal_ops->tcl_to_wbm_rbm_map;
 		tx_comp_ring_num = map[i].wbm_ring_num;
+		rbm_id = ab->hw_params->hal_ops->tcl_to_wbm_rbm_map[i].rbm_id;
 
 		ret = ath12k_dp_srng_setup(ab, &dp->tx_ring[i].tcl_data_ring,
 					   HAL_TCL_DATA, i, 0,
@@ -555,6 +557,7 @@ static int ath12k_dp_srng_common_setup(struct ath12k_base *ab)
 				    i, ret);
 			goto err;
 		}
+		ath12k_hal_tx_config_rbm_mapping(ab, i, rbm_id, HAL_TCL_DATA);
 
 		ret = ath12k_dp_srng_setup(ab, &dp->tx_ring[i].tcl_comp_ring,
 					   HAL_WBM2SW_RELEASE, tx_comp_ring_num, 0,
diff --git a/drivers/net/wireless/ath/ath12k/dp_tx.c b/drivers/net/wireless/ath/ath12k/dp_tx.c
index b3acce9..d791921 100644
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -114,25 +114,6 @@ static void ath12k_hal_tx_cmd_ext_desc_setup(struct ath12k_base *ab, void *cmd,
 						HAL_TX_MSDU_EXT_INFO1_ENCRYPT_TYPE);
 }
 
-static const struct ath12k_hal_tcl_to_wbm_rbm_map
-ath12k_hal_qcn92xx_tcl_to_wbm_rbm_map[DP_TCL_NUM_RING_MAX] = {
-	{
-		.wbm_ring_num = 0,
-		.rbm_id = HAL_RX_BUF_RBM_SW0_BM,
-	},
-	{
-		.wbm_ring_num = 1,
-		.rbm_id = HAL_RX_BUF_RBM_SW1_BM,
-	},
-	{
-		.wbm_ring_num = 2,
-		.rbm_id = HAL_RX_BUF_RBM_SW2_BM,
-	},
-	{
-		.wbm_ring_num = 4,
-		.rbm_id = HAL_RX_BUF_RBM_SW4_BM,
-	}
-};
 
 int ath12k_dp_tx_direct(struct ath12k_link_vif *arvif, struct sk_buff *skb)
 {
@@ -145,13 +126,11 @@ int ath12k_dp_tx_direct(struct ath12k_link_vif *arvif, struct sk_buff *skb)
 	struct dp_tx_ring *tx_ring;
 	void *hal_tcl_desc;
 	struct hal_tcl_data_cmd tcl_desc = { 0 };
-	u8 hal_ring_id, ring_id, rbm_id;
+	u8 hal_ring_id, ring_id;
 	int ret;
 
 	ring_id = smp_processor_id();
 
-	rbm_id = ath12k_hal_qcn92xx_tcl_to_wbm_rbm_map[ring_id].rbm_id;
-
 	tx_ring = &dp->tx_ring[ring_id];
 
 	tx_desc = ath12k_dp_tx_assign_buffer_nolock(dp, ring_id);
@@ -193,7 +172,6 @@ int ath12k_dp_tx_direct(struct ath12k_link_vif *arvif, struct sk_buff *skb)
 	tcl_desc.buf_addr_info.info1 = FIELD_PREP(BUFFER_ADDR_INFO1_ADDR,
 			((uint64_t)skb_cb->paddr >> HAL_ADDR_MSB_REG_SHIFT));
 	tcl_desc.buf_addr_info.info1 |=
-		FIELD_PREP(BUFFER_ADDR_INFO1_RET_BUF_MGR, rbm_id) |
 		FIELD_PREP(BUFFER_ADDR_INFO1_SW_COOKIE, tx_desc->desc_id);
 	tcl_desc.info0 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_DESC_TYPE,
 				    HAL_TCL_DESC_TYPE_BUFFER) | arvif->desc.info0;
@@ -256,8 +234,6 @@ int ath12k_dp_tx(struct ath12k *ar, struct ath12k_link_vif *arvif,
 	ti.ring_id =
 		ab->hw_params->hw_ops->get_ring_selector(skb);
 
-	ti.rbm_id = ab->hw_params->hal_ops->tcl_to_wbm_rbm_map[ti.ring_id].rbm_id;
-
 	tx_ring = &dp->tx_ring[ti.ring_id];
 
 	tx_desc = ath12k_dp_tx_assign_buffer_nolock(dp, ti.ring_id);
@@ -419,8 +395,6 @@ int ath12k_dp_tx(struct ath12k *ar, struct ath12k_link_vif *arvif,
 		FIELD_PREP(BUFFER_ADDR_INFO1_ADDR,
 			   ((uint64_t)ti.paddr >> HAL_ADDR_MSB_REG_SHIFT));
 	tcl_cmd->buf_addr_info.info1 |=
-		FIELD_PREP(BUFFER_ADDR_INFO1_RET_BUF_MGR,
-			   (ti.rbm_id)) |
 		FIELD_PREP(BUFFER_ADDR_INFO1_SW_COOKIE, ti.desc_id);
 
 	tcl_cmd->info0 = FIELD_PREP(HAL_TCL_DATA_CMD_INFO0_DESC_TYPE,
diff --git a/drivers/net/wireless/ath/ath12k/hal.h b/drivers/net/wireless/ath/ath12k/hal.h
index 4a685ae..ff772c6 100644
--- a/drivers/net/wireless/ath/ath12k/hal.h
+++ b/drivers/net/wireless/ath/ath12k/hal.h
@@ -124,6 +124,12 @@ struct ath12k_base;
 #define HAL_TCL1_RING_TP_OFFSET \
 		(HAL_TCL1_RING_TP - HAL_TCL1_RING_HP)
 
+#define HAL_TCL_RBM_MAPPING0_ADDR_OFFSET	0x00000088
+#define HAL_TCL_RBM_MAPPING_SHFT 4
+#define HAL_TCL_RBM_MAPPING_BMSK 0xF
+#define HAL_TCL_RBM_MAPPING_PPE2TCL_OFFSET  7
+#define HAL_TCL_RBM_MAPPING_TCL_CMD_CREDIT_OFFSET  6
+
 /* TCL STATUS ring address */
 #define HAL_TCL_STATUS_RING_BASE_LSB(ab) \
 	((ab)->hw_params->regs->hal_tcl_status_ring_base_lsb)
diff --git a/drivers/net/wireless/ath/ath12k/hal_tx.c b/drivers/net/wireless/ath/ath12k/hal_tx.c
index cd0f872..688b329 100644
--- a/drivers/net/wireless/ath/ath12k/hal_tx.c
+++ b/drivers/net/wireless/ath/ath12k/hal_tx.c
@@ -98,3 +98,26 @@ void ath12k_hal_tx_configure_bank_register(struct ath12k_base *ab, u32 bank_conf
 	ath12k_hif_write32(ab, HAL_TCL_SW_CONFIG_BANK_ADDR + 4 * bank_id,
 			   bank_config);
 }
+
+void ath12k_hal_tx_config_rbm_mapping(struct ath12k_base *ab,u8 ring_num,
+				      u8 rbm_id, int ring_type)
+{
+	u32 curr_map, new_map;
+
+	if (ring_type == HAL_PPE2TCL)
+		ring_num = ring_num + HAL_TCL_RBM_MAPPING_PPE2TCL_OFFSET;
+	else if (ring_type == HAL_TCL_CMD)
+		ring_num = ring_num + HAL_TCL_RBM_MAPPING_TCL_CMD_CREDIT_OFFSET;
+
+	curr_map = ath12k_hif_read32(ab, HAL_SEQ_WCSS_UMAC_TCL_REG +
+				     HAL_TCL_RBM_MAPPING0_ADDR_OFFSET);
+
+	/* Protect the other values and clear the specific fields to be updated */
+	curr_map &= (~(HAL_TCL_RBM_MAPPING_BMSK <<
+		      (HAL_TCL_RBM_MAPPING_SHFT * ring_num)));
+	new_map = curr_map | ((HAL_TCL_RBM_MAPPING_BMSK & rbm_id) <<
+			      (HAL_TCL_RBM_MAPPING_SHFT * ring_num));
+
+	ath12k_hif_write32(ab, HAL_SEQ_WCSS_UMAC_TCL_REG +
+			   HAL_TCL_RBM_MAPPING0_ADDR_OFFSET, new_map);
+}
diff --git a/drivers/net/wireless/ath/ath12k/hal_tx.h b/drivers/net/wireless/ath/ath12k/hal_tx.h
index 61cdd34..54fba8c 100644
--- a/drivers/net/wireless/ath/ath12k/hal_tx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_tx.h
@@ -188,4 +188,6 @@ int ath12k_hal_reo_cmd_send(struct ath12k_base *ab, struct hal_srng *srng,
 			    struct ath12k_hal_reo_cmd *cmd);
 void ath12k_hal_tx_configure_bank_register(struct ath12k_base *ab, u32 bank_config,
 					   u8 bank_id);
+void ath12k_hal_tx_config_rbm_mapping(struct ath12k_base *ab,u8 ring_num,
+                                      u8 rbm_id, int ring_type);
 #endif
-- 
2.7.4


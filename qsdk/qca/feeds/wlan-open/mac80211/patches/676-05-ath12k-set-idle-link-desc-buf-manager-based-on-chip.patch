From aa5bb11f1e8bdea88d56b7ce755c507aa0024ed9 Mon Sep 17 00:00:00 2001
From: Sriram R <quic_srirrama@quicinc.com>
Date: Sat, 12 Nov 2022 18:15:25 +0530
Subject: [PATCH] ath12k: set idle link desc buf manager based on chip

Currently the idle link desc buffer manager value
is always set to chip0 idle desc list. Configure this
appropriately based on the chip id.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Signed-off-by: Sriram R <quic_srirrama@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp.c    | 10 ++++++++--
 drivers/net/wireless/ath/ath12k/dp.h    |  1 +
 drivers/net/wireless/ath/ath12k/dp_rx.c |  4 ++--
 drivers/net/wireless/ath/ath12k/hal.c   |  4 ++--
 drivers/net/wireless/ath/ath12k/hal.h   |  4 ++--
 5 files changed, 15 insertions(+), 8 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp.c b/drivers/net/wireless/ath/ath12k/dp.c
index 152a0f0..5254b9e 100644
--- a/drivers/net/wireless/ath/ath12k/dp.c
+++ b/drivers/net/wireless/ath/ath12k/dp.c
@@ -659,6 +659,7 @@ static int ath12k_dp_scatter_idle_link_desc_setup(struct ath12k_base *ab,
 	int i;
 	int ret = 0;
 	u32 end_offset, cookie;
+	u8 rbm_id;
 
 	n_entries_per_buf = HAL_WBM_IDLE_SCATTER_BUF_SIZE /
 		ath12k_hal_srng_get_entrysize(ab, HAL_WBM_IDLE_LINK);
@@ -680,6 +681,7 @@ static int ath12k_dp_scatter_idle_link_desc_setup(struct ath12k_base *ab,
 	scatter_idx = 0;
 	scatter_buf = slist[scatter_idx].vaddr;
 	rem_entries = n_entries_per_buf;
+	rbm_id = dp->idle_link_rbm_id;
 
 	for (i = 0; i < n_link_desc_bank; i++) {
 		align_bytes = link_desc_banks[i].vaddr -
@@ -689,7 +691,8 @@ static int ath12k_dp_scatter_idle_link_desc_setup(struct ath12k_base *ab,
 		paddr = link_desc_banks[i].paddr;
 		while (n_entries) {
 			cookie = DP_LINK_DESC_COOKIE_SET(n_entries, i);
-			ath12k_hal_set_link_desc_addr(scatter_buf, cookie, paddr);
+			ath12k_hal_set_link_desc_addr(scatter_buf, cookie,
+						      paddr, rbm_id);
 			n_entries--;
 			paddr += HAL_LINK_DESC_SIZE;
 			if (rem_entries) {
@@ -830,6 +833,7 @@ int ath12k_dp_link_desc_setup(struct ath12k_base *ab,
 	u32 *desc;
 	int i, ret;
 	u32 cookie;
+	u8 rbm_id;
 
 	tot_mem_sz = n_link_desc * HAL_LINK_DESC_SIZE;
 	tot_mem_sz += HAL_LINK_DESC_ALIGN;
@@ -860,6 +864,7 @@ int ath12k_dp_link_desc_setup(struct ath12k_base *ab,
 	/* Setup link desc idle list for HW internal usage */
 	entry_sz = ath12k_hal_srng_get_entrysize(ab, ring_type);
 	tot_mem_sz = entry_sz * n_link_desc;
+	rbm_id = ab->dp.idle_link_rbm_id;
 
 	/* Setup scatter desc list when the total memory requirement is more */
 	if (tot_mem_sz > DP_LINK_DESC_ALLOC_SIZE_THRESH) {
@@ -890,7 +895,7 @@ int ath12k_dp_link_desc_setup(struct ath12k_base *ab,
 		       (desc = ath12k_hal_srng_src_get_next_entry(ab, srng))) {
 			cookie = DP_LINK_DESC_COOKIE_SET(n_entries, i);
 			ath12k_hal_set_link_desc_addr((struct hal_wbm_link_desc *)desc,
-						      cookie, paddr);
+						      cookie, paddr, rbm_id);
 			n_entries--;
 			paddr += HAL_LINK_DESC_SIZE;
 		}
@@ -1580,6 +1585,7 @@ int ath12k_dp_alloc(struct ath12k_base *ab)
 	spin_lock_init(&dp->reo_cmd_lock);
 
 	dp->reo_cmd_cache_flush_count = 0;
+	dp->idle_link_rbm_id = HAL_RX_BUF_RBM_WBM_CHIP0_IDLE_DESC_LIST + ab->chip_id;
 
 	ret = ath12k_wbm_idle_ring_setup(ab, &n_link_desc);
 	if (ret) {
diff --git a/drivers/net/wireless/ath/ath12k/dp.h b/drivers/net/wireless/ath/ath12k/dp.h
index c0ff609..861b4ca 100644
--- a/drivers/net/wireless/ath/ath12k/dp.h
+++ b/drivers/net/wireless/ath/ath12k/dp.h
@@ -315,6 +315,7 @@ struct ath12k_dp {
 	u8 htt_tgt_ver_major;
 	u8 htt_tgt_ver_minor;
 	struct dp_link_desc_bank link_desc_banks[DP_LINK_DESC_BANKS_MAX];
+	u8 idle_link_rbm_id;
 	struct dp_srng wbm_idle_ring;
 	struct dp_srng wbm_desc_rel_ring;
 	struct dp_srng tcl_cmd_ring;
diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index a99f5aa..7d6a139 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -3560,7 +3560,7 @@ static int ath12k_dp_rx_h_defrag_reo_reinject(struct ath12k *ar,
 	memset(reo_ent_ring, 0, sizeof(*reo_ent_ring));
 
 	ath12k_hal_rx_buf_addr_info_set(reo_ent_ring, link_paddr, cookie,
-					HAL_RX_BUF_RBM_WBM_CHIP0_IDLE_DESC_LIST);
+					dp->idle_link_rbm_id);
 
 	mpdu_info = u32_encode_bits(1, RX_MPDU_DESC_INFO0_MSDU_COUNT) |
 		    u32_encode_bits(0, RX_MPDU_DESC_INFO0_FRAG_FLAG) |
@@ -3931,7 +3931,7 @@ int ath12k_dp_rx_process_err(struct ath12k_base *ab, struct napi_struct *napi,
 			       (paddr - link_desc_banks[desc_bank].paddr);
 		ath12k_hal_rx_msdu_link_info_get(link_desc_va, &num_msdus, msdu_cookies,
 						 &rbm);
-		if (rbm != HAL_RX_BUF_RBM_WBM_CHIP0_IDLE_DESC_LIST &&
+		if (rbm != dp->idle_link_rbm_id &&
 		    rbm != HAL_RX_BUF_RBM_SW3_BM &&
 		    rbm != ab->hw_params->hal_params->rx_buf_rbm) {
 			ab->soc_stats.invalid_rbm++;
diff --git a/drivers/net/wireless/ath/ath12k/hal.c b/drivers/net/wireless/ath/ath12k/hal.c
index dd638f3..dbc5d87 100644
--- a/drivers/net/wireless/ath/ath12k/hal.c
+++ b/drivers/net/wireless/ath/ath12k/hal.c
@@ -1548,14 +1548,14 @@ u32 ath12k_hal_ce_dst_status_get_length(void *buf)
 }
 
 void ath12k_hal_set_link_desc_addr(struct hal_wbm_link_desc *desc, u32 cookie,
-				   dma_addr_t paddr)
+				   dma_addr_t paddr, u8 rbm_id)
 {
 	desc->buf_addr_info.info0 = u32_encode_bits((paddr & HAL_ADDR_LSB_REG_MASK),
 						    BUFFER_ADDR_INFO0_ADDR);
 	desc->buf_addr_info.info1 =
 			u32_encode_bits(((u64)paddr >> HAL_ADDR_MSB_REG_SHIFT),
 					BUFFER_ADDR_INFO1_ADDR) |
-			u32_encode_bits(1, BUFFER_ADDR_INFO1_RET_BUF_MGR) |
+			u32_encode_bits(rbm_id, BUFFER_ADDR_INFO1_RET_BUF_MGR) |
 			u32_encode_bits(cookie, BUFFER_ADDR_INFO1_SW_COOKIE);
 }
 
diff --git a/drivers/net/wireless/ath/ath12k/hal.h b/drivers/net/wireless/ath/ath12k/hal.h
index 498be29..7cfef2e 100644
--- a/drivers/net/wireless/ath/ath12k/hal.h
+++ b/drivers/net/wireless/ath/ath12k/hal.h
@@ -1121,8 +1121,8 @@ dma_addr_t ath12k_hal_srng_get_tp_addr(struct ath12k_base *ab,
 				       struct hal_srng *srng);
 dma_addr_t ath12k_hal_srng_get_hp_addr(struct ath12k_base *ab,
 				       struct hal_srng *srng);
-void ath12k_hal_set_link_desc_addr(struct hal_wbm_link_desc *desc, u32 cookie,
-				   dma_addr_t paddr);
+void ath12k_hal_set_link_desc_addr(struct hal_wbm_link_desc *desc,
+				   u32 cookie, dma_addr_t paddr, u8 rbm_id);
 u32 ath12k_hal_ce_get_desc_size(enum hal_ce_desc type);
 void ath12k_hal_ce_src_set_desc(void *buf, dma_addr_t paddr, u32 len, u32 id,
 				u8 byte_swap_data);
-- 
2.17.1


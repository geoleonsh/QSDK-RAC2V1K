From 3dc80c963eeb4c7cc1aaa0dd3ddfc01d5fe96ab1 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <quic_haric@quicinc.com>
Date: Thu, 19 Jan 2023 19:17:08 +0530
Subject: [PATCH] ath12k: fix memory leak in dp rx

In dp rx path, by default, fast_rx is set as true.
And if peer supports fast rx, the frame is sent to upper layer
through netif_receive_skb.

If peer doesn't support fast rx, the frames need to be processed in
ath12k_dp_rx_deliver_msdu and sent to mac80211 using ieee80211_rx_napi.
In dp rx path, the api ath12k_dp_rx_h_mpdu checks whether peer supports
fast rx.

If peer find fails in ath12k_dp_rx_h_mpdu, the skb is not sent to network stack
as well as mac80211. Because the argument fast_rx is not set to false in ath12k_dp_rx_h_mpdu
when peer find fails.

This can lead to memory leak.

Fix it by setting argument fast_rx as false in ath12k_dp_rx_h_mpdu
so that the skb is sent to mac80211 through ath12k_dp_rx_deliver_msdu.

Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index 2806779..1644d07 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -2698,7 +2698,6 @@ static void ath12k_dp_rx_h_mpdu(struct ath12k *ar,
 				return;
 		        }
 		}
-		*fast_rx = false;
 		if (rxcb->is_mcbc)
 			enctype = peer->sec_type_grp;
 		else
@@ -2708,6 +2707,8 @@ static void ath12k_dp_rx_h_mpdu(struct ath12k *ar,
 	}
 	spin_unlock_bh(&ar->ab->base_lock);
 
+	*fast_rx = false;
+
 	err_bitmap = ath12k_dp_rx_h_mpdu_err(ab, rx_desc);
 	if (enctype != HAL_ENCRYPT_TYPE_OPEN && !err_bitmap)
 		is_decrypted = ath12k_dp_rx_h_is_decrypted(ab, rx_desc);
-- 
2.7.4


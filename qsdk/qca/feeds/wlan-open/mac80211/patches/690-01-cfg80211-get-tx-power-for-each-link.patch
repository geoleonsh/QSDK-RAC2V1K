From 6346b88a2efabf84fa41ef4e115c8c0b76d38816 Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Wed, 30 Nov 2022 16:46:56 +0530
Subject: [PATCH] cfg80211: get tx power for each link

Currently, we are getting tx power for each phy, but in
multi-link operation each phy has multiple links which
operate in different bands, so their tx power will
also be different.

Add support to get tx power for each link

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 include/net/cfg80211.h     | 2 +-
 net/wireless/nl80211.c     | 5 ++---
 net/wireless/rdev-ops.h    | 7 ++++---
 net/wireless/trace.h       | 5 +++--
 net/wireless/wext-compat.c | 2 +-
 5 files changed, 11 insertions(+), 10 deletions(-)

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index f273b3b..c85bb18 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -4494,7 +4494,7 @@ struct cfg80211_ops {
 	int	(*set_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
 				enum nl80211_tx_power_setting type, int mbm);
 	int	(*get_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
-				int *dbm);
+				unsigned int link_id, int *dbm);
 
 	void	(*rfkill_poll)(struct wiphy *wiphy);
 
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 7ba1e02..2af9865 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -3989,8 +3989,7 @@ static int nl80211_send_iface(struct sk_buff *msg, u32 portid, u32 seq, int flag
 			}
 			if (rdev->ops->get_tx_power) {
 				int dbm, ret;
-				/* TODO find tx_power according to link_id */
-				ret = rdev_get_tx_power(rdev, wdev, &dbm);
+				ret = rdev_get_tx_power(rdev, wdev, link_id, &dbm);
 				if (ret == 0 &&
 				    nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
 				    DBM_TO_MBM(dbm)))
@@ -4017,7 +4016,7 @@ static int nl80211_send_iface(struct sk_buff *msg, u32 portid, u32 seq, int flag
 		}
 		if (rdev->ops->get_tx_power) {
 			int dbm, ret;
-			ret = rdev_get_tx_power(rdev, wdev, &dbm);
+			ret = rdev_get_tx_power(rdev, wdev, 0, &dbm);
 			if (ret == 0 &&
 			    nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
 			    DBM_TO_MBM(dbm)))
diff --git a/net/wireless/rdev-ops.h b/net/wireless/rdev-ops.h
index 3a1c3f8..f52bf0f 100644
--- a/net/wireless/rdev-ops.h
+++ b/net/wireless/rdev-ops.h
@@ -579,11 +579,12 @@ static inline int rdev_set_tx_power(struct cfg80211_registered_device *rdev,
 }
 
 static inline int rdev_get_tx_power(struct cfg80211_registered_device *rdev,
-				    struct wireless_dev *wdev, int *dbm)
+				    struct wireless_dev *wdev,
+				    unsigned int link_id, int *dbm)
 {
 	int ret;
-	trace_rdev_get_tx_power(&rdev->wiphy, wdev);
-	ret = rdev->ops->get_tx_power(&rdev->wiphy, wdev, dbm);
+	trace_rdev_get_tx_power(&rdev->wiphy, wdev, link_id);
+	ret = rdev->ops->get_tx_power(&rdev->wiphy, wdev, link_id, dbm);
 	trace_rdev_return_int_int(&rdev->wiphy, ret, *dbm);
 	return ret;
 }
diff --git a/net/wireless/trace.h b/net/wireless/trace.h
index f3e2ba7..5c47d7b 100644
--- a/net/wireless/trace.h
+++ b/net/wireless/trace.h
@@ -1564,8 +1564,9 @@ TRACE_EVENT(rdev_set_wiphy_params,
 );
 
 DEFINE_EVENT(wiphy_wdev_evt, rdev_get_tx_power,
-	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev),
-	TP_ARGS(wiphy, wdev)
+	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev,
+		 unsigned int link_id),
+	TP_ARGS(wiphy, wdev, link_id)
 );
 
 TRACE_EVENT(rdev_set_tx_power,
diff --git a/net/wireless/wext-compat.c b/net/wireless/wext-compat.c
index a9767bf..42da984 100644
--- a/net/wireless/wext-compat.c
+++ b/net/wireless/wext-compat.c
@@ -974,7 +974,7 @@ static int cfg80211_wext_giwtxpower(struct net_device *dev,
 		return -EOPNOTSUPP;
 
 	wiphy_lock(&rdev->wiphy);
-	err = rdev_get_tx_power(rdev, wdev, &val);
+	err = rdev_get_tx_power(rdev, wdev, 0, &val);
 	wiphy_unlock(&rdev->wiphy);
 	if (err)
 		return err;
-- 
2.17.1


From bfc11404ba756355a513c7a8c6279ebbb4ddcd90 Mon Sep 17 00:00:00 2001
From: Nidhi Jain <quic_nidhjain@quicinc.com>
Date: Fri, 8 Apr 2022 16:50:41 +0530
Subject: [PATCH] ath11k: Destroy debugfs during firmware recovery.

During firmware recovery of core, destroy existing debugfs
files. Now, on issuing ifconfig wlanX down/up, the debugfs
files will be newly created. This avoids below prints.

debugfs: File 'mac_filter' in directory 'netdev:wlan0'
already present!
debugfs: File 'wbm_tx_completion_stats' in directory
'netdev:wlan0' already present!
debugfs: File 'ampdu_aggr_size' in directory 'netdev:wlan0'
already present!
debugfs: File 'amsdu_aggr_size' in directory 'netdev:wlan0'
already present!
debugfs: File 'wmi_ctrl_stats' in directory 'netdev:wlan0'
already present!
debugfs: Directory 'twt' with parent 'netdev:wlan0' already
present!

Signed-off-by: Nidhi Jain <quic_nidhjain@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/core.h |  9 ++++
 drivers/net/wireless/ath/ath11k/mac.c  | 75 ++++++++++++++++++++++++++++++++++
 2 files changed, 84 insertions(+)

--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -8015,6 +8015,14 @@ static int ath11k_mac_vdev_delete(struct
 	return ret;
 }
 
+void ath11k_debugfs_per_arvif(struct ath11k_vif *arvif)
+{
+	ath11k_debugfs_dbg_mac_filter(arvif);
+	ath11k_debugfs_wbm_tx_comp_stats(arvif);
+	ath11k_debug_aggr_size_config_init(arvif);
+	ath11k_debugfs_wmi_ctrl_stats(arvif);
+}
+
 static int ath11k_mac_op_add_interface(struct ieee80211_hw *hw,
 				       struct ieee80211_vif *vif)
 {
@@ -8111,13 +8119,6 @@ static int ath11k_mac_op_add_interface(s
 		goto err;
 	}
 
-	if (ar->state != ATH11K_STATE_RESTARTED) {
-		ath11k_debugfs_dbg_mac_filter(arvif);
-		ath11k_debugfs_wbm_tx_comp_stats(arvif);
-	} else {
-		INIT_LIST_HEAD(&arvif->mac_filters);
-	}
-
 	switch (vif->type) {
 	case NL80211_IFTYPE_UNSPECIFIED:
 	case NL80211_IFTYPE_STATION:
@@ -8310,13 +8311,8 @@ static int ath11k_mac_op_add_interface(s
 	if (ret)
 		ath11k_warn(ar->ab, "failed to set ap ps ret %d\n", ret);
 
-	if (ar->state != ATH11K_STATE_RESTARTED) {
-		ath11k_debug_aggr_size_config_init(arvif);
-		ath11k_debugfs_wmi_ctrl_stats(arvif);
-	} else {
-		INIT_LIST_HEAD(&arvif->ar->debug.wmi_list);
-		init_completion(&arvif->ar->debug.wmi_ctrl_path_stats_rcvd);
-	}
+	if (arvif->vif->debugfs_dir)
+		ath11k_debugfs_per_arvif(arvif);
 
 	mutex_unlock(&ar->conf_mutex);
 
@@ -8358,6 +8354,32 @@ static int ath11k_mac_vif_unref(int buf_
 	return 0;
 }
 
+void ath11k_mac_debugfs_remove_stats_file(struct ath11k_vif *arvif)
+{
+	/* Remove TWT related files and directory */
+	debugfs_remove_recursive(arvif->debugfs_twt);
+	arvif->debugfs_twt = NULL;
+
+	/* Remove A-MPDU, A-MSDU aggr size files */
+	debugfs_remove(arvif->ampdu_aggr_size);
+	arvif->ampdu_aggr_size = NULL;
+
+	debugfs_remove(arvif->amsdu_aggr_size);
+	arvif->amsdu_aggr_size = NULL;
+
+	/* Remove wmi ctrl stats file */
+	debugfs_remove(arvif->wmi_ctrl_stat);
+	arvif->wmi_ctrl_stat = NULL;
+
+	/* Remove the mac filter file */
+	debugfs_remove(arvif->mac_filter);
+	arvif->mac_filter = NULL;
+
+	/* Remove the wbm tx compl stats file */
+	debugfs_remove(arvif->wbm_tx_completion_stats);
+	arvif->wbm_tx_completion_stats = NULL;
+}
+
 static void ath11k_mac_op_remove_interface(struct ieee80211_hw *hw,
 					   struct ieee80211_vif *vif)
 {
@@ -8463,24 +8485,8 @@ err_vdev_del:
 
 	/* TODO: recal traffic pause state based on the available vdevs */
 
-	/* Remove A-MPDU, A-MSDU aggr size files */
-	debugfs_remove(arvif->ampdu_aggr_size);
-	arvif->ampdu_aggr_size = NULL;
-
-	debugfs_remove(arvif->amsdu_aggr_size);
-	arvif->amsdu_aggr_size = NULL;
-
-	/* Remove wmi ctrl stats file */
-	debugfs_remove(arvif->wmi_ctrl_stat);
-	arvif->wmi_ctrl_stat = NULL;
-
-	/* Remove the mac filter file */
-	debugfs_remove(arvif->mac_filter);
-	arvif->mac_filter = NULL;
-
-	/* Remove the wbm tx compl stats file */
-	debugfs_remove(arvif->wbm_tx_completion_stats);
-	arvif->wbm_tx_completion_stats = NULL;
+	if (arvif->vif->debugfs_dir)
+		ath11k_mac_debugfs_remove_stats_file(arvif);
 
 unlock:
 	mutex_unlock(&ar->conf_mutex);
--- a/drivers/net/wireless/ath/ath11k/core.c
+++ b/drivers/net/wireless/ath/ath11k/core.c
@@ -2156,6 +2156,7 @@ static void ath11k_core_pre_reconfigure_
 {
 	struct ath11k *ar;
 	struct ath11k_pdev *pdev;
+	struct ath11k_vif *arvif;
 	int i;
 
 	spin_lock_bh(&ab->base_lock);
@@ -2169,6 +2170,9 @@ static void ath11k_core_pre_reconfigure_
 		    ar->state == ATH11K_STATE_TM)
 			continue;
 
+		list_for_each_entry(arvif, &ar->arvifs, list)
+			ath11k_mac_debugfs_remove_stats_file(arvif);
+
 		ieee80211_stop_queues(ar->hw);
 		ath11k_mac_drain_tx(ar);
 		ar->state_11d = ATH11K_11D_IDLE;
--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -103,18 +103,9 @@ static ssize_t ath11k_write_wmi_ctrl_pat
 {
 	struct ath11k_vif *arvif = file->private_data;
 	struct wmi_ctrl_path_stats_cmd_param param = {0};
-	struct ath11k *ar = arvif->ar;
 	u8 buf[128] = {0};
 	int ret;
 
-	mutex_lock(&ar->conf_mutex);
-	if (ar->state != ATH11K_STATE_ON) {
-		ath11k_warn(ar->ab, "pdev %d not in ON state\n", ar->pdev->pdev_id);
-		mutex_unlock(&ar->conf_mutex);
-		return -ENETDOWN;
-	}
-	mutex_unlock(&ar->conf_mutex);
-
 	ret = simple_write_to_buffer(buf, sizeof(buf) - 1, ppos, ubuf, count);
 	if (ret < 0) {
 		return ret;
@@ -575,19 +566,10 @@ static ssize_t ath11k_write_ampdu_aggr_s
 {
 	struct ath11k_vif *arvif = file->private_data;
 	struct ath11k_base *ab = arvif->ar->ab;
-	struct ath11k *ar = arvif->ar;
 	unsigned int tx_aggr_size = 0;
 	int ret;
 	struct set_custom_aggr_size_params params = {0};
 
-	mutex_lock(&ar->conf_mutex);
-	if (ar->state != ATH11K_STATE_ON) {
-		ath11k_warn(ar->ab, "pdev %d not in ON state\n", ar->pdev->pdev_id);
-		mutex_unlock(&ar->conf_mutex);
-		return -ENETDOWN;
-	}
-	mutex_unlock(&ar->conf_mutex);
-
 	if (kstrtouint_from_user(ubuf, count, 0, &tx_aggr_size))
 		return -EINVAL;
 
--- a/drivers/net/wireless/ath/ath11k/mac.h
+++ b/drivers/net/wireless/ath/ath11k/mac.h
@@ -185,4 +185,5 @@ bool ath11k_mac_sta_level_info(struct at
 void ath11k_mac_get_any_chandef_iter(struct ieee80211_hw *hw,
 				     struct ieee80211_chanctx_conf *conf,
 				     void *data);
+void ath11k_mac_debugfs_remove_stats_file(struct ath11k_vif *arvif);
 #endif

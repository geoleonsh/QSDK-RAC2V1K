From 994cb93f45c781f4ef280825f9bf652c0065b59e Mon Sep 17 00:00:00 2001
From: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
Date: Thu, 20 Jul 2023 20:27:43 +0530
Subject: [PATCH 3/4] hostapd: revert acs patch introduce acs_adjust_secondary

In upgraded hostapd use the patch series
"ACS: better channel selection for 40/80/160 MHz" introduce the logic
acs use adjust secondary channel to the other channel of the corresponding
segments which determine the invalid center frequency causes
the ap bring up issue in acs mode.

Reverted the acs patch series and update the changes before hostapd upgrade.

The reverts commit: https://w1.fi/cgit/hostap/commit/?id=472101684b4982585989be8fc4d63dcafed2586e

Signed-off-by: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
---
 src/ap/acs.c | 47 +----------------------------------------------
 1 file changed, 1 insertion(+), 46 deletions(-)

diff --git a/src/ap/acs.c b/src/ap/acs.c
index 576cbe5..bc5dfcf 100644
--- a/src/ap/acs.c
+++ b/src/ap/acs.c
@@ -638,27 +638,6 @@ acs_find_chan_mode(struct hostapd_hw_modes *mode, int freq)
 	return NULL;
 }
 
-
-static enum hostapd_hw_mode
-acs_find_mode(struct hostapd_iface *iface, int freq)
-{
-	int i;
-	struct hostapd_hw_modes *mode;
-	struct hostapd_channel_data *chan;
-
-	for (i = 0; i < iface->num_hw_features; i++) {
-		mode = &iface->hw_features[i];
-		if (!hostapd_hw_skip_mode(iface, mode)) {
-			chan = acs_find_chan_mode(mode, freq);
-			if (chan)
-				return mode->mode;
-		}
-	}
-
-	return HOSTAPD_MODE_IEEE80211ANY;
-}
-
-
 static struct hostapd_channel_data *
 acs_find_chan(struct hostapd_iface *iface, int freq)
 {
@@ -1223,28 +1202,6 @@ bw_selected:
 	return rand_chan;
 }
 
-
-static void acs_adjust_secondary(struct hostapd_iface *iface)
-{
-	unsigned int i;
-
-	/* When working with bandwidth over 20 MHz on the 5 GHz or 6 GHz band,
-	 * ACS can return a secondary channel which is not the first channel of
-	 * the segment and we need to adjust. */
-	if (!iface->conf->secondary_channel ||
-	    acs_find_mode(iface, iface->freq) != HOSTAPD_MODE_IEEE80211A)
-		return;
-
-	wpa_printf(MSG_DEBUG, "ACS: Adjusting HT/VHT/HE secondary frequency");
-
-	for (i = 0; bw_desc[ACS_BW40][i].first != -1; i++) {
-		if (iface->freq == bw_desc[ACS_BW40][i].first)
-			iface->conf->secondary_channel = 1;
-		else if (iface->freq == bw_desc[ACS_BW40][i].last)
-			iface->conf->secondary_channel = -1;
-	}
-}
-
 static int acs_get_center_freq_320mhz(int channel)
 {
 	if (channel >= 1 && channel <= 45)
@@ -1393,10 +1350,8 @@ static void acs_study(struct hostapd_iface *iface)
 	iface->conf->ru_punct_bitmap = ideal_chan->ru_punct_bitmap;
 
 	if (iface->conf->ieee80211ac || iface->conf->ieee80211ax ||
-	    iface->conf->ieee80211be) {
-		acs_adjust_secondary(iface);
+	    iface->conf->ieee80211be)
 		acs_adjust_center_freq(iface);
-	}
 
 	err = hostapd_select_hw_mode(iface);
 	if (err) {
-- 
2.17.1


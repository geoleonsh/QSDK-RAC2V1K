From 885f408a47db67a8545917025f338f948ee24a0f Mon Sep 17 00:00:00 2001
From: Balamurugan Selvarajan <quic_bselvara@quicinc.com>
Date: Mon, 25 Jul 2022 16:35:09 +0530
Subject: [PATCH] ath12k: Update DP irq names during registration for affinity
 setup

Update the dp irq names based on pci domain id and irq idx or group
so that these could be displayed appropriately in proc/interrupts and can
also aid in defining the affinity settings for them based on name.

Signed-off-by: Balamurugan Selvarajan <quic_bselvara@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/pci.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

Index: backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath12k/pci.c
===================================================================
--- backports-20220404-5.4.164-f40abb4788.orig/drivers/net/wireless/ath/ath12k/pci.c
+++ backports-20220404-5.4.164-f40abb4788/drivers/net/wireless/ath/ath12k/pci.c
@@ -41,6 +41,10 @@
 
 #define PCIE_PCIE_LOCAL_REG_PCIE_LOCAL_RSV0	0x1E03164
 #define QRTR_INSTANCE_MASK			0x000000FF
+#define ATH12K_MAX_PCI_DOMAINS		0x5
+#define DP_IRQ_NAME_LEN 20
+
+char dp_irq_name[ATH12K_MAX_PCI_DOMAINS + 1][ATH12K_EXT_IRQ_GRP_NUM_MAX][DP_IRQ_NAME_LEN] = {};
 
 unsigned int ath12k_fw_mem_seg;
 EXPORT_SYMBOL(ath12k_fw_mem_seg);
@@ -555,6 +559,7 @@ static int ath12k_pci_ext_irq_config(str
 {
 	int i, j, ret, num_vectors = 0;
 	u32 user_base_data = 0, base_vector = 0, base_idx;
+	struct ath12k_pci *ar_pci = (struct ath12k_pci *)ab->drv_priv;
 
 	base_idx = ATH12K_PCI_IRQ_CE0_OFFSET + CE_COUNT_MAX;
 	ret = ath12k_pci_get_user_msi_assignment(ab, "DP",
@@ -591,16 +596,27 @@ static int ath12k_pci_ext_irq_config(str
 			int irq_idx = irq_grp->irqs[j];
 			int vector = (i % num_vectors) + base_vector;
 			int irq = ath12k_pci_get_msi_irq(ab->dev, vector);
+			u8 bus_id = pci_domain_nr(ar_pci->pdev->bus);
+			if (bus_id > ATH12K_MAX_PCI_DOMAINS) {
+				ath12k_warn(ab, ATH12K_DBG_PCI, "bus_id:%d\n",
+					    bus_id);
+				bus_id = ATH12K_MAX_PCI_DOMAINS;
+			}
 
 			ab->irq_num[irq_idx] = irq;
 
 			ath12k_dbg(ab, ATH12K_DBG_PCI,
 				   "irq:%d group:%d\n", irq, i);
 
+			scnprintf(dp_irq_name[bus_id][i], DP_IRQ_NAME_LEN,
+				"pci%u_wlan_dp_%u", bus_id, i);
+			ath12k_dbg(ab, ATH12K_DBG_PCI,
+				"PCI bus id: pci:%d IRQ Name:%s\n",
+						bus_id, dp_irq_name[bus_id][i]);
 			irq_set_status_flags(irq, IRQ_DISABLE_UNLAZY);
 			ret = request_irq(irq, ath12k_pci_ext_interrupt_handler,
 					  IRQF_SHARED,
-					  "DP_EXT_IRQ", irq_grp);
+					  dp_irq_name[bus_id][i], irq_grp);
 			if (ret) {
 				ath12k_err(ab, "failed request irq %d: %d\n",
 					   vector, ret);

From f38189301889870bcb45f0bed4f2fec637d18348 Mon Sep 17 00:00:00 2001
From: Balamurugan Selvarajan <quic_bselvara@quicinc.com>
Date: Thu, 17 Mar 2022 10:12:36 +0530
Subject: [PATCH] ath12k: Add fw recovery support

Added fw recovery support. Introduced a debugfs set_fw_recovery,
based on this flag, the functionality decides whether to do full
or firmware reboot upon crash.

Signed-off-by: Balamurugan Selvarajan <quic_bselvara@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/debugfs.c | 49 +++++++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/debugfs.c b/drivers/net/wireless/ath/ath12k/debugfs.c
index b8050c5..6af8d51 100644
--- a/drivers/net/wireless/ath/ath12k/debugfs.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs.c
@@ -912,11 +912,60 @@ static const struct file_operations fops_trace_qdss = {
 	.llseek = default_llseek,
 };
 
+static ssize_t ath12k_debug_write_fw_recovery(struct file *file,
+					      char __user *user_buf,
+					      size_t count, loff_t *ppos)
+{
+	struct ath12k_base *ab = file->private_data;
+	unsigned int value;
+	int ret;
+
+	if (kstrtouint_from_user(user_buf, count, 0, &value))
+	         return -EINVAL;
+
+	if (value < ATH12K_FW_RECOVERY_DISABLE ||
+	    value > ATH12K_FW_RECOVERY_ENABLE_SSR_ONLY) {
+	         ath12k_warn(ab, "Please enter: 0 = Disable, 1 = Enable (auto recover),"
+	                     "2 = Enable SSR only");
+	         ret = -EINVAL;
+	         goto exit;
+	}
+
+	ab->fw_recovery_support = value ? true : false;
+
+	ret = count;
+
+exit:
+	return ret;
+}
+
+static ssize_t ath12k_debug_read_fw_recovery(struct file *file,
+					 char __user *user_buf,
+					 size_t count, loff_t *ppos)
+{
+	struct ath12k_base *ab = file->private_data;
+	char buf[32];
+	size_t len;
+
+	len = scnprintf(buf, sizeof(buf), "%u\n", ab->fw_recovery_support);
+
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static const struct file_operations fops_fw_recovery = {
+	.read = ath12k_debug_read_fw_recovery,
+	.write = ath12k_debug_write_fw_recovery,
+	.open = simple_open,
+};
+
 int ath12k_debugfs_pdev_create(struct ath12k_base *ab)
 {
 	if (test_bit(ATH12K_FLAG_REGISTERED, &ab->dev_flags))
 		return 0;
 
+	debugfs_create_file("set_fw_recovery", 0600, ab->debugfs_soc, ab,
+			    &fops_fw_recovery);
+
 	debugfs_create_file("simulate_fw_crash", 0600, ab->debugfs_soc, ab,
 			    &fops_simulate_fw_crash);
 
-- 
2.17.1

